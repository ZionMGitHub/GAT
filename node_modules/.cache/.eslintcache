[{"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/index.js":"1","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/App.js":"2","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/comicDash.js":"3","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/global_styles.js":"4","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/comicverse.js":"5","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/mint.js":"6","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/navbar.js":"7","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/roadmap.js":"8","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/landing.js":"9","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/story.js":"10","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/mintDash.js":"11","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/join.js":"12","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/team.js":"13","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/preloader.js":"14","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/popup.js":"15","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/charDev.js":"16","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/comic.js":"17","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/data.js":"18","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/textbox.js":"19","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/sidebar2.js":"20","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/whitelistModal.js":"21","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/Shaders/ShaderEnter.js":"22","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/Shaders/ShaderExit.js":"23","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/comicverseDashboard.js":"24","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/dashboard/index.js":"25","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/mobileTextViewer.js":"26","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/mainDisplay.js":"27","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/mintComic.js":"28","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/selected.js":"29","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/traits.js":"30","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/previewModal.js":"31","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/inventory.js":"32","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/comicReducer.js":"33","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/dashboard/dashboardElements.js":"34","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/nftCard.js":"35","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/ytdBox/index.js":"36","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/distributedBox/index.js":"37","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/activityBox/index.js":"38","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/collectionBox/index.js":"39","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/HelpBox.js":"40","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/collectionBox/collectionElements.js":"41","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/ytdBox/ytdElements.js":"42","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/activityBox/activityElements.js":"43","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/distributedBox/distributedElements.js":"44"},{"size":855,"mtime":1656009704339,"results":"45","hashOfConfig":"46"},{"size":16935,"mtime":1656009703900,"results":"47","hashOfConfig":"46"},{"size":13044,"mtime":1656009704400,"results":"48","hashOfConfig":"46"},{"size":13536,"mtime":1656009704328,"results":"49","hashOfConfig":"46"},{"size":915,"mtime":1656009704244,"results":"50","hashOfConfig":"46"},{"size":999,"mtime":1656009704290,"results":"51","hashOfConfig":"46"},{"size":13586,"mtime":1656358741838,"results":"52","hashOfConfig":"46"},{"size":7819,"mtime":1656009704299,"results":"53","hashOfConfig":"46"},{"size":2405,"mtime":1656009704285,"results":"54","hashOfConfig":"46"},{"size":639,"mtime":1656009704305,"results":"55","hashOfConfig":"46"},{"size":25097,"mtime":1656009704406,"results":"56","hashOfConfig":"46"},{"size":1681,"mtime":1656009704259,"results":"57","hashOfConfig":"46"},{"size":11555,"mtime":1656009704308,"results":"58","hashOfConfig":"46"},{"size":1448,"mtime":1656009704314,"results":"59","hashOfConfig":"46"},{"size":3843,"mtime":1656009704297,"results":"60","hashOfConfig":"46"},{"size":3935,"mtime":1656009704239,"results":"61","hashOfConfig":"46"},{"size":3707,"mtime":1656009704241,"results":"62","hashOfConfig":"46"},{"size":8757,"mtime":1656009704258,"results":"63","hashOfConfig":"46"},{"size":2602,"mtime":1656009704310,"results":"64","hashOfConfig":"46"},{"size":4011,"mtime":1656009704304,"results":"65","hashOfConfig":"46"},{"size":2777,"mtime":1656009704312,"results":"66","hashOfConfig":"46"},{"size":1146,"mtime":1656009704384,"results":"67","hashOfConfig":"46"},{"size":1146,"mtime":1656009704386,"results":"68","hashOfConfig":"46"},{"size":6554,"mtime":1656009703976,"results":"69","hashOfConfig":"46"},{"size":9395,"mtime":1656009704170,"results":"70","hashOfConfig":"46"},{"size":3920,"mtime":1656009704292,"results":"71","hashOfConfig":"46"},{"size":1520,"mtime":1656009704047,"results":"72","hashOfConfig":"46"},{"size":5336,"mtime":1656009704061,"results":"73","hashOfConfig":"46"},{"size":7478,"mtime":1656009704084,"results":"74","hashOfConfig":"46"},{"size":4641,"mtime":1656009704086,"results":"75","hashOfConfig":"46"},{"size":9797,"mtime":1656009704078,"results":"76","hashOfConfig":"46"},{"size":8597,"mtime":1656009704046,"results":"77","hashOfConfig":"46"},{"size":6266,"mtime":1656009703931,"results":"78","hashOfConfig":"46"},{"size":3599,"mtime":1656009704167,"results":"79","hashOfConfig":"46"},{"size":1584,"mtime":1656009704072,"results":"80","hashOfConfig":"46"},{"size":922,"mtime":1656009704192,"results":"81","hashOfConfig":"46"},{"size":1708,"mtime":1656009704173,"results":"82","hashOfConfig":"46"},{"size":7269,"mtime":1656009704155,"results":"83","hashOfConfig":"46"},{"size":3935,"mtime":1656009704160,"results":"84","hashOfConfig":"46"},{"size":1091,"mtime":1656009704101,"results":"85","hashOfConfig":"46"},{"size":5287,"mtime":1656009704159,"results":"86","hashOfConfig":"46"},{"size":1887,"mtime":1656009704195,"results":"87","hashOfConfig":"46"},{"size":7982,"mtime":1656009704122,"results":"88","hashOfConfig":"46"},{"size":2149,"mtime":1656009704172,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"6ae1fi",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"92"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/index.js",[],["203","204"],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/App.js",["205","206","207","208","209"],"import React, { Component } from 'react';\nimport {GlobalStyle, Theme } from '../src/global_styles';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Link }  from 'react-scroll';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { isDesktop  } from 'react-device-detect';\nimport CookieConsent from \"react-cookie-consent\";\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport MintDash from './threeJs/mintDash';\nimport ComicDash from './threeJs/comicDash';\n\nimport  {Preloader}  from './components/preloader';\nimport Navbar  from './components/gat_components/navbar';\nimport { Landing } from '../src/components/gat_components/landing';\nimport { Story } from '../src/components/gat_components/story';\nimport { Comicverse } from '../src/components/gat_components/comicverse';\nimport { Mint } from '../src/components/gat_components/mint';\nimport { Roadmap } from '../src/components/gat_components/roadmap';\nimport { Comic } from '../src/components/gat_components/comic';\nimport { CharDev } from './components/gat_components/charDev';\nimport { Teams } from '../src/components/gat_components/team';\nimport { Join } from '../src/components/gat_components/join';\nimport { Popup } from './components/gat_components/popup';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getPerformance } from \"firebase/performance\";\n\nimport { useMoralis } from \"react-moralis\";\n\nimport { hotjar } from 'react-hotjar';\n\nlet mobileWidthCut = 770;\nlet dashboardCut = 900;\n\n\nclass App extends Component {\n\n   static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n   constructor(props) {\n    super(props);\n      const { cookies } = props;\n      this.state = {\n        mintDisplay: false,\n        comicDisplay: false,\n        bubbleComic: false,\n        bubbleMint: false,\n        loading: true,\n        desktop: false,\n        isVaultLocked: isDesktop ? cookies.get('isVaultLocked') || 'false' : false,  \n        showPopUp: false,\n      };\n      this.resizeWindow = this.resizeWindow.bind(this);\n      this.toggleIsVaultLocked = this.toggleIsVaultLocked.bind(this);\n      this.closePopUp = this.closePopUp.bind(this);\n \n\n      // console.log(`cookies set to ${this.state.isVaultLocked}`);\n    }\n    \n   \n\n    // sets up loading logic\n    async componentDidMount() {\n      window.addEventListener('resize', this.resizeWindow); \n      this.targetElement = document.querySelector('#body');\n\n      await disableBodyScroll(this.targetElement);\n      if (window.innerWidth > mobileWidthCut){\n          this.setState({ desktop: true });\n          // console.log(true);\n      }else{\n          this.setState({ desktop: false });\n          // console.log(false);\n      }\n      \n      await demoAsyncCall(1500).then(() => {\n        \n        this.setState({ loading: false });\n        this.resizeWindow();\n        enableBodyScroll(this.targetElement);\n        \n        // pop up for not deskop\n        const { cookies } = this.props;\n\n        if(!isDesktop &  cookies.get('hasVisited') !== 'true'){\n          demoAsyncCall(1000).then(()=>{\n              cookies.set('hasVisited', 'true', { path: '/' });\n              console.log('show pop');         \n              this.setState({showPopUp: true});\n          });\n\n        }\n      });\n      hotjar.initialize('2960422', 6);\n\n    }\n\n    // cookies handler\n    toggleIsVaultLocked = () =>{\n      const { cookies } = this.props;\n      if (this.state.isVaultLocked === 'true'){\n          cookies.set('isVaultLocked', 'false', { path: '/' });\n          this.setState({ isVaultLocked: 'false' });\n          // console.log(this.state.isVaultLocked);\n          return false;\n      }else{\n         cookies.set('isVaultLocked', 'true', { path: '/' });\n          this.setState({ isVaultLocked: 'true' });\n          // console.log(this.state.isVaultLocked);\n          return true;\n      } \n    }\n\n     // cookies handler\n    whitelistHandler = () =>{\n      const { cookies } = this.props;\n      // if (this.state.isVaultLocked === 'true'){\n      //     cookies.set('isVaultLocked', 'false', { path: '/' });\n      //     this.setState({ isVaultLocked: 'false' });\n      //     // console.log(this.state.isVaultLocked);\n      //     return false;\n      // }else{\n      //    cookies.set('isVaultLocked', 'true', { path: '/' });\n      //     this.setState({ isVaultLocked: 'true' });\n      //     // console.log(this.state.isVaultLocked);\n      //     return true;\n      // } \n    }\n\n    //called on resize event\n    resizeWindow = () => {\n        if (window.innerWidth > mobileWidthCut){\n          this.setState({ desktop: true });\n          // console.log(true);\n      }else{\n          this.setState({ desktop: false });\n          //  console.log(false);\n      }\n    }\n\n    // toggle mint dahsboard\n    toggleMintDash = (e,nav)=>{\n      if (isDesktop && window.innerWidth > dashboardCut)\n\n          {if(!this.state.mintDisplay){\n            setTimeout(() => {  \n                console.log('mint canvas display toggled on')  \n                if(nav ){\n                   console.log('nav')\n                    this.newScene = new React.createElement( MintDash , {callBackFunc:this.toggleMintDash, isVaultLocked: 'true', lockToggler: this.toggleIsVaultLocked}, null);\n                  }\n                else{\n                   console.log('regular')\n                  this.newScene = new React.createElement( MintDash , {callBackFunc:this.toggleMintDash, isVaultLocked: this.state.isVaultLocked, lockToggler: this.toggleIsVaultLocked}, null);}\n\n                this.setState({ mintDisplay: !this.state.mintDisplay });\n                disableBodyScroll(this.targetElement);       \n            }, 500);\n          } else{\n            console.log('mint canvas display toggled off');\n            this.setState({ mintDisplay: !this.state.mintDisplay });\n            enableBodyScroll(this.targetElement);\n          }}\n\n    }\n\n    // toggle comic dahsboard\n    toggleComicDash = ()=>{\n      if (isDesktop && window.innerWidth > dashboardCut)\n        { if(!this.state.comicDisplay ){\n            setTimeout(() => {  \n                console.log('comic canvas display toggled on')  \n                this.newScene = new React.createElement( ComicDash , {callBackFunc:this.toggleComicDash}, null);\n                this.setState({ comicDisplay: !this.state.comicDisplay });\n                disableBodyScroll(this.targetElement);\n            }, 500);\n          } else{\n            console.log('comic canvas display toggled off');\n            this.setState({ comicDisplay: !this.state.comicDisplay });\n            enableBodyScroll(this.targetElement);\n          }}\n    }\n\n    //close btn\n    closePopUp= ()=>{\n      setTimeout(() => {  this.setState({showPopUp:false})}, 1000);\n    }\n\n\n\n  render() {\n    // const { authenticate, isAuthenticated, user } = useMoralis();\n\n    return (\n\n    <div id='body'>\n          <GlobalStyle />  {/* sites styles */} \n            <ThemeProvider theme={Theme}>  {/* global variables */} \n            \n            {/* loading screen */}\n            {this.state.loading  ? <Preloader/> : ''}\n            {!this.state.loading ? \n              <CookieConsent\n                // debug={true}    //dev mode\n                expires={150}   //day amount before resetting\n                acceptOnScroll = {true} //accept on scroll\n                buttonStyle = {{backgroundColor: 'transparent', color:\"white\", border: 'solid 2px white', borderRadius: '1px', padding:'.5rem',fontSize: '1.1rem'}}\n                contentStyle = {{color: '#white', fontSize: '1rem' }}\n                style = {{backgroundColor: '#000000',opacity: .95}}\n              >This website uses cookies to enhance the user experience</CookieConsent> : ''}\n\n            {/* app body */}\n            <div style={{display: `${this.state.loading ? 'none': ''}`}}> \n\n             <Navbar\n                mintDashCall={this.toggleMintDash}  \n                comicDashCall={this.toggleComicDash} \n                isDesktopBG={this.state.desktop}/>\n\n              {this.state.showPopUp && <Popup closePopUp={this.closePopUp}/> }\n\n              <BackWrapper>\n                  <img \n                  src= {`${this.state.desktop  ? \"./images/bg.jpg\" : \"./images/bg_mobile.jpg\"}`} \n                  alt='bg' width={'100%'} \n                  // style={{ marginBottom: '-25px'}}\n                  />\n                 \n\n                    {/* landing section */}\n                   <Landing id='home' isDesktop={this.state.desktop}/>\n\n                   {/* story section */}\n                    <Story id='story' isDesktop={this.state.desktop}/>\n\n                    {/* comicverse section */}\n                    <Comicverse isDesktop={this.state.desktop}/>\n                    <Cloud id='cloud' isDesktop={this.state.desktop}>\n\n                    <CloudBtnWrapper isDesktop={this.state.desktop}\n                        onMouseEnter={e => {\n                         this.setState({ bubbleComic: true });\n                        }}\n                      \n                        onMouseLeave={e => {\n                        this.setState({ bubbleComic: false });\n                        }}        \n                    >\n                       {/* bubble */}\n                        {!isDesktop || window.innerWidth < dashboardCut ?  \n                            <Bubble  cloud={true} style={{  visibility: `${this.state.bubbleComic ? \"visible\": \"hidden\"}`,\n                                                opacity: `${this.state.bubbleComic ? \"1\": \"0\"}`}}>\n                          <TextWrap>\n                            <SubText>To visit this experience, view site on desktop.</SubText>\n                          </TextWrap>\n                      </Bubble> : ''}\n\n                      <Link\n                          to={'cloud'} \n                          smooth={true} \n                          duration={500} \n                          spy={true} \n                          exact={'true'} \n                          activeClass='active' >\n                        <CustomBtn onClick={this.toggleComicDash}/>\n                      </Link>\n                    </CloudBtnWrapper >\n                  </Cloud>\n                    \n\n                  {/* acropolis */}\n                  <Mint isDesktop={this.state.desktop}/>\n                  <Acropolis id='acropolis' isDesktop={this.state.desktop}>\n                        \n                    <AcropolisBtnWrapper isDesktop={this.state.desktop}\n                          onMouseEnter={e => {\n                         this.setState({ bubbleMint: true });\n                        }}\n                      \n                        onMouseLeave={e => {\n                        this.setState({ bubbleMint: false });\n                        }}       \n                    >\n\n                      {!isDesktop || window.innerWidth < dashboardCut ? \n                            <Bubble  box={'mint'} style={{  visibility: `${this.state.bubbleMint ? \"visible\": \"hidden\"}`,\n                                                opacity: `${this.state.bubbleMint ? \"1\": \"0\"}`}}>\n                          <TextWrap>\n                            <SubText>To visit this experience, view site on desktop.</SubText>\n                          </TextWrap>\n                      </Bubble>: ''}\n                      <Link\n                          to={'acropolis'} \n                          smooth={true} \n                          duration={500} \n                          spy={true} \n                          exact={'true'} \n                          activeClass='active' >\n                        <CustomBtn onClick={()=>{this.toggleMintDash(null,false)}}/>\n                      </Link>\n                    </AcropolisBtnWrapper>\n                  </Acropolis>\n                  \n                  {/* page elements */}\n                  <Roadmap id='roadmap' isDesktop={this.state.desktop}/>\n                  <Comic id='comic-creator' isDesktop={this.state.desktop}/>\n                  <CharDev id='characterDev' isDesktop={this.state.desktop}/>\n                  <Teams isDesktop={this.state.desktop}/>\n                  <Join isDesktop={this.state.desktop}/>\n\n                  {/* 3D scenes */}\n                  <div id='scenes'>\n                    {this.state.mintDisplay && <MintDashWrapper id='mintDash'>{this.newScene}</MintDashWrapper>}\n                    {this.state.comicDisplay && <ComicDashWrapper id='comicverse'>{this.newScene}</ComicDashWrapper>}\n                  </div>\n              </BackWrapper>\n              </div>\n            </ThemeProvider>\n        </div>\n\n    );\n  }\n}\n\nexport default withCookies(App);\n\n\nfunction demoAsyncCall(time) {\n  return new Promise((resolve) => setTimeout(() => resolve(), time));//1500\n}\n\n// ////////// FIREBASE SETUP ////////////////////////\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBVUE1T6xqjhxg0oWWYVmHRGXBLfs7i8pg\",\n  authDomain: \"gt-dev-ca5f4.firebaseapp.com\",\n  projectId: \"gt-dev-ca5f4\",\n  storageBucket: \"gt-dev-ca5f4.appspot.com\",\n  messagingSenderId: \"16308060844\",\n  appId: \"1:16308060844:web:38d443d911679394eb9509\",\n  measurementId: \"G-HRFS84VYCW\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst perf = getPerformance(app);\n\n\n// ////////// STYLES ////////////////////////\nconst BackWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  top: 0%;\n  margin: 0 auto;\n`\n\nconst Acropolis = styled.section`\n    position: absolute;\n    top: ${({isDesktop}) => (isDesktop ? '21.5%' : '41%')};\n    width: 100%;\n    height: ${({isDesktop}) => (isDesktop ? ' 11%' : '8%')};\n    display: flex;\n    justify-content: center;\n    /* background-color: rgba(50,50,50,.5); */\n`\n\nconst AcropolisBtnWrapper = styled.div`\n    position: absolute;\n    top: ${({isDesktop}) => (isDesktop ? ' 39.5%' : '46.8%')};\n    width: ${({isDesktop}) => (isDesktop ? ' 12%' : '14.5%')};\n    padding-right: ${({isDesktop}) => (isDesktop ? ' 0%' : '0%')};\n    /* margin-left: -23px; */\n    height: ${({isDesktop}) => (isDesktop ? ' 20%' : '17%')};\n    /* background-color: rgba(150,250,150,.5); */\n    border: none;\n    background-color: rgba(250,0,0,.5);\n    -webkit-box-shadow:0px 0px 66px 21px rgba(255,0,0,0.6);\n    -moz-box-shadow: 0px 0px 66px 21px rgba(255,0,0,0.6);\n    box-shadow: 0px 0px 66px 21px rgba(255,0,0,0.6);\n    animation: blink 3s infinite;\n\n    @keyframes blink {\n      0% {\n        opacity: .8;\n      }\n      50% {\n        opacity: 0;\n      }\n      100% {\n        opacity: .8;\n      }\n    }\n`\n\nconst MintDashWrapper = styled.div`\n  z-index: 10;\n  top: 21.5%;\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n`\n\nconst Cloud = styled.section`\n    position: absolute;\n    top: 15%;\n    top: ${({isDesktop}) => (isDesktop ? '15%' : '27%')};\n    width: 100%;\n    height: 7%;\n    /* background-color: rgba(50,50,50,.5); */\n`\n\nconst CloudBtnWrapper = styled.div`\n    position: absolute;\n    top: ${({isDesktop}) => (isDesktop ? '36%' : '19%')};\n    width: ${({isDesktop}) => (isDesktop ? '12%' : '14%')};\n    right: ${({isDesktop}) => (isDesktop ? '23%' : '21%')};\n    height: ${({isDesktop}) => (isDesktop ? '30%' : '18%')};\n    border-radius: 100%;\n    border: none;\n    background-color: rgba(255,255,255,.5);\n    -webkit-box-shadow:0px 0px 30px 20px rgba(255,255,255,.5);\n    -moz-box-shadow: 0px 0px 30px 20px rgba(255,255,255,.5);\n    box-shadow: 0px 0px 30px 20px rgba(255,255,255,.5);\n\n    animation: blink 3s infinite;\n\n    @keyframes blink {\n      0% {\n        opacity: 0;\n      }\n      50% {\n        opacity: 1;\n      }\n      100% {\n        opacity: 0;\n      }\n    }\n`\nconst ComicDashWrapper = styled.div`\n  z-index: 10;\n  top: 15%;\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n`\n\n\nconst CustomBtn = styled.button`\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n      border: none;\n    opacity: 0;\n        background-color: transparent;\n    /* background-color: rgba(150,150,150,1); */\n`\n\nconst Bubble = styled.div`\n    visibility: hidden;\n    opacity: 1;\n    transition: opacity .2s ease-in-out, visibility .2s ease-in-out,;\n    z-index: 10;\n    position: absolute;\n    background-color:  ${props => props.theme.colors.white};\n    border-radius: ${props => props.theme.boxstyle.borderRadius};\n    width: 120px;\n    height: 120px;\n    top: ${({cloud}) => (cloud ? '0' : '0')};\n    right: ${({cloud}) => (cloud ? '0' : '0')};\n    transform: ${({box}) => (box  === 'mint'? 'translateX(120%) translateY(-20%)' : 'translateX(60%) translateY(60%)')};\n    margin: 0 .2rem;\n    box-shadow:  4px 4px 4px rgba(0, 0, 0, 0.25);\n\n\n\n`\n\nconst TextWrap = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  /* background-color: blue; */\n  top: 0;\n   padding: .2rem;\n\n`\n\nconst SubText = styled.p`\ntext-align: center;\n`\n\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/comicDash.js",["210"],"import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport * as shaderEnter from \"./Shaders/ShaderEnter\";\nimport * as shaderExit from \"./Shaders/ShaderExit\";\nimport styled from 'styled-components';\n// import * as dat from \"dat.gui\";\nimport gsap from 'gsap';\nimport {ComicDashboard} from '../components/comicverseComponents/comicverseDashboard'\nimport { IoCloseSharp } from 'react-icons/io5';\n\nclass ComicDash extends Component {\n\n  constructor(props) {\n    super(props);\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n    this.setupScene = this.setupScene.bind(this);\n    this.setupCameras = this.setupCameras.bind(this);\n    this.addObjects  = this.addObjects.bind(this);\n    this.createFinalScene = this.createFinalScene.bind(this);\n    this.settings = this.settings.bind(this);\n    this.destroyContext = this.destroyContext.bind(this);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.callBack = this.callBack.bind(this);\n    this.leaveDash = this.leaveDash.bind(this);\n\n    this.tween1 = true;\n    this.tween2 = false;\n    this.debounce = true;\n    // this.lockDash\n  }\n\n  componentWillMount() {\n    // window.addEventListener(\"resize\", this.handleWindowResize);\n    // console.log('mounted');\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    console.log('mounted');\n    this.setupScene();\n  }\n\n  setupScene() {\n    this.width = this.container.clientWidth;\n    this.height = this.container.clientHeight;\n\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor( 0x000000, 0 );\n    this.renderer.physicallyCorrectLights = true;\n\n    this.container.appendChild(this.renderer.domElement);\n\n    this.sceneRoom = new THREE.Scene();\n    this.sceneSite = new THREE.Scene();\n    this.finalScene = new THREE.Scene();\n\n    this.skyRadius = 100;\n\n    this.setupCameras();\n    this.addObjects();\n    this.createFinalScene();\n    this.settings();\n    this.start();\n  }\n\n \n  setupCameras() {\n\n    this.camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n    // this.camera.position.set(0,-this.skyRadius/2,50);\n    // this.camera.position.set(0, -this.skyRadius*.25,  (this.skyRadius * .65)/2);\n\n\n    this.cameraSite = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n    \n    let frustimSize = 1;\n    // let aspect =  window.innerWidth / window.innerHeight;\n    this.finalCamera = new THREE.OrthographicCamera(\n      frustimSize  / -2,\n      frustimSize  / 2,\n      frustimSize / 2,\n      frustimSize / -2,\n      -1000,\n      1000\n    );\n  \n\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    // zoom controls\n    this.controls.minDistance = 70;\n    this.controls.maxDistance = 70;\n\n\n    // // vertical change controls\n    this.controls.minPolarAngle = 100 * ( Math.PI / 180);\n    this.controls.maxPolarAngle = 100 * ( Math.PI / 180);\n\n    // // horizontal controls change controls\n    this.controls.minAzimuthAngle = 0 * (  Math.PI / 180);\n    this.controls.maxAzimuthAngle = 0 * (  Math.PI  / 180);\n\n    this.controls.enablePan = false;\n    this.controls.update();\n\n    // this.scene.add(this.light);\n    // this.scene.add(this.camera);\n  }\n\n\n  addObjects() {\n    \n    // const skyCylinderGeo = new THREE.CylinderGeometry(this.skyRadius,this.skyRadius * .78,this.skyRadius,64,1,false, Math.PI * 2/6, Math.PI * 8/6);\n    const skyCylinderGeo = new THREE.CylinderGeometry(this.skyRadius,this.skyRadius * .65,this.skyRadius,64,1,false, Math.PI * 2, Math.PI *2);\n\n    // let texture = new THREE.TextureLoader().load('/Assets/comicsky/view4.png');\n    let texture = new THREE.TextureLoader().load('/Assets/comicsky/view2.png');\n\n    // texture.wrapS = THREE.RepeatWrapping; \n    // texture.repeat.x = - 1;\n    let innerMaterial = new  THREE.MeshBasicMaterial({ map: texture, side: THREE.BackSide });\n\n\n    texture = new THREE.TextureLoader().load('/Assets/comicsky/top2.jpg');\n    //  texture.wrapS = THREE.RepeatWrapping; \n    // texture.repeat.x = - 1;\n    let topMaterial = new  THREE.MeshBasicMaterial({ map: texture, side: THREE.BackSide });\n\n    texture = new THREE.TextureLoader().load('/Assets/comicsky/bottom3.jpg');\n    let bottomMaterial = new  THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\n\n    this.skybox = new THREE.Mesh(skyCylinderGeo, [innerMaterial]);\n\n    let planeGeometry = new THREE.CircleGeometry( this.skyRadius * .65, 128);\n    let planeGeometry2 = new THREE.CircleGeometry( this.skyRadius , 128);\n\n    // 3d model platform\n    this.skyBoxBottom = new THREE.Mesh(\n      planeGeometry, \n      bottomMaterial\n      );\n\n    this.skyBoxTop = new THREE.Mesh(\n      planeGeometry2, \n      topMaterial\n    );\n\n    // let sphereGeometry = new THREE.SphereBufferGeometry( this.skyRadius,);\n\n    // this.sphere = new THREE.Mesh(\n    //   sphereGeometry, \n    //   new THREE.MeshBasicMaterial({\n    //     map: new THREE.TextureLoader().load(\"/Assets/view2.png\"),\n    //     side: THREE.BackSide\n    //   })\n    //   );\n\n\n    this.skyBoxBottom.position.set(0,-this.skyRadius/2,0)\n    this.skyBoxBottom.rotation.x = -Math.PI/2;\n    this.skyBoxTop.position.set(0,this.skyRadius/2,0)\n    this.skyBoxTop.rotation.x = -Math.PI/2;\n    \n    this.pivot = new THREE.Group();\n    this.sceneRoom.add( this.pivot );\n    this.pivot.add(this.skyBoxBottom);\n    this.pivot.add(this.skyBoxTop);\n    this.pivot.add(this.skybox);\n\n    // this.sceneRoom.add(this.skyBoxBottom);\n    // this.sceneRoom.add(this.skyBoxTop);\n    // this.sceneRoom.add(this.skybox);\n  }\n\n  createFinalScene(){\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        progress: { value: 0 },\n        sceneRoom: { value: null },\n        sceneSite: { value: null },\n        // isEntering: {value: 1}\n      },\n      vertexShader: shaderEnter.vertex,\n      fragmentShader: shaderEnter.fragment,\n    });\n\n     this.materialExit = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        progress: { value: 0 },\n        sceneRoom: { value: null },\n        sceneSite: { value: null },\n        // isEntering: {value: 1}\n      },\n      vertexShader: shaderExit.vertex,\n      fragmentShader: shaderExit.fragment,\n    });\n\n\n\n    this.textureRoom = new THREE.WebGLRenderTarget(this.width,this.height, {\n        format: THREE.RGBAFormat,\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter\n      });\n\n    this.textureSite = new THREE.WebGLRenderTarget(this.width,this.height, {\n        format: THREE.RGBAFormat,\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter\n      });\n\n      \n\n    this.geo = new THREE.PlaneBufferGeometry(1,1);\n    this.meshFinal = new THREE.Mesh(this.geo,this.material);\n\n    this.finalScene.add(this.meshFinal);\n\n\n  }\n\n   settings(){\n    this.settingsOptions = {\n      progress: 0,\n    };\n\n    // this.gui = new dat.GUI();\n    // this.gui.add(this.settingsOptions, 'progress', 0, 1, 0.01);\n\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n      this.mountFrame = this.frameId;\n    }\n  }\n\n  animate() {\n  \n  if (this.frameId > 10 + this.mountFrame && this.tween1){\n        this.tween1 = false;\n        gsap.to(this.settingsOptions, {\n          duration:1.5,\n          delay: 0,\n          progress: 1.0\n      });\n\n    this.container.firstChild.classList.add(\"fade-in-comic\");\n    this.container.nextSibling.classList.add(\"fade-in\");\n\n    setTimeout(() => { \n                    this.tween2 = true;\n                    console.log('mesh switched step 1');\n                    this.container.firstChild.style.opacity = '.85';\n                    this.container.nextSibling.style.opacity = '1';\n\n                  }, 1500);\n    }\n\n    if(this.tween2 && this.debounce){\n        this.debounce = false;\n      \n        this.meshFinal.material = this.materialExit;\n        this.settingsOptions.progress = 0;\n  \n        // this.finalScene.add(this.meshFinal);\n        console.log('mesh switched step 2');\n    }\n\n    if (!this.tween2){\n      this.renderer.setRenderTarget(this.textureRoom);\n      this.renderer.render(this.sceneRoom, this.camera);\n\n      this.renderer.setRenderTarget(this.textureSite);\n      this.renderer.render(this.sceneSite, this.cameraSite);\n    } else{\n      this.renderer.setRenderTarget(this.textureSite);\n      this.renderer.render(this.sceneSite, this.cameraSite);\n\n      this.renderer.setRenderTarget(this.textureRoom);\n      this.renderer.render(this.sceneRoom, this.camera); \n     }\n    \n    if (!this.tween2){\n      this.material.uniforms.sceneRoom.value = this.textureRoom.texture;\n      this.material.uniforms.sceneSite.value = this.textureSite.texture;\n      this.material.uniforms.progress.value = this.settingsOptions.progress;\n      // console.log(this.material.uniforms.progress.value);\n    }else{\n      this.materialExit.uniforms.sceneSite.value = this.textureSite.texture;\n      this.materialExit.uniforms.sceneRoom.value = this.textureRoom.texture;\n      this.materialExit.uniforms.progress.value = this.settingsOptions.progress;\n        // console.log(this.materialExit.uniforms.progress.value);\n    }\n\n    this.pivot.rotation.y += 0.001;\n    this.frameId = requestAnimationFrame(this.animate);\n    this.renderer.setRenderTarget(null);\n    this.renderer.render(this.finalScene, this.finalCamera);\n  }\n\n  callBack(){\n    this.props.callBackFunc();\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n\n  handleWindowResize() {\n    this.leaveDash();\n    // this.renderer.setSize(this.width, this.height);\n    // this.camera.aspect = this.width/ this.height;\n    // this.cameraSite.aspect = this.width/ this.height;\n\n    // this.camera.updateProjectionMatrix();\n    // this.cameraSite.updateProjectionMatrix();\n\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.destroyContext();\n  }\n\n  destroyContext() {\n    this.container.removeChild(this.renderer.domElement);\n    this.container.remove();\n    // this.renderer.forceContextLoss();\n    console.log('successful unmount');\n  }\n\n  leaveDash(){\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    this.container.firstChild.classList.remove('fade-in-comic');\n    this.container.nextSibling.classList.remove('fade-in');\n\n    this.container.firstChild.classList.add(\"fade-out-comic\");\n    this.container.firstChild.style.opacity = '0';\n\n    this.container.nextSibling.classList.add(\"fade-out\");\n    this.container.nextSibling.style.opacity = '0';\n\n    gsap.to(\n      this.settingsOptions, {\n          duration:1.5,\n          delay: 0.5,\n          progress: 1\n        });\n      \n        setTimeout(() => {  \n          this.callBack();\n          //  this.componentWillUnmount();\n        }, 1500);\n  }\n\n  render() {\n\n    return (\n      <div id='canvasContainer'\n        style={{\n          position: 'relative',  /* makes this the origin of its children */\n          width: '100vw',\n          height:' 100vh',\n          overflow: 'hidden',\n          //  zIndex: 100,\n        }}\n      >\n\n        <div id='canvas'\n          ref={(container ) => {\n            this.container = container;\n            // this.dashElement = dashboard;\n          }}\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"block\",\n          }}>\n            <BtnWrapper>\n                <TravelBtn \n                onClick={this.leaveDash}>\n                 <CloseIcon/>\n                </TravelBtn>\n            </BtnWrapper>\n          </div>\n\n          <ComicDashboard id={'comicverse'}/>\n         </div>\n    );\n  }\n}\n\nexport default ComicDash;\n\n\nconst CloseIcon = styled(IoCloseSharp)`\n  width: 100%;\n  height: 100%;\n`\n\nconst BtnWrapper = styled.div`\n  z-index: 40;\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 50px;\n    height: 50px;\n    opacity: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 24px;\n`\n\nconst TravelBtn = styled.button`\n \n  width: 100%;\n  height: 100%;\n  background-color: #010b38;\n  border: 1px solid white;\n  padding: .5rem;\n  font-size: 1rem;\n  font-family: \"Skia\"; \n  /* font-family: 'https://fonts.gstatic.com/s/philosopher/v9/vEFV2_5QCwIS4_Dhez5jcWBuT0s.woff'; */\n  font-weight: 100;\n  color: white;\n  transition: all .3s ease-in-out;\n  cursor: pointer;\n\n  &:hover{\n    \n    /* color: #7E746F; */\n    background-color: #1D2A60;\n  }\n`\n\nfunction toDegrees(rad) {\n  let deg = Math.round(rad * (180 / Math.PI));\n  return deg;\n}\n\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/global_styles.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/comicverse.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/mint.js",["211"],"import React from 'react'\n\nimport styled from 'styled-components'\nimport {Textbox} from './textbox';\nimport { data } from './data';\n\n\n\n\nexport const Mint = (props) => {\n   const {isDesktop } = props;\n  return (\n     <MintContainer isDesktop={isDesktop}>   \n        {/* <InnoLabs>Enter</InnoLabs> */}\n\n        {/* <InfoWrapper id='mintText'> */}\n             <Textbox data = {data['acropolis']} />\n\n             {/* <SubHeading>Ways to Mint:</SubHeading>\n             <Textbox data = {data['mintways']} tightSub = {true}/> */}\n        {/* </InfoWrapper> */}\n       \n               \n    </MintContainer>\n            \n  )\n}\n\nconst MintContainer = styled.section`\n    position: absolute;\n    top: ${({isDesktop}) => (isDesktop ? '28.5%' : '48%')};\n    width: 100%;\n    height: 5%;\n    /* background-color: rgba(40,240,40,.5); */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst InfoWrapper = styled.div`\n   position: absolute;\n   top: 20%;\n\n`","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/navbar.js",["212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/roadmap.js",["235","236"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport { Heading,useWindowDimensions } from '../../global_styles';\nimport {Textbox} from './textbox';\nimport { data } from './data';\nimport { isMobile, isDesktop as isDesktopLib } from 'react-device-detect';\n\n\nlet cords = [\n  { top: '30%', right: '5%'}, // 1\n  { top: '32%', right: '23%'},// 2\n  { top: '34%', right: '45%'},// 3\n  { top: '50%', right: '55%'},// 4\n  { top: '58%', right: '30%'},// 5\n  { top: '70%', right: '10%'},// 6\n  { top: '75%', right: '36%'},// 7\n  { top: '86%', right: '50%'},// 8\n  { top: '90%', right: '15%'},// 9\n]\n\n\nexport const Roadmap = (props) => {\n  const {isDesktop} = props;\n\n  const [hoverIndex, changeHoverIndex] = useState(-1);\n  const {windowWidth, windowHeight } = useWindowDimensions();\n\n  const hideBubbles = () => {\n      changeHoverIndex(-1);\n  }\n\n  useEffect(() => {\n        window.addEventListener('scroll', hideBubbles)\n    },[])\n\n\n  return (\n     <RMContainer isDesktop={isDesktop}>   \n         {/* <Heading>ROADMAP</Heading> */}\n         <TextBoxWrapper>\n             <Textbox data = {data['roadmapText']}/>\n \n         </TextBoxWrapper>\n\n         {windowWidth < 769 && \n          <SubWrap>\n             <TextboxSub>{isDesktopLib ? \"Hover over\": \"Tap\"} token to view drop</TextboxSub>\n          </SubWrap>\n         \n         }\n\n       {/* <EventContainer> */}\n           <EventWrapper isDesktop={isDesktop}>\n             {data.roadmap.map((event, index)=>{\n               return <div key={index} >\n                <EventHolder \n                  cord={cords[index]}\n                  onMouseEnter={e => {\n                     changeHoverIndex(index);\n                  }}\n                \n                  onMouseLeave={e => {\n                      changeHoverIndex(-1);\n                  }}            \n                  >\n                    <EventBG src={'./images/token.png'}/>  \n\n                     {windowWidth > 769 &&    \n                      // regular\n                     <TextWrap>\n                        {event.title && <Title>{event.title}</Title>}\n                        {event.text && <SubText>{event.text}</SubText>}\n                    </TextWrap>\n                  }\n                 </EventHolder>\n\n                   {/* bubble */}\n                  {windowWidth < 769 &&  <Bubble cord={cords[index]} style={{  visibility: `${hoverIndex === index ? \"visible\": \"hidden\"}`,\n                                                                                    opacity: `${hoverIndex === index ? \"1\": \"0\"}`}}>\n                      <TextWrap>\n                        {event.title && <Title>{event.title}</Title>}\n                        <SubText>{event.text}</SubText>\n                      </TextWrap>\n\n                  </Bubble>}\n              </div>\n\n             })}\n           </EventWrapper>\n           \n         {/* </EventContainer> */}\n               \n    </RMContainer>\n            \n  )\n}\n\nconst RMContainer = styled.div`\n    position: absolute;\n    /* top: ${props => props.theme.sectionStart.roadmap}; */\n    top: ${({isDesktop}) => (isDesktop ? '36%' : '55%')};\n    width: 100%;\n    height: ${({isDesktop}) => (isDesktop ? '18%' : '10%')};\n    /* background-color: rgba(40,40,40,.2); */\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    margin: 0 auto;\n`\n\n\n\nconst EventWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: rgba(220,10,200,.4); */\n  /* max-width:  ${props => props.theme.boxstyle.maxWidth}; */\n  padding: 0 ${props => props.theme.boxstyle.marginX};\n  position: absolute;\n  top: ${({isDesktop}) => (isDesktop ? '0' : '16.5%')};\n`\n\nconst EventHolder = styled.div`\n  height: 135px;\n  width: 135px;\n  /* background-color: rgba(220,200,200,.8); */\n  border-radius: 100%;\n  position: absolute;\n  top:  ${props => props.cord.top};\n  right:  ${props => props.cord.right};\n  /* border-radius: 100%; */\n  /* border: solid 2px #441511; */\n  \n    /* mobile */\n    @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n      background-color: #AE4C2690;\n      /* border: solid 2px #441511;; */\n      height: 35px;\n      width: 35px;\n       &:hover{\n          cursor: pointer;\n        }\n    }\n\n    /* tablet */\n      @media screen and (max-width: 770px) and (min-width: ${props => props.theme.breakpoints.sm}){\n      background-color: #AE4C2690;\n      /* border: solid 2px #441511;; */\n      height: 50px;\n      width: 50px;\n      \n    }\n\n    /* large monitor */\n    @media screen and (min-width: ${props => props.theme.breakpoints.xl}){\n        height: 150px;\n        width: 150px;\n\n    }\n\n\n    ${window.innerWidth < 769? `\n          -webkit-box-shadow:0px 0px 20px 8px rgba(250,236,205,.7);\n          -moz-box-shadow: 0px 0px 20px 8px rgba(250,236,205,.7);\n          box-shadow: 0px 0px 20px 8px rgba(250,236,205,.7);\n          animation: token-blink 2s infinite;\n\n\n      @keyframes token-blink{\n        0%{\n            -webkit-box-shadow:none;\n          -moz-box-shadow: none;\n          box-shadow: none;\n           \n\n\n        }\n        50%{\n          -webkit-box-shadow:0px 0px 20px 8px rgba(250,236,205,.7);\n          -moz-box-shadow: 0px 0px 20px 8px rgba(250,236,205,.7);\n          box-shadow: 0px 0px 20px 8px rgba(250,236,205,.7);\n         \n\n\n        }100%{\n          -webkit-box-shadow:none;\n          -moz-box-shadow: none;\n          box-shadow: none;\n           \n\n        }\n      }\n    \n    ` : ''}\n`\n\n\n\nconst EventBG = styled.img`\n  width: 100%;\n   &:hover{\n          cursor: pointer;\n        }\n`\n\nconst TextWrap = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100%;\n  height: 80%;\n  width: 80%;\n  line-height: .95rem;\n  /* background-color: blue; */\n  top: 50%;\n  right:50%;\n  transform: translate(50%, -50%);\n\n   padding: .4rem;\n\n   \n\n`\n\nconst Title = styled.p`\n  text-align: center;\n  /* margin-bottom: .3rem; */\n  font-size: 90%;\n  text-transform: uppercase;\n  font-style: italic;\n  font-family: 'Montserrat', sans-serif;\n\n`\n\nconst SubText = styled.p`\n  margin-top: .3rem;\n  text-align: center;\n  font-size: 75%;\n  text-transform: uppercase;\n\n`\n\nconst Bubble = styled.div`\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity .2s ease-in-out, visibility .2s ease-in-out,;\n    z-index: 10;\n    position: absolute;\n    background-color:  ${props => props.theme.colors.white};\n    border-radius: ${props => props.theme.boxstyle.borderRadius};\n    width: 120px;\n    height: 110px;\n    top:  ${props => props.cord.top};\n    right:  ${props => props.cord.right};\n    transform: translateX(-35%) translateY(0%);\n    /* margin: 0 .2rem; */\n     box-shadow:  4px 4px 4px rgba(0, 0, 0, 0.25);\n       /* padding: .5rem; */\n\n`\n\n\nconst TextBoxWrapper = styled.div`\n  position: absolute;\n  top: 0;\n\n`\n\n\nconst SubWrap =styled.div`\n  height: 20%;\n  width: 30%;\n  position: absolute;\n  top: 44%;\n  left: 10%;\n  /* margin: 0 1rem; */\n     background-color: rgba(255,255,255,.5);\n    -webkit-box-shadow:0px 0px 30px 20px rgba(255,255,255,.55);\n    -moz-box-shadow: 0px 0px 30px 20px rgba(255,255,255,.55);\n    box-shadow: 0px 0px 30px 20px rgba(255,255,255,.55);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100%;\n  padding:.1rem;\n\n\n\n`\n\n\nconst TextboxSub = styled.h1`\n\n  font-size: 1.4rem;\n  text-align: center;\n  text-transform: uppercase;\n  /* font-weight: 800; */\n  font-style: italic;\n  font-family: 'Montserrat', sans-serif;\n  letter-spacing: 1px;\n  text-align: center;\n\n\n  ${isMobile ?'font-size: 95%;' :''}\n\n\n  /* @media screen and (max-width: ${props => props.theme.breakpoints.md}){\n  \n  } */\n\n  @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n  font-size: 1rem;\n  }\n`","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/landing.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/story.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/mintDash.js",["237","238","239","240","241","242","243","244"],"import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport * as shaderEnter from \"./Shaders/ShaderEnter\";\nimport * as shaderExit from \"./Shaders/ShaderExit\";\n\n\nimport { IoMdCloseCircleOutline, IoMdArrowRoundBack, IoMdArrowRoundForward} from 'react-icons/io';\n\nimport {Text} from 'troika-three-text';\nimport styled from 'styled-components';\n// import * as dat from \"dat.gui\";\nimport gsap from 'gsap';\n\nimport {DashBoard} from '../components/dashbaordComponents/dashboard'\n\n\nlet tempV = new THREE.Vector3();\nlet tempScale = new THREE.Vector3();\nlet tempRot = new THREE.Euler();\nlet resizeDebounce = true;\n\nconst raycaster = new THREE.Raycaster();\nlet hideDiv = false;\n\n\nclass MintDash extends Component {\n\n  constructor(props) {\n    super(props);\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n    this.setupScene = this.setupScene.bind(this);\n    this.setupCameras = this.setupCameras.bind(this);\n    this.addObjects  = this.addObjects.bind(this);\n    this.createFinalScene = this.createFinalScene.bind(this);\n    this.settings = this.settings.bind(this);\n    this.destroyContext = this.destroyContext.bind(this);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.callBack = this.callBack.bind(this);\n    this.leaveDash = this.leaveDash.bind(this);\n\n    this.tween1 = true;\n    this.tween2 = false;\n    this.debounce = true;\n\n    this.state = {\n         lockonVault: this.props.isVaultLocked === 'true',\n        currentAzimuth: 0\n        \n    }\n\n  }\n\n  componentWillMount() {\n    // window.addEventListener(\"resize\", this.handleWindowResize);\n    // console.log('mounted');\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleWindowResize);\n    console.log('mounted');\n    this.setupScene();\n  }\n\n  setupScene() {\n    this.width = this.container.clientWidth;\n    this.height = this.container.clientHeight;\n\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    // this.renderer.setClearColor(0xeeeeee, 1);\n    this.renderer.setClearColor( 0x000000, 0 );\n    this.renderer.physicallyCorrectLights = true;\n\n    this.container.appendChild(this.renderer.domElement);\n\n    this.sceneRoom = new THREE.Scene();\n    this.sceneSite = new THREE.Scene();\n    this.finalScene = new THREE.Scene();\n\n    this.setupCameras();\n    this.addObjects();\n    this.createFinalScene();\n    this.settings();\n    this.start();\n  }\n\n \n  setupCameras() {\n    this.camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n    this.camera.position.set(0,0,0);\n \n\n    this.cameraSite = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n\n\n    let frustimSize = 1;\n    // let aspect =  window.innerWidth / window.innerHeight;\n    this.finalCamera = new THREE.OrthographicCamera(\n      frustimSize  / -2,\n      frustimSize  / 2,\n      frustimSize / 2,\n      frustimSize / -2,\n      -1000,\n      1000\n    );\n  \n\n    if(this.state.lockonVault) {\n      console.log('locked on dashboard');\n      this.setState({currentAzimuth: 90});\n    }\n    \n  }\n\n\n  addObjects() {\n\n  // 1 - Load each image as a Texture\n  // 2 -  Map each Texture to a Material array\n  // 3 - Add Material array to the Skybox cube\n    const materialArray = createMaterialArray();\n    const skyboxGeo = new THREE.BoxGeometry(1000, 950, 1000);\n    this.skybox = new THREE.Mesh(skyboxGeo, materialArray);\n\n    let planeGeometry = new THREE.PlaneGeometry( 250, 250, 1);\n    let planeGeometrySide = new THREE.PlaneGeometry( 600, 500, 1 );\n\n    // intro\n    this.dashPlane = new THREE.Mesh(\n      planeGeometrySide, \n        new THREE.MeshBasicMaterial({color: 0xebdfd5}).opacity = 0\n      );\n\n      \n    this.dashElement1 = this.container.nextSibling; //intro\n\n    this.elements = [\n        [this.dashElement1, this.dashPlane],\n        // [this.dashElement2, this.dashPlane2],\n        // [this.dashElement3, this.dashPlane3]\n      ]\n\n\n      // info\n      this.dashPlane.position.setX(-475);\n      this.dashPlane.rotation.y = Math.PI/2;\n      \n      const myText = new Text();\n    \n      this.sceneRoom.add(myText);\n\n      // Set properties to configure:\n      myText.text =`We believe collectors of our project deserve to benefit more. That\\'s why we\\'ve changed minting for good.\\n\\nFor the first time ever, if you mint one of our NFTs, you can earn 50% of the royalties. 50% of the remaining royalties enter a dividends pool and will be paid out in ETH to owners who hold their NFTs in line with our schedule defined in the whitepaper.\\n\\nAll earnings can be tracked live on the Vault Dashboard to your left.\\n\\nWays to mint:\\n1. Earn a spot on the Gods & Titans pre-sales list.\\n2. Purchase a Gods & Titans NFT from the secondary market.`;\n      myText.fontSize = 16;\n      myText.anchorX = 'center';\n      myText.anchorY = 'middle';\n      myText.maxWidth = 700;\n      myText.textAlign = 'center';\n      myText.font =  'https://fonts.gstatic.com/s/philosopher/v9/vEFV2_5QCwIS4_Dhez5jcWBuT0s.woff'\n      myText.position.z = 0;\n      myText.position.x = 475;\n      myText.position.y = 10;\n      myText.rotation.y = -Math.PI/2;\n      myText.color = 0x979086;\n      myText.color = 0x736259;\n      myText.outlineColor = 0x736259;\n      myText.outlineWidth = .2;\n      // myText.letterSpacing = .15;\n\n      // Update the rendering:\n      myText.sync();\n\n    // add objects to room scene\n    this.sceneRoom.add(this.dashPlane);\n    // this.sceneRoom.add(this.dashPlane2);\n    // this.sceneRoom.add(this.dashPlane3);\n    this.skybox.rotateY( -90 * ( Math.PI / 180))\n    this.sceneRoom.add(this.skybox);\n\n    // add to site\n    // this.sceneSite.add(this.sphere);\n\n  }\n\n  \n  createFinalScene(){\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        progress: { value: 0 },\n        sceneRoom: { value: null },\n        sceneSite: { value: null },\n        // isEntering: {value: 1}\n      },\n      vertexShader: shaderEnter.vertex,\n      fragmentShader: shaderEnter.fragment,\n    });\n\n     this.materialExit = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        progress: { value: 0 },\n        sceneRoom: { value: null },\n        sceneSite: { value: null },\n        // isEntering: {value: 1}\n      },\n      vertexShader: shaderExit.vertex,\n      fragmentShader: shaderExit.fragment,\n    });\n\n\n\n    this.textureRoom = new THREE.WebGLRenderTarget(this.width,this.height, {\n        format: THREE.RGBAFormat,\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter\n      });\n\n    this.textureSite = new THREE.WebGLRenderTarget(this.width,this.height, {\n        format: THREE.RGBAFormat,\n        minFilter: THREE.LinearFilter,\n        magFilter: THREE.LinearFilter\n      });\n\n      \n\n    this.geo = new THREE.PlaneBufferGeometry(1,1);\n    this.meshFinal = new THREE.Mesh(this.geo,this.material);\n\n    this.finalScene.add(this.meshFinal);\n\n\n  }\n  \n   settings(){\n    this.settingsOptions = {\n      progress: 0,\n    };\n\n    // this.matrix = {\n    //   rotateX: 0,\n    //   rotateY: 0,\n    //   rotateZ: 0,\n    //   skewX: 0,\n    //   skewY: 0,\n\n    // }\n\n    // this.gui = new dat.GUI();\n    // this.gui.add(this.matrix, \"rotateX\", -360, 360, 0.01);\n    // this.gui.add(this.matrix, \"rotateY\", -360, 360, 0.01);\n    // this.gui.add(this.matrix, \"rotateZ\", -360, 360, 0.01);\n    // this.gui.add(this.matrix, \"skewX\", -360, 360, 0.01);\n    // this.gui.add(this.matrix, \"skewY\", -360, 360, 0.01);\n\n\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n      this.mountFrame = this.frameId;\n    }\n  }\n\n  animate() {\n    \n    //  camera on scroll logic\n    this.camera.setRotationFromAxisAngle(new THREE.Vector3(0,1,0), this.state.currentAzimuth* ( Math.PI / 180));\n     if(this.state.lockonVault){\n        this.setState({ currentAzimuth:90 })\n      }\n\n\n    this.elements.forEach((planeInfo, i)=>{\n      const divElement = planeInfo[0];\n      const plane = planeInfo[1];\n\n      // console.log(divElement, plane);\n\n       // get the position of the center of the cube\n      plane.updateWorldMatrix(true, false);\n      plane.getWorldPosition(tempV);\n      // tempRot = plane.rotation;\n      tempRot.setFromRotationMatrix(plane.modelViewMatrix);\n      tempScale.setFromMatrixScale(plane.modelViewMatrix)\n\n      // console.log(tempRot)\n      // tempRot.project(this.camera);\n      tempRot.x = toDegrees(tempRot.x)\n      tempRot.y = toDegrees(tempRot.y)\n      tempRot.z = toDegrees(tempRot.z)\n  \n\n      // get the normalized screen coordinate of that position\n      // x and y will be in the -1 to +1 range with x = -1 being\n      // on the left and y = -1 being on the bottom\n      tempV.project(this.camera);\n\n      // ask the raycaster for all the objects that intersect\n      // from the eye toward this object's position\n      raycaster.setFromCamera(tempV, this.camera);\n      const intersectedObjects = raycaster.intersectObjects(this.sceneRoom.children);\n\n      // We're visible if the first intersection is this object.\n      const show = intersectedObjects.length && plane === intersectedObjects[0].object;\n\n       if (!show || Math.abs(tempV.z) > 1 || hideDiv) {\n      // hide the label\n        divElement.style.display = 'none';\n      } else {\n        // unhide the label\n        divElement.style.display = 'block';\n    \n\n        this.width =  this.container.clientWidth;\n        this.height =  this.container.clientHeight;\n\n        // convert the normalized position to CSS coordinates\n        const x = (tempV.x *  .5 + .5) * this.container.clientWidth;\n        const y = (tempV.y * -.5 + .5) * this.container.clientHeight;\n        // const z = (tempV.z * -.5 + .5) * this.container.clientHeight;\n        // console.log(tempV.z)\n\n      \n        // let planeRotation = this.dashPlane.normalMatrix;\n        // console.log(planeRotation.elements );\n\n        // move the elem to that position\n        // this.dashElement.style.transform = `translate(-50%, -50%) translate(${x}px,${y}px) `;\n        // divElement.style.transform = `translate(-50%, -50%) translate(${x}px,${y}px)`;\n        //  scaleX(${tempScale.x}) scaleY(${tempScale.y}) scaleZ(${tempScale.z}) \n          divElement.style.transform = `\n                                    scaleX(1) scaleY(${tempScale.y}) scaleZ(${tempScale.z}) \n                                    rotateX(${-tempRot.x}deg) rotateY(${-tempRot.y}deg) rotateZ(${-tempRot.z}deg) \n                                    translate(-50%, -40%) \n                                    translateX(${x}px) translateY(${y}px) translateZ(${-475}px) \n                                    skewX(${0}deg) skewY(${0}deg)`;\n          // divElement.style.position = `fixed`;\n          // divElement.style.top = `0`;\n        // divElement.style.transform = `\n        //                             scaleX(1) scaleY(1) scaleZ(1) \n        //                             rotateX(${this.matrix.rotateX}deg) rotateY(${this.matrix.rotateY}deg) rotateZ(${this.matrix.rotateZ}deg) \n        //                             translate(-50%, -50%) \n        //                             translateX(${x}px) translateY(${y}px) translateZ(0px) \n        //                             skewX(${this.matrix.skewX}deg) skewY(${this.matrix.skewY}deg)`;\n\n                                 \n        // // set the zIndex for sorting\n        divElement.style.zIndex = (-tempV.z * .5 + .5) * 100000 | 0;\n\n        }\n    });\n\n\n    // load in logic\n    if (this.frameId > 10 + this.mountFrame && this.tween1){\n      this.tween1 = false;\n      gsap.to(this.settingsOptions, {\n        duration:1.5,\n        delay: 0,\n        progress: 1.0\n      });\n      \n      if (this.container.nextElementSibling) this.container.nextElementSibling.classList.add(\"fade-in\");\n      if (this.container.firstChild) this.container.firstChild.classList.add(\"fade-in\");\n      if (this.container.firstChild) this.container.nextElementSibling.nextElementSibling.classList.add(\"fade-in-scroll\");\n\n      setTimeout(() => { \n                      this.tween2 = true;\n                      console.log('mesh switched step 1');\n                      this.container.firstChild.style.opacity = '1';\n                      this.container.nextSibling.style.opacity = '1';\n                      this.container.nextSibling.nextSibling.style.opacity = '.65';\n                      \n                    }, 1500);\n   \n    }\n\n    if(this.tween2 && this.debounce){\n        this.debounce = false;\n        \n        this.meshFinal.material = this.materialExit;\n        this.settingsOptions.progress = 0;\n        // this.finalScene.add(this.meshFinal);\n        console.log('mesh switched step 2');\n        if (this.container.nextElementSibling) this.container.nextElementSibling.classList.remove(\"fade-in\"); \n        if (this.container.nextElementSibling.nextElementSibling) this.container.nextElementSibling.nextElementSibling.classList.remove(\"fade-in-scroll\"); \n\n    }\n   \n   \n  \n     if (!this.tween2){\n      this.renderer.setRenderTarget(this.textureRoom);\n      this.renderer.render(this.sceneRoom, this.camera);\n\n      this.renderer.setRenderTarget(this.textureSite);\n      this.renderer.render(this.sceneSite, this.cameraSite);\n    } else{\n        this.renderer.setRenderTarget(this.textureSite);\n      this.renderer.render(this.sceneSite, this.cameraSite);\n\n      this.renderer.setRenderTarget(this.textureRoom);\n      this.renderer.render(this.sceneRoom, this.camera); \n\n     }\n\n    if (!this.tween2){\n       this.material.uniforms.sceneRoom.value = this.textureRoom.texture;\n       this.material.uniforms.sceneSite.value = this.textureSite.texture;\n      this.material.uniforms.progress.value = this.settingsOptions.progress;\n      // console.log(this.material.uniforms.progress.value);\n    }else{\n        \n        this.materialExit.uniforms.sceneSite.value = this.textureSite.texture;\n        this.materialExit.uniforms.sceneRoom.value = this.textureRoom.texture;\n        this.materialExit.uniforms.progress.value = this.settingsOptions.progress;\n        // console.log(this.materialExit.uniforms.progress.value);\n    }\n    \n    // this.controls.update();\n    this.frameId = requestAnimationFrame(this.animate);\n    this.renderer.setRenderTarget(null);\n    this.renderer.render(this.finalScene, this.finalCamera);\n  }\n\n  callBack(){\n    this.props.callBackFunc();\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n\n  handleWindowResize() {\n    this.leaveDash()\n\n    /////resize logic/////\n    // this.width = window.innerWidth;\n    // this.height = window.innerHeight;\n    // console.log(this.width,this.height)\n\n    \n    // this.renderer.setSize(this.width, this.height);\n    // this.camera.aspect = this.width/ this.height;\n    // this.cameraSite.aspect = this.width/ this.height;\n    // this.finalCamera.aspect = this.width/ this.height;\n\n\n    // this.camera.updateProjectionMatrix();\n    // this.cameraSite.updateProjectionMatrix();\n    // this.finalCamera.updateProjectionMatrix();\n\n    // if (this.width < 900 && resizeDebounce) { \n    //   resizeDebounce = false\n    //   console.log('leave dash')\n\n    //   this.leaveDash();\n\n    //  }\n\n    /////////////////////\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.destroyContext();\n  }\n\n  destroyContext() {\n    this.container.removeChild(this.renderer.domElement);\n    this.container.remove();\n    // this.renderer.forceContextLoss();\n    console.log('successful unmount');\n  }\n\n    leaveDash(){\n        window.removeEventListener(\"resize\", this.handleWindowResize);\n        if( this.container.firstChild) {\n          this.container.firstChild.classList.remove('fade-in');\n          this.container.firstChild.classList.add(\"fade-out\");\n          this.container.firstChild.style.opacity = '0';\n        }\n\n        if( this.container.nextElementSibling) this.container.nextElementSibling.classList.add(\"fade-out\"); \n        if( this.container.nextElementSibling.nextElementSibling) this.container.nextElementSibling.nextElementSibling.classList.add(\"fade-out-scroll\"); \n  \n\n       \n        setTimeout(() => {  \n         if( this.container.nextElementSibling) this.container.nextElementSibling.style.opacity = '0';\n         if( this.container.nextElementSibling.nextElementSibling) this.container.nextElementSibling.nextElementSibling.style.opacity = '0';\n        }, 500);\n         \n      \n        gsap.to(\n          this.settingsOptions, {\n              duration:1.5,\n              delay: 0.5,\n              progress: 1\n\n            });\n          \n            setTimeout(() => {  \n              this.callBack();\n              //  this.componentWillUnmount();\n            }, 1500);\n  }\n\n\n  render() {\n\n    return (\n      <div id='canvasContainer'\n        style={{\n          position: 'relative',  /* makes this the origin of its children */\n          width: '100vw',\n          height:' 100vh',\n          overflow: 'hidden',\n        }}\n\n      >\n\n        <div id='canvas'\n          ref={(container ) => {\n            this.container = container;\n            // this.dashElement = dashboard;\n          }}\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"block\",\n          }}>\n            {/* first child */}\n            <TopBar>\n              {/* toggle vault lock */}\n              <ToggleWrap onClick={()=>{\n                  this.setState({ lockonVault: this.props.lockToggler() });\n              }}>\n                <div style={{width: '100%',marginTop: '.5rem', display:'flex',alignItems:'center'}}>\n                <InputBox \n                  type={'checkbox'} \n                  checked={ this.state.lockonVault}\n                   onChange={(event) => {}}\n                   />\n                <ToggleText>Lock on dashboard</ToggleText>\n                </div>\n                 <ToggleText style={{marginTop: '.5rem', marginLeft:'-3rem'}}>LIVE ON MINT DATE</ToggleText>\n              </ToggleWrap>\n\n              {/* Travel Back */}\n              <BtnWrapper>\n                  <TravelBtn>\n                      <CloseIcon src={'/icons/close.png'} onClick={ this.leaveDash }/>\n                  </TravelBtn>\n              </BtnWrapper>\n            </TopBar>\n          </div>\n\n              {/* first sibling */}\n            {/* dashbaord */}\n          <ElementWrapper style={{\n            opacity: '0'\n          }}>\n            <Element>\n                <DashBoard />\n            </Element>\n          </ElementWrapper>\n\n\n          {/* last sibling */}\n          {/* scroll bar */}\n           <ScrollWrapper>\n              <ScrollBar type='range' value={-this.state.currentAzimuth} min=\"-90\" max=\"90\" \n              onChange={(e)=>{\n                if(!this.state.lockonVault)\n                  {let newValue = -e.target.value\n                  this.setState({currentAzimuth: newValue});}\n              }}\n          />\n           </ScrollWrapper>\n\n         \n         </div>\n    );\n  }\n}\n\nexport default MintDash;\n\n// ------------- HELP FUNCTIONS ------------------------------\n\nfunction toDegrees(rad) {\n  let deg = Math.round(rad * (180 / Math.PI));\n  return deg;\n}\n\n// returns array of paths to side images\nfunction createPathStrings() {\n  const basePath = \"/Assets/skybox2/\"\n  const baseFilename = basePath;\n  const fileType = \".jpg\";\n  const sides = [\"front\", \"back\", \"top\", \"bottom\", \"right\", \"left\"];\n  const pathStings = sides.map(side => {\n    return baseFilename + side + fileType;\n  });\n\n  // console.log(pathStings);\n  return pathStings;\n}\n\n// returns an array of materials.\nfunction createMaterialArray() {\n  const skyboxImagepaths = createPathStrings();\n  const materialArray = skyboxImagepaths.map(image => {\n    let texture = new THREE.TextureLoader().load(image);\n    texture.wrapS = THREE.RepeatWrapping; \n    texture.repeat.x = - 1;\n\n     return new THREE.MeshBasicMaterial({ map: texture, side: THREE.BackSide });\n  });\n  return materialArray;\n}\n\n\n\n\n//  -------------- STYLES -------------------------\n\nconst ElementWrapper = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  min-width: 700px;\n  display: none; \n`\n\nconst Element = styled.div`\n   transform-style: preserve-3d;\n  perspective: 100px;\n   perspective-origin: 500% 500%;\n`\nconst TopBar = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    /* background-color: red; */\n    opacity: 0;\n`\n\nconst ToggleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  /* background-color: red; */\n  -webkit-filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n  filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n  /* width: max-content;\n  height: max-content; */\n\n\n  &:hover{\n    cursor: pointer;\n  }\n\n`\nconst InputBox = styled.input`\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    /* create custom checkbox appearance */\n    display: inline-block;\n    width: 25px;\n    height: 25px;\n    padding: 2px;\n    /* background-color only for content */\n    background-clip: content-box;\n    border: 2px solid white;\n    border-radius: 6px;\n    background-color: transparent;\n    margin: 0 1rem;\n    /* margin-left: 15px;\n    margin-right: 15px; */\n\n  &:hover{\n    cursor: pointer;\n  }\n   \n\n    &:checked{\n        background-color: white;\n    }\n\n    &:focus{\n        outline: none !important;\n    }\n\n\n`\nconst ToggleText = styled.h3`\n  text-transform: uppercase;\n  color: white;\n  margin-left: -.5rem;\n\n`\n\nconst BtnWrapper = styled.div`\n    width: 65px;\n    height: 65px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    -webkit-filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n    filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n`\n\n// const CloseIcon = styled(IoMdCloseCircleOutline)`\nconst CloseIcon = styled.img`\n  width: 100%;\n  height: 100%;\n  opacity: .95;\n  transition: all .1s ease-in-out;\n  cursor: pointer;\n  &:hover{\n    \n     opacity: 1;\n  }\n`\n\nconst TravelBtn = styled.button`\n  z-index: 20;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  padding: .5rem;\n  font-size: 1rem;\n  border: none;\n  font-weight: 100;\n\n`\n\nconst ScrollWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 200px;\n  height: 40px;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: .5rem;\n   transition: opacity ease-in .2s;\n   opacity: 0;\n\n  &:hover{\n    opacity: 1;\n  }\n\n`\n\nconst ScrollBar = styled.input`\n\n  -webkit-appearance: none;\n  margin: 18px 0;\n  width: 100%;\n\n&:focus {\n  outline: none;\n}\n&::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 8.4px;\n  cursor: pointer;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  background: rgba(0,0,0,.75);\n  border-radius: 1.3px;\n  border: 0.2px solid #010101;\n}\n&::-webkit-slider-thumb {\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  border: 1px solid #000000;\n  height: 36px;\n  width: 36px;\n  border-radius: 100%;\n  background-image: url('./images/token.png');\n    background-size: cover;\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -14px;\n}\n&:focus::-webkit-slider-runnable-track {\n  background: rgba(0,0,0,.75);\n}\n&::-moz-range-track {\n  width: 100%;\n  height: 8.4px;\n  cursor: pointer;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  background: rgba(0,0,0,.75);\n  border-radius: 1.3px;\n  border: 0.2px solid #010101;\n}\n&::-moz-range-thumb {\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  border: 1px solid #000000;\n  height: 36px;\n  width: 36px;\n   border-radius: 100%;\n   background-image: url('./images/token.png');\n     background-size: cover;\n  /* background: #ffffff; */\n  cursor: pointer;\n}\n&::-ms-track {\n  width: 100%;\n  height: 8.4px;\n  cursor: pointer;\n  background: transparent;\n  border-color: transparent;\n  border-width: 16px 0;\n  color: transparent;\n}\n&::-ms-fill-lower {\n  background: rgba(0,0,0,.75);\n  border: 0.2px solid #010101;\n  border-radius: 2.6px;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n}\n&::-ms-fill-upper {\n  background: rgba(0,0,0,.75);\n  border: 0.2px solid #010101;\n  border-radius: 2.6px;\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n}\n&::-ms-thumb {\n  box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n  border: 1px solid #000000;\n  height: 36px;\n  width: 36px;\n  border-radius: 100%;\n  background-image: url('./images/token.png');\n  background-size: cover;\n  /* background: #ffffff; */\n  cursor: pointer;\n}\n&:focus::-ms-fill-lower {\n  background: rgba(0,0,0,.75);\n}\n&:focus::-ms-fill-upper {\n  background: rgba(0,0,0,.75);\n}\n`\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/join.js",["245"],"import React from 'react'\n\nimport styled from 'styled-components'\nimport {Textbox} from './textbox';\nimport { data } from './data';\nimport { Heading } from '../../global_styles';\n\nexport const Join = (props) => {\n  const {isDesktop} = props;\n  return (\n     <JoinContainer isDesktop={isDesktop}>   \n        <Heading>Join the Fight</Heading>\n        <BtnGroup>\n\n          {data.socials.map((social,index)=>{\n             return <BtnWrapper href={social.link}  key={index} target=\"_blank\">\n                <BtnImg src={social.navImg}/>\n              </BtnWrapper>\n\n          })}\n\n        </BtnGroup>\n               \n    </JoinContainer>\n            \n  )\n}\n\nconst JoinContainer = styled.div`\n    position: absolute;\n    bottom:${({isDesktop}) => (isDesktop ? ' 4%' : '1%')};\n    width: 100%;\n    height: 11.5%;\n    height: ${({isDesktop}) => (isDesktop ? ' 6%' : '4%')};\n    /* background-color: rgba(200,240,100,.5); */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst BtnGroup = styled.div`\ndisplay: flex;\njustify-content: space-around;\nalign-items: center;\nmargin-top: .75rem;\n\n`\n\nconst BtnWrapper = styled.a`\n   display:flex;   \n  width: 3.2rem;\n  height: 3.2rem;\n  border-radius: 100%;\n  /* /* background-color: #AE4C26; */\n  /* border: solid 2px #441511; */ \n  justify-content: center;\n  align-items: center;  \n  margin: 0 .3rem;\n\n   &:hover{\n          background-color: white;\n\n    }\n\n`\n\nconst BtnImg = styled.img`\n  width: 100%;\n  border-radius: 100%;\n  -webkit-filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n  filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n   &:hover{\n      cursor: pointer;\n  }\n`\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/team.js",["246","247","248","249","250","251"],"import React, { useState, useEffect } from 'react';\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\n\n\nimport styled from 'styled-components'\nimport { data } from './data';\nimport { Heading, useWindowDimensions } from '../../global_styles';\n\n// import Image from 'next/image'\n// import halo from '../../public/images/halo.png'\n\n\n\nexport const Teams = (props) => {\n  const {isDesktop} = props;\n    const {windowWidth, windowHeight } = useWindowDimensions();\n    \n    return (<TeamsHolder>\n    {/* desktop view */}\n    {/* {windowWidth > 800 ? <>\n        <Team id='team' title='the creative deptartment' start={1} isDesktop={isDesktop}/>\n        <Team title='the team' start={2} isDesktop={isDesktop}/></>\n     : */}\n\n    {/* //  tablet view */}\n    <>\n    { windowWidth > 576 ? \n        <Team title='the team and creative department' start={1} isDesktop={isDesktop}/>\n        : \n         //mobile view\n        <TeamMobile start={3} isDesktop={isDesktop}/>}\n    </>\n    {/* } */}\n\n\n   </TeamsHolder>);\n}\n\n\nexport const TeamMobile = (props) => {\n    const { title, start,isDesktop} = props;\n    const {windowWidth, windowHeight } = useWindowDimensions();\n\n    const [pairs,setPairs] = useState(data['pairs']);\n    const [index,setIndex] = useState(0);\n\n\n    useEffect(()=>{\n       const lastIndex = pairs.length-1;\n\n      if(index < 0){\n        setIndex(lastIndex);\n      }\n      if(index > lastIndex){\n        setIndex(0);\n      }\n\n      if (windowWidth < 770)\n      {let slider = setInterval(()=>{\n        setIndex(index+1);\n        // console.log('hello');\n      },6000)\n      \n      return ()=> clearInterval(slider);}\n    },[index,pairs]);\n\n\n  \n  return (\n     <TeamContainer type={start} isDesktop={isDesktop}>\n\n         <Heading>the team and <br/>creative department</Heading>\n           \n        {/* all images displayed over md breakpoint*/}\n          <BubbleWrapper>\n                 {/* switch to slider under md breakpoint */}\n                <div className='section-center'>\n                  {pairs.map((pair,pairIndex)=> {\n                       let p1= pair[0];\n                      let p2 = pair[1];\n                      let p3 = pair[2];\n\n\n                      let position = 'nextSlide'; \n                      if(pairIndex === index){\n                        position='activeSlide';\n                      }\n                      if( pairIndex === index - 1 || \n                        (index === 0 && pairIndex === pairs.length - 1)){\n                        position='lastSlide';\n\n                      }\n                      return (\n                      <article key={pairIndex} className={position}>\n                          <PersonPair key={`${'mobile'}-${index}`}>\n                                {/* person 1 */}\n                                <PersonBox>   \n                                    <a href={p1.link} target={'true'}>\n                                    <Bubble backimage={p1.imgPath} >\n                                    \n                                        {/* {p1.name === 'richard' ? <HaloWrap>\n                                        <img width={'100%'} src='./images/halo.png'/>\n                                        </HaloWrap> : ''} */}\n                                    </Bubble>\n                                    </a>\n                                    <Description>\n                                        <Text strong={true}>{p1.name}</Text>\n                                        <Text>{p1.role}</Text>\n                                    </Description>\n                                </PersonBox>\n\n                                {/* person 2 */}\n                                <PersonBox>   \n                                    <a href={p2.link} target={'true'}>\n                                    <Bubble backimage={p2.imgPath} >\n                                          {/* <img width={'100%'} src={p2.imgPath}/> */}\n                                        {/* {p2.name === 'richard' ? <HaloWrap>\n                                        <img width={'100%'} src='./images/halo.png'/>\n                                        </HaloWrap> : ''} */}\n                                    </Bubble>\n                                    </a>\n                                    <Description>\n                                        <Text strong={true}>{p2.name}</Text>\n                                        <Text>{p2.role}</Text>\n                                    </Description>\n                                </PersonBox>\n\n                                {/* person 3 */}\n                                 <PersonBox>   \n                                    <a href={p3.link} target={'true'}>\n                                    <Bubble backimage={p3.imgPath} >\n                                          {/* <img width={'100%'} src={p2.imgPath}/> */}\n                                        {/* {p2.name === 'richard' ? <HaloWrap>\n                                        <img width={'100%'} src='./images/halo.png'/>\n                                        </HaloWrap> : ''} */}\n                                    </Bubble>\n                                    </a>\n                                    <Description>\n                                        <Text strong={true}>{p3.name}</Text>\n                                        <Text>{p3.role}</Text>\n                                    </Description>\n                                </PersonBox>\n                        </PersonPair>\n                         \n                      </article>\n                      );\n                  })}\n\n                  <button className=\"prev\" onClick={()=> setIndex(index - 1)}><FiChevronLeft style={{cursor: 'pointer'}}/></button>\n                  <button className=\"next\"onClick={()=> setIndex(index +1)} ><FiChevronRight style={{cursor: 'pointer'}}/></button>\n\n                </div>\n            </BubbleWrapper>     \n    </TeamContainer>\n            \n  )\n}\n\n\nexport const Team = (props) => {\n    const { title, start, isDesktop} = props;\n    let list;\n\n    if (start === 1){\n      list = data['team']\n    }\n\n\n    // let list = start === 4 ? data['team'].concat( data['deptartment']).slice(0,-1): data[`${title.split(' ').pop()}`];\n    \n  \n  return (\n     <TeamContainer type={start} isDesktop={isDesktop}>\n\n         <Heading>{title}</Heading>\n           \n        {/* all images displayed over md breakpoint*/}\n          <BubbleWrapper>\n                {list.map((person, index)=>{\n                    return (\n                        <PersonBox key={`${title.split(' ').pop()}-${index}`}\n                                    type={start}>\n                            \n                             <a href={person.link} target={'true'}>\n                            <Bubble backimage={person.imgPath}>\n                                {/* <img width={'100%'} src={person.imgPath}/> */}\n                                {person.name === 'richard' ? <HaloWrap>\n                                <img width={'100%'} src='./images/halo.png'/>\n                                </HaloWrap> : ''}\n                            </Bubble>\n                            </a>\n                            <Description>\n                                <Text strong={true}>{person.name}</Text>\n                                <Text>{person.role}</Text>\n                            </Description>\n                        </PersonBox>\n                        )})}\n         </BubbleWrapper>\n               \n    </TeamContainer>\n            \n  )\n}\n\nconst TeamsHolder = styled.section`\n`\n\nconst TeamContainer = styled.div`\n    position: absolute;\n    width: 100%;\n    /* background-color: rgba(50,40,50,.5); */\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    top: 78%;\n    height: ${({type}) => (type === 1 ? '8%' : '6%')};\n\n     @media screen and (max-width: 1100px){\n       /* width: 85px; */\n        /* background-color: blue; */\n        top: 80%;\n    }\n\n       @media screen and (max-width: 770px){\n       /* width: 85px; */\n        /* background-color: grey; */\n        padding: 0 15%;\n        top: ${({type}) => (type === 1 ? '85%' : '86%')};\n    }\n\n       @media screen and (max-width: 596px){\n       /* width: 85px; */\n        /* background-color: red; */\n        top: ${({type}) => (type === 1 ? '85%' :'89%')};\n        padding: 0 0%;\n    }\n\n\n\n\n`\n\n\nconst BubbleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 0 1rem;\n  flex-wrap: wrap;\n  width: 100%;\n  /* height: 100%; */\n  /* background-color: rgba(50,240,20,.5); */\n  /* min-width: 560px; */\n  /* max-width: 750px; */\n  margin-top: .5rem;\n  min-height: 200px;\n  max-width: 680px;\n\n\n  @media screen and (max-width: 770px){\n         max-width: 500px;\n\n    }\n\n\n\n\n`\n\nconst PersonBox = styled.div`\n    width: 120px;\n    height: 190px;\n    /* background-color: red; */\n    margin: .8rem .75rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    -webkit-filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n    filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n    color: aliceblue;\n\n\n    @media screen and (min-width: ${props => props.theme.breakpoints.xl}){\n       width: 140px;\n      /* background-color: purple; */\n    }\n\n     @media screen and (max-width: 1100px){\n       /* width: 85px; */\n        /* background-color: yellow; */\n        width: 100px;\n        /* margin: .5rem 1.5rem; */\n    }\n\n     @media screen and (max-width: 770px){\n          width: 85px;\n        /* background-color: green; */\n         margin: .5rem 1.1rem;\n    }\n\n\n\n\n     @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n       width:  85px;\n        margin: .5rem 0;\n\n        &:nth-child(2){\n           margin: .5rem .7rem;\n        }\n      /* background-color: purple; */\n    }\n\n    &:hover{\n      cursor: pointer;\n    }\n\n  \n\n`\n\n\nconst PersonPair = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n     /* background-color: blue; */\n`\n\n\nconst Bubble = styled.div`\n    width: 100px;\n    height: 100px;\n    border-radius: 100%;\n    background-color: antiquewhite;\n    border: 2px;\n    border-style: solid;\n    border-color: #ffffff;\n    border-radius: 50px;\n    outline: none;\n    background-image: url('${(props) => props.backimage}');\n    background-position: center;\n    background-size: cover;\n    background-repeat: none;\n    transition: filter .4s ease;\n    -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\n    filter: grayscale(100%);\n\n    &:hover{\n         -webkit-filter: grayscale(0%); /* Safari 6.0 - 9.0 */\n        filter: grayscale(0%);\n        cursor: pointer;\n    }\n\n\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.md}){\n       width: 85px;\n       height: 85px;\n \n    }\n\n     @media screen and (min-width: ${props => props.theme.breakpoints.xl}){\n       width: 120px;\n       height: 120px;\n     \n    }\n\n\n\n`\nconst Description = styled.div`\n    margin-top: 1rem;\n    \n\n`\nconst Text = styled.p`\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: ${({strong}) => (strong ? 'bold' : 'normal')};\n    font-size: ${({strong}) => (strong ? 'normal' : 'small')};\n    line-height: 1rem;\n    margin-bottom: ${({strong}) => (strong ? '.25rem' : '')};\n     /* background-color: antiquewhite; */\n`\n\nconst HaloWrap = styled.div`\n    width: 80px;\n    position: relative;\n    top: -20px;\n    left: 50%;\n    transform: translateX(-50%);\n`\n\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/preloader.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/popup.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/charDev.js",["252","253","254","255"],"import React, { useState, useEffect } from 'react';\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\n\nimport styled from 'styled-components'\nimport {Textbox} from './textbox';\nimport { data } from './data';\nimport { Heading,useWindowDimensions } from '../../global_styles';\nimport { isMobile  } from 'react-device-detect';\n\nlet imgPaths = [\n   '../Assets/chardev/cronos1.png',\n     '../Assets/chardev/cronos2.png',\n   '../Assets/chardev/cronos3.png',\n]\n\n\nexport const CharDev = (props) => {\n    const {isDesktop} = props;\n    const {windowWidth, windowHeight } = useWindowDimensions();\n\n    const [paths,setPaths] = useState(imgPaths);\n    const [index,setIndex] = useState(0);\n\n\n    useEffect(()=>{\n      const lastIndex = paths.length-1;\n\n      if(index < 0){\n        setIndex(lastIndex);\n      }\n      if(index > lastIndex){\n        setIndex(0);\n      }\n\n    },[index,paths]);\n    \n    useEffect(()=>{\n\n      if (false )\n      {let slider = setInterval(()=>{\n        setIndex(index+1);\n        // console.log('hello');\n      },4500)\n      \n      return ()=> clearInterval(slider);}\n    },[index]);\n\n\n  return (\n     <CharDevContainer isDesktop={isDesktop}> \n         \n         <Wrapper>\n            <Heading style={{marginBottom: '.5rem'}}>Character Development</Heading>\n            {/* all images displayed over md breakpoint*/}\n            {true ?\n            \n            <ImagesWrapper>\n                   {imgPaths.map((path,index)=>{\n                       return <ImageDev key={index}\n                                         src={path}\n                            />\n                   })}\n            </ImagesWrapper> \n            :\n              // {/* switch to slider under md breakpoint */}\n                <div className='section-center'>\n                  {paths.map((path,pathIndex)=> {\n\n                      let position = 'nextSlideBack'; \n                      if(pathIndex === index){\n                        position='activeSlideBack';\n                      }\n                      if( pathIndex === index - 1 || \n                        (index === 0 && pathIndex === paths.length - 1)){\n                        position='lastSlideBack';\n\n                      }\n                      return (\n                      <article key={pathIndex} className={position}>\n                          <img src={path} alt={'character-dev'} className='slider-img'/>\n                      </article>\n                      );\n                  })}\n\n                  <button className=\"prev\" onClick={()=> setIndex(index - 1)}><FiChevronLeft style={{cursor: 'pointer'}}/></button>\n                  <button className=\"next\"onClick={()=> setIndex(index + 1)} ><FiChevronRight style={{cursor: 'pointer'}}/></button>\n\n                </div>}\n            <div>\n\n              <Textbox style={{marginTop: '.5rem'}} data = {data['chardev']}/>\n            </div>\n          \n        </Wrapper>      \n           \n    </CharDevContainer>\n            \n  )\n}\n\nconst CharDevContainer = styled.div`\n    position: absolute;\n    top: ${({isDesktop}) => (isDesktop ? '68%' : '76.5%')};\n    width: 100%;\n    height: 7%;\n    /* background-color: rgba(200,240,100,.5); */\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n`\n\nconst Wrapper = styled.div`\n    max-width: 700px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    /* justify-content: flex-start; */\n    width: 100%;\n    height: 100%;\n    /* background-color: rgba(200,240,100,.5); */\n    position: relative;\n    margin: 0 1rem;\n\n   \n`\n\nconst ImagesWrapper = styled.div`\n    /* height:200px; */\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin: 1rem auto;\n    /* background-color: rgba(200,0,100,.5); */\n   \n`\n\n\nconst ImageDev = styled.img`\n    width: 31%;\n     -webkit-filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n  filter: drop-shadow( 0px 4px 4px rgba(0, 0, 0, 0.25));\n`","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/comic.js",["256","257"],"import React from 'react'\n// import Image from 'next/image'\n// import preview from '../images/comic.jpg'\n\nimport styled from 'styled-components'\nimport {Textbox} from './textbox';\nimport { data } from './data';\nimport { Heading,useWindowDimensions } from '../../global_styles';\n\n\nconst scrollCutoff = 450\n\nexport const Comic = (props) => {\n  const {isDesktop} = props;\n   const {windowWidth, windowHeight } = useWindowDimensions();\n\n  return (\n     <ComicContainer isDesktop={isDesktop}>   \n      <ComicWrapper>\n        \n        <ColWrapper>\n             <Textbox data = {data['comic']}/>\n              { windowWidth < `${scrollCutoff}` && <TextboxSub><strong>(Swipe right to view comic cover)</strong></TextboxSub>}\n        </ColWrapper>\n\n       \n        <ImgWrapper>\n                <ComicImg\n                    // layout='intrinsic'\n                  //   width={'100%'}\n                    src='../images/comic.png'\n                />\n        </ImgWrapper>\n    \n      </ComicWrapper>    \n    </ComicContainer>\n            \n  )\n}\n\nconst ComicContainer = styled.div`\n    position: absolute;\n    /* top: ${props => props.theme.sectionStart.comic}; */\n    top: ${({isDesktop}) => (isDesktop ? '57%' : '68.5%')};\n    width: 100%;\n    height:${({isDesktop}) => (isDesktop ? '7%' : '6.5%')};\n\n    /* background-color: rgba(100,40,200,.5); */\n\n   @media screen and (max-width: ${scrollCutoff}px){\n      overflow-x: scroll;\n\n   }\n\n`\n\nconst ComicWrapper = styled.div`\n  \n   height: 100%;\n   padding: 0 1rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n\n    @media screen and (max-width: ${scrollCutoff}px){\n        width: 200%;\n         justify-content: flex-start;\n         overflow-x: scroll; \n         /* overflow-y: visible; */\n         padding: 0 0rem;\n         /* display: inline; */\n       \n    }\n\n`\n\n\nconst ColWrapper = styled.div`\n/* background-color: aliceblue; */\nflex: 1;\nmax-width: 750px;\n\n @media screen and (max-width: ${props => props.theme.breakpoints.lg}){\n       flex: 1.8;\n      /* background-color: red; */\n    }\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.md}){\n       flex: 1.6;\n    }\n\n   @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n      flex: 1.3;\n      width: 100%;\n       margin-left: 0%;\n   }\n\n\n    @media screen and (max-width:${scrollCutoff}px){\n         flex: 1;\n         display: block;\n         width: 100%;\n    }\n`\n\nconst ImgWrapper = styled.div`\n    max-width: 300px;\n    display: flex;\n    justify-content: flex-start;\n    align-self: center;\n    flex: 1.5;\n    /* background-color: red; */\n\n     @media screen and (max-width: ${props => props.theme.breakpoints.lg}){\n       flex: 1;\n    }\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n       /* display: none; */\n        margin-left: 0%;\n        justify-content: center;\n         height: 70%;\n       /* width: 100vw;  */\n    }\n\n    @media screen and (max-width: ${scrollCutoff}px){\n       /* flex-direction: column; */\n      flex: 1;\n      max-width: none;\n      width: 100%;\n      justify-content: center;\n    }\n\n`\n\n\n\nconst ComicImg = styled.img`\n   width: 100%;\n \n\n   @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n       /* display: none; */\n         width: auto;\n         margin-left: 0%;\n         height: 120%;\n         position: relative;\n         top: 50%;\n         transform: translateY(-50%);\n    }\n\n     @media screen and (max-width: ${scrollCutoff}px){\n         height: 140%;\n       \n    }\n\n\n    \n\n\n`\n\n\nconst TextboxSub = styled.div`\n    position: relative;\n    font-size: .8rem;\n    text-align: center;\n    right: 50%;\n    margin-top: -.5rem;\n    transform: translateX(50%);\n`","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/data.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/textbox.js",["258","259","260","261","262","263"],"import { Heading, useWindowDimensions } from '../../global_styles';\nimport React, {useRef,useState} from 'react';\n\n\nimport styled from 'styled-components';\nimport { MobileTextViewer } from './mobileTextViewer';\n\n\n\n\n\nexport const Textbox = (data) => {\n    const {tightSub, rightAlign} = data;\n    const {title, text, subtext, preview} = data.data;\n\n    const {windowWidth, windowHeight } = useWindowDimensions();\n    // const [showModal, setShowModal] = useState(false);\n\n    // const toggleView = ()=>{\n    //     setShowModal(value => !value);\n    //     // console.log('pres');\n    //   }\n\n\n  return (<>\n      \n    <Container >\n        <Wrapper>\n            {title && <Heading \n                        style={{marginBottom: `${windowWidth > 765 ? '.75rem' : '.25rem'}`, textAlign: `${rightAlign ? 'right': 'center'}`}}>{title}</Heading>}\n            \n            {/* {windowWidth > 765 ? \n            <> */}\n            {\n            text.map((info,index)=>{\n                 return <Paragraph key={index}>{info}</Paragraph>\n            })}\n\n            {subtext && <Subtext \n                style={{marginTop: `${tightSub ? '-.75rem' : '0'}`}}\n            >{subtext}</Subtext>}\n\n            {/* </>:<Paragraph style={{textAlign: `${rightAlign ? 'right': 'center'}`}}>{preview}... <ReadMore onClick={toggleView}>Read More</ReadMore></Paragraph>*/}\n             \n\n        </Wrapper>\n\n          \n    </Container>\n    {/* {showModal && <MobileTextViewer data={data.data} callback={toggleView}/>} */}\n  </>\n  )\n}\n\nconst Container = styled.div`\n    margin: 0 auto;\n    max-width:  ${props => props.theme.boxstyle.textBoxMaxWidth};\n\n     @media screen and (max-width:770px){\n       max-width: 650px;\n    }\n`\nconst Wrapper = styled.div`\n    margin: 0 ${props => props.theme.boxstyle.margin};\n    overflow: hidden;\n \n\n`\n\nconst Paragraph = styled.p`\n    font-weight: 400;\n    text-align: center;\n    margin-bottom: .75rem;\n    font-size: 1rem; \n    text-align: center;\n   \n    @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n      font-size: .8rem;\n    }\n/* \n     @media screen and (min-width: 550px){\n      font-size: 1rem;\n    }\n\n      @media screen and (min-width: ${props => props.theme.breakpoints.lg}){\n      font-size: 1.2rem; \n    } */\n\n`\n\nconst Subtext = styled.p`\n    font-size: small;\n    font-weight: 400;\n    text-align: center;\n    \n`\n\nconst ReadMore = styled.strong  `\n  width: 100%;\n  height: 100%;\n  /* z-index: 2; */\n  /* background-color: aliceblue; */\n  &:hover{\n    /* color: red; */\n      color: ${props => props.theme.colors.accent};\n      cursor: pointer;\n  }\n\n`","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/sidebar2.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/whitelistModal.js",["264"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n\n\nexport const WhitelistModal = ({closePopUp, status}) => {\n    const [showPopUp, setShowPopUp] = useState(true);\n\n   \n    \n  return (\n    <Container showPopUp={showPopUp}  onClick={()=>{\n                setShowPopUp(false);\n                closePopUp();\n            }}>\n        <Wrapper>\n            <CloseBtn src={'./icons/close.png'}/>\n           \n            {status.map((text,index)=>{     \n                if (text){\n                     return <Heading key={index}>{text}</Heading>\n                }\n               \n            })}             \n            \n        </Wrapper>\n    </Container>\n  )\n}\n\n\nconst Container = styled.div`\n    position: fixed;\n    top: 10%;\n    left: 50%;\n    transform: translate(-50%,0);\n    background-color: rgba(0,0,0,.9);\n    width: 85%;\n    /* height: 90%; */\n    z-index: 20;\n    max-width: 700px;\n    /* max-height: 250px; */\n    animation: grow 1.6s 1;\n\n\n\n    padding: 1rem; \n    padding-top: 55px;\n    @media screen and (max-width:576px ) {\n        padding-top: 50px;\n    }\n\n    ${({showPopUp})=> ((!showPopUp)? `\n         animation: shrink 1s 1;\n    ` : \"\")}\n   \n    @keyframes shrink {\n        30%{\n            opacity: 0;\n            visibility: 0;\n        }\n        100%{\n            width: 0;\n            height: 0;\n            opacity: 0;\n            visibility: 0;\n        }  \n    }\n\n        @keyframes grow {\n        0%{\n            width: 0;\n            height: 0;\n            opacity: 0;\n            visibility: 0;\n\n        }\n        50%{\n            opacity: 0;\n            visibility: 0;\n        }\n        100%{\n             opacity: 1;\n            visibility: 1;\n           \n        }  \n    }\n\n`\n\nconst Wrapper = styled.div`\n    height: 100%;\n    width: 100%;\n    /* background-color: red; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction:column;\n`\n\nconst CloseBtn = styled.img`\n    width: 30px;\n\theight: 30px;\n    position: absolute; \n\ttop: 0px;\n\tright: 0px;\n    margin: 1rem;\n    z-index: 50;\n    opacity: .75;\n    transition: opacity 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n\n  &:hover{\n    cursor: pointer;\n  }\n\n  @media screen and (max-width:576px ) {\n       width: 25px;\n\t    height: 25px;\n    }\n  \n`\n\n\nconst Heading = styled.h1`\n    text-transform: uppercase;\n    /* font-weight: 800; */\n    font-style: italic;\n    font-family: 'Montserrat', sans-serif;\n    letter-spacing: 1px;\n    text-align: center;\n    font-size: 1rem;\n    color: white;\n\n\n\n    &:nth-child(3){\n        margin-top: 20px;\n        margin-bottom: 10px;\n        /* background-color: red; */\n    }\n   \n\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.sm}){\n      font-size: .8rem;\n    }\n    \n`","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/Shaders/ShaderEnter.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/threeJs/Shaders/ShaderExit.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/comicverseDashboard.js",["265"],"import React, { useEffect,useReducer } from 'react';\nimport styled from 'styled-components';\nimport { Inventory } from './inventory';\nimport { MainDisplay } from './mainDisplay';\nimport { MintComic } from './mintComic';\nimport { Selected } from './selected';\nimport { Traits } from './traits';\nimport { PreviewModal } from './previewModal';\nimport {reducer, inventory, defaultState} from './comicReducer';\n\n\nexport const ComicDashboard = () => {\n\n  const [state, dispatch] = useReducer(reducer,defaultState);\n\n// auto hides modal on resize\n  useEffect(() => {\n    window.addEventListener('resize', function(){\n       dispatch({type: 'HIDE_MODAL'});\n    })\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener('resize', function(){});\n    };\n  },[]);\n\n  return (<>\n   <Wrapper>\n     {/* <BtnContainer>\n        <BtnWrap  onClick={()=>{\n                 setSelectedNFTs((prevSelected) => [\n                              ...prevSelected,\n                              zeusInfo,\n                          ]);\n              }}>\n              <WalletBtn src={'/Assets/comicWidgets/walletBtn.png'}/>\n              <BtnText>Connect Wallet</BtnText>\n        </BtnWrap>\n      </BtnContainer> */}\n\n     {/* title */}\n      <TitleContainer>\n   \n          <Title>\n               The Comic Studio \n            </Title>\n            <SubTitle>\n               An innovation labs project\n            </SubTitle>\n            <SubSubTitle>\n              ( Prototype )\n            </SubSubTitle>\n\n          {/* mint btn */}\n         \n      </TitleContainer>\n\n      <DashContainer>\n        <DashWrapper>\n          {/* col 1 */}\n          <DashCol>\n              <Inventory \n                  state = {state}\n                  dispatch = {dispatch}\n                  inventory={inventory}\n                  />\n              <Traits info={inventory[state.currentIndex]}/>\n          </DashCol>\n\n           {/* col 2 */}\n          <DashCol>\n              <MainDisplay info={inventory[state.currentIndex]}/>\n          </DashCol>\n\n           {/* col 3 */}\n          <DashCol>\n              <Selected \n                    state = {state}\n                    dispatch = {dispatch}/>\n              <MintComic \n                    state = {state}\n                    dispatch = {dispatch}\n                   />\n          </DashCol>\n        </DashWrapper>\n      </DashContainer>\n  \n  </Wrapper>\n\n  <PreviewModal \n      state = {state}\n      dispatch = {dispatch}\n      />\n      \n  </>)\n}\n\n\nconst Wrapper = styled.div`\n\n  opacity: 0;\n  position: fixed;\n  top:0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* background-color: blue; */\n\n   /* z-index: -100; */\n  width: 100vw;\n   user-select: none;\n  -moz-user-select: none;\n  -khtml-user-select: none;\n  -webkit-user-select: none;\n  -o-user-select: none;\n  \n\n     @media screen and ((max-height: 750px) or (max-width: 1400px )){\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background-color: red;\n\n     } \n\n`\n\nconst BtnWrap = styled.button`\n  background-color: transparent;\n  position: relative;\n  margin: 0 80px;\n  height: 100%;\n  width: 250px;\n  align-self: flex-start;\n  /* background-color: #050e3375; */\n  border: none;\n  transition: all .3s ease-in-out;\n  cursor: pointer;\n\n  &:hover{\n    \n    /* color: #7E746F; */\n    background-color: #1D2A60;\n    /* outline: 2px white solid; */\n  }\n\n`\n\nconst TitleContainer = styled.div`\n  /* position: absolute; */\n  margin: 0 auto;\n  margin-top: 24px;\n  margin-bottom: .5rem;\n  /* top: 0; */\n  /* background-color: red; */\n  height: 75px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => props.theme.comicverse.maxWidth};\n  /* min-width: ${props => props.theme.boxstyle.minWidth}; */\n`\n\nconst Title = styled.h1`\n  font-style: italic;\n  font-family: 'Montserrat', sans-serif;\n  letter-spacing: 1px;\n  text-align: center;\n  text-shadow: 0 0 3px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n  text-shadow: 0 0 4px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n\n\n  text-transform: uppercase;\n  /* color: #E7E7E7; */\n  color: #b5b4bf;\n  font-size: 3rem;\n   -webkit-text-stroke-width: 2px;\n  -webkit-text-stroke-color: #FFEFFF;\n\n  /* -webkit-text-shadow: 0px 0px 15px 5px #EBEFF5;  */\n  /* text-shadow: #EBEFF5 0px 0px 3px; */\n\n`\nconst SubTitle = styled.h4`\n  text-transform: uppercase;\n  color: #FFEFFF;\n  text-shadow: 0 0 2px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n  text-shadow: 0 0 1px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n\n  /* text-shadow: #EBEFF5 0px 0px 3px; */\n  /* font-weight: bolder; */\n`\nconst SubSubTitle = styled.h5`\n  text-transform: uppercase;\n  color: #FFEFFF;\n  text-shadow: 0 0 2px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n  text-shadow: 0 0 1px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n\n  /* text-shadow: #EBEFF5 0px 0px 3px; */\n  /* font-weight: bolder; */\n`\n\nconst DashContainer = styled.div`\n  text-shadow: 0 0 2px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n  text-shadow: 0 0 1px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n  /* background-color: yellow; */\n  width: 100%;\n  /* height: 100%; */\n  max-width: 1200px;\n  /* min-width: ${props => props.theme.boxstyle.minWidth}; */\n   /* margin: 0 auto; */\n\n   @media screen and (max-width: ${props => props.theme.breakpoints.xl}){\n     padding: 0 ${props => props.theme.boxstyle.marginX};\n    }\n\n    @media screen and (max-height: 750px){\n      max-width: 1000px;\n      /* background-color: red; */\n    }\n\n\n      @media screen and (max-width: 1200px) and (min-height: 780px){\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        /* background-color: red; */\n\n     } \n\n`\n\nconst DashWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  /* background-color: purple; */\n\n  \n`\n\n\nconst DashCol = styled.div`\n  width: 20%;\n  height: 100%;\n  /* background-color: green; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 2;\n  \n/* \n    @media screen and (max-width: ${props => props.theme.breakpoints.xl}){\n      width: 28%;\n  \n    } */\n\n  &:nth-child(1){\n      align-self: flex-end;\n     }\n\n  &:nth-child(2){\n    width: 30%;\n    flex: 3;\n    align-self: flex-end;\n    /* background-color: red; */\n\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.xl}){\n       /* margin: 0 1rem; */\n       /* width: 29%;   */\n    }\n    \n  }\n`\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/dashboard/index.js",["266","267"],"import React, { useEffect, useState } from 'react';\nimport { YTDbox} from '../ytdBox';\nimport { ActivityBox } from '../activityBox';\nimport { DistributedBox} from '../distributedBox';\nimport { CollectionBox} from '../collectionBox';\n\n\n\nimport {\n    DashContainer,\n    DashWrapper,\n    DashRow,\n    DashDataColumn,\n    YTDrow,\n    DistributeRow,\n    BtnWrapper,\n    DashCollectColumn,\n    Button\n\n} from './dashboardElements';\n\nlet helpBelowRoyaltyFloor = <>Unfortunately no royalties were earned because this NFT sale sold on OpenSea for under the Royalty Floor amount - (original mint price + 10%). Only sales made above the Royalty floor are eligible for you to earn royalty earnings on.</>\n\n\nlet helpRoyaltyCollect = <>This balance shows the current amount of royalties that you have available to withdraw to your wallet. Press collect to action your withdrawal.</>\nlet helpDividendCollect = <>This balance shows the current amount of dividends that you have available to withdraw to your wallet. Press collect to action your withdrawal.</>\nlet helpRoyaltyDistributed = <>This is the current total amount of royalties paid out to collectors across the entire NFT project. </>\nlet helpDividendDistributed = <>This is the current total amount of dividends paid out to collectors across the entire NFT project. </>\n\n\n\n\nvar baseUserInfo = {\n    ytdEarning: 0.0,\n    ytdDonated: 0.0,\n    royaltyToCollect: 0.0,\n    dividendToCollect: 0.0,\n    donationActiveRoyalty: false,\n    donationPercentRoyalty: .0,\n    donationActiveDividend: false,\n    donationPercentDividend: .0,\n    nfts: []\n}\n\nvar userInfo = {\n    ytdEarning: .51,\n    ytdDonated: 0.0,\n    royaltyToCollect: .096,\n    dividendToCollect: 0.05,\n    donationActiveRoyalty: false,\n    donationPercentRoyalty: .0,\n    donationActiveDividend: false,\n    donationPercentDividend: .0,\n    nfts: [\n        {\n            collection_name: \"Gods and Titans\",\n            token_id: 65,\n            transactions: [\n                {\n                    value: 0.1,\n                    royalty_amount_earned: 0.0,\n                    date: '10 days ago'\n                }\n            ]\n        },\n            {\n            collection_name: \"Gods and Titans\",\n            token_id: 844,\n            transactions: [\n                 {\n                    value: 0.24,\n                    royalty_amount_earned: 0.0,\n                    date: '5 days ago'\n                },\n                {\n                    value: 1.0,\n                    royalty_amount_earned: 0.04,\n                    date: '4 days ago'\n                },\n                {\n                    value: 2.4,\n                    royalty_amount_earned: .096,\n                    date: '2 days ago'\n                },\n            ]\n        }, {\n            collection_name: \"Gods and Titans\",\n            token_id: 2423,\n            transactions: [\n                 {\n                    value: 1.1,\n                    royalty_amount_earned: 0.044,\n                    date: '20 days ago'\n                },\n                {\n                    value: 1.5,\n                    royalty_amount_earned: 0.06,\n                    date: '10 days ago'\n                },\n                {\n                    value: 1.55,\n                    royalty_amount_earned: .062,\n                    date: '4 days ago'\n                },\n            ]\n        }\n\n    ]\n}\n\nvar baseCompanyInfo = {\n    royaltyTotal: 0.0,\n    dividendsTotal: 0.0,\n    donationsTotal: 0.0,\n   \n}\n\nvar companyInfo = {\n    royaltyTotal: 22.1,\n    dividendsTotal: 3.2,\n    donationsTotal: 0.0,\n   \n}\nexport const DashBoard = () => {\n const ethToDollar =  3227.74;\n\n const [isActivated, ToggleIsActivated] = useState(false);\n const [currentInfo, ToggleCurrentInfo] = useState(baseUserInfo);\n const [currentCompanyInfo, ToggleCompanyInfo] = useState(baseCompanyInfo);\n\n\n useEffect(()=>{\n        toggleConnect()\n },[])\n\n\nconst toggleConnect =()=>{\n\n        if(isActivated){\n            ToggleIsActivated(false)\n            ToggleCurrentInfo(baseUserInfo);\n            ToggleCompanyInfo(baseCompanyInfo);\n\n        }else{\n            ToggleIsActivated(true)\n            ToggleCurrentInfo(userInfo);\n            ToggleCompanyInfo(companyInfo);\n\n        }\n        \n    }\n\n \n  return (\n       <DashContainer>\n           <DashWrapper>\n                <DashRow>\n                    <DashDataColumn>\n                        {/* <YTDrow>\n                                <YTDbox \n                                    title='ytd earnings' \n                                    eth = {currentInfo.ytdEarning}\n                                    convertUSD = {ethToDollar}\n                                    helpText = {lispum}\n                                    order = {1}\n                                    />\n                                <YTDbox \n                                    title='ytd donated' \n                                    eth = {currentInfo.ytdDonated}\n                                    convertUSD = {ethToDollar}\n                                     helpText = {lispum}\n                                     order = {2}\n                                    />\n                            </YTDrow> */}\n\n                            <ActivityBox nfts = {currentInfo.nfts} helpText = {helpBelowRoyaltyFloor}/>\n\n                            <DistributeRow>\n                                <DistributedBox \n                                        title='royalties distributed' \n                                        eth = {currentCompanyInfo.royaltyTotal}\n                                        convertUSD = {ethToDollar}\n                                         helpText = {helpRoyaltyDistributed}\n                                         order = {1}\n                                        />\n                                <DistributedBox \n                                        title='dividends distributed' \n                                        eth = {currentCompanyInfo.dividendsTotal}\n                                        convertUSD = {ethToDollar}\n                                        helpText = {helpDividendDistributed}\n                                        order = {2}\n                                        />\n                                {/* <DistributedBox \n                                        title='donations collected' \n                                        eth = {currentCompanyInfo.donationsTotal}\n                                        convertUSD = {ethToDollar}\n                                        helpText = {lispum}\n                                        order = {3}\n                                        /> */}\n                            </DistributeRow>\n\n                    </DashDataColumn>\n\n                    <DashCollectColumn>\n                            <BtnWrapper>\n                                <Button id='connect_wallet'\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'column'\n                                    }}\n                                    \n                                    onClick={toggleConnect}>\n\n                                {!isActivated ? \n                                        <>\n                                            <div>Connect Wallet</div>\n                                            <h6>(Press for demo)</h6>\n                                        </>\n                                    :\n                                        <>\n                                        <div>WALLET CONNECTED</div>\n                                         <h6>(Demo)</h6>\n                                         </>}\n                                </Button>\n\n                            </BtnWrapper>\n                            <YTDbox \n                                    title='ytd earnings' \n                                    eth = {currentInfo.ytdEarning}\n                                    convertUSD = {ethToDollar}\n                                    order = {1}\n                                    />\n                            \n                            <CollectionBox\n                                title='royalties to collect' \n                                eth = {currentInfo.royaltyToCollect}\n                                convertUSD = {ethToDollar}\n                                donationActive = {currentInfo.donationActiveRoyalty}\n                                donationPercent = {currentInfo.donationPercentRoyalty}\n                                helpText = {helpRoyaltyCollect}\n                                order = {1}\n                            />\n                            <CollectionBox\n                                title='dividend to collect' \n                                eth = {currentInfo.dividendToCollect}\n                                convertUSD = {ethToDollar}\n                                donationActive = {currentInfo.donationActiveDividend}\n                                donationPercent = {currentInfo.donationPercentDividend}\n                                helpText = {helpDividendCollect}\n                                order = {2}\n                                \n                            />\n                    </DashCollectColumn>\n                </DashRow>\n            </DashWrapper>\n       </DashContainer>\n           \n  )\n}\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/gat_components/mobileTextViewer.js",["268","269","270"],"import React, {useEffect,useState} from 'react';\nimport styled from 'styled-components';\nimport {IoCloseCircleSharp} from 'react-icons/io5';\nimport { useWindowDimensions } from '../../global_styles';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\n\nexport const MobileTextViewer = (data) => {\n    const { callback } = data;\n    const {title, text, mobileTitle } = data.data;\n    const [showModal, setShowModal] = useState(false);\n    const {windowWidth, windowHeight } = useWindowDimensions();\n    const targetElement = document.querySelector('#body');\n\n    const mintText = document.querySelector('#mintText');\n\n\n  useEffect(()=>{\n        // mintText.style.zIndex = 0;\n        setShowModal(true);\n        disableBodyScroll(targetElement);\n        window.addEventListener('resize',close);\n    return ()=> { \n        window.removeEventListener('resize',close); \n    };\n  }, []);\n\n    const close = () =>{\n        setShowModal(false);\n       \n      \n        setTimeout(() => {  \n                enableBodyScroll(targetElement);\n                //  mintText.style.zIndex = 1;\n                callback();\n            }, 500);\n    }\n    \n\n  return (\n    <MobileViewContainer id='mobileViewContainer' show={showModal}>\n        <MobileViewWrapper id='mobileViewBody' show={showModal}>\n            <MobileBG src={`${windowWidth > 500 ? '/images/textViewBG2.png': '/images/textViewBG.png'}`}/>\n            <CloseIconWrap onClick={close}>\n                    <CloseIcon/>\n            </CloseIconWrap>\n\n            <MobileTextWrap>\n            <MobileHeader>\n               {title ? title : mobileTitle}\n            </MobileHeader>\n\n            {text.map((info,index)=>{\n                 return <MobileText key={index} >{info}</MobileText>\n            })}\n\n\n            </MobileTextWrap>\n        </MobileViewWrapper>\n    </MobileViewContainer>\n  )\n}\n\n\nconst MobileViewContainer = styled.div`\n    position: fixed;\n    z-index:  ${({show}) => (show ? '100' : '-1')};\n    width: 100vw;\n    height: 100vh;\n    background-color: ${({show}) => (show ? '#FFFFFF75' : 'transparent')};\n    top: 0;\n    left: 0;\n    transition: background-color .5s ease-in, z-index .5s ease-in;\n\n`\n\nconst MobileViewWrapper = styled.div`\n    position: absolute;\n    width: 85%;\n    max-width: 450px;\n    height: min-content;\n    transition: top .5s ease-in;\n    top: ${({show}) => (show ? '50%' : '150%')};\n    right: 50%;\n    border-radius: 20px;\n    overflow: hidden;\n    transform: translateX(50%) translateY(-50%);\n    z-index:  ${({show}) => (show ? '1000' : '-1')};\n\n\n`\n\nconst MobileBG = styled.img`\n    position: relative;\n    /* top: 50%; */\n    /* transform: translateY(-50%); */\n    width: 100%;\n    margin: 0 auto;\n\n\n\n`\n\nconst CloseIconWrap = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 1.75rem;\n    height: 1.75rem;\n    /* background-color: red; */\n    margin: 1rem;\n    border-radius: 100%;\n    z-index: 11;\n\n`\n\nconst CloseIcon = styled(IoCloseCircleSharp)`\n    width: 100%;\n    height: 100%;\n    color: #FFFFFF95;\n\n    &:hover{\n        color: #464545;\n    }\n\n`\n\nconst MobileTextWrap = styled.div`\n    top: 5%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    position: absolute;\n    width: 85%;\n    height: 90%;\n    /* height: 75%; */\n    /* margin: 1rem; */\n    /* background-color: blue; */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: scroll;\n    /* padding: 0.5rem; */\n\n\n\n`\n\nconst MobileHeader= styled.h3`\n    text-transform: uppercase;\n    font-weight: 800;\n    letter-spacing: 1px;\n    text-align: center;\n    font-size: 1.2rem;\n    margin: 1rem .5rem;\n    color: #FEF3C7;\n    font-size: 1.2rem;\n    font-weight: bolder;\n`\n\nconst MobileText = styled.p`\n    /* font-weight: 500; */\n    text-align: center;\n    color: #FEF3C7;\n    font-size: 1rem;\n    line-height: 1.1rem;\n    margin-bottom: .75rem;\n   \n`\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/mainDisplay.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/mintComic.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/selected.js",["271","272","273"],"import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { NftCard } from './nftCard';\n\n\nexport const Selected = ({ state,dispatch }) => {\n\n    const [currentIndex, setCurrentIndex] = useState(0);\n\n\n    const cycleIndex = (type) => {\n\n        if (state.selectedNFTs.length > 3){\n            const lastIndex = state.selectedNFTs.length-1;\n            \n            let newIndex;\n            if (type === 'inc' ){\n                newIndex = currentIndex + 1\n            }else{\n                newIndex = currentIndex - 1\n            }\n\n            if(newIndex < 0){\n                setCurrentIndex(lastIndex);\n            }\n            else if(newIndex > lastIndex){\n                setCurrentIndex(0);\n            }else{\n                setCurrentIndex(newIndex);\n            }\n        }\n    }\n\n    let displayedNFTs = getDisplayed(state.selectedNFTs, currentIndex, 3);\n  return (\n       <Container>\n         <BG src={'./Assets/comicWidgets/selected_base.png'}/>\n\n        <TitleWrap>\n           <Title>selected nfts</Title>\n         </TitleWrap>\n\n        <InviteBtnWrap>\n             <BtnImg src={'./Assets/comicWidgets/button.png'}/>\n             <WalletTxt style={{fontSize: '50%'}} onClick={()=>{dispatch({type: 'CANCEL_MODAL'})}}>clear all</WalletTxt>\n         </InviteBtnWrap>\n\n\n\n\n         <MidSection>\n           <MidWrap>\n              <ChevronWrap onClick={()=>{cycleIndex('dec')}}><img src={'/icons/arrow.png'} height={'100%'}/></ChevronWrap>\n\n              <SelectedWrap>\n                  {displayedNFTs.map((cardInfo, index)=>{\n\n                    return <SmallCardWrap \n                        key = {index}\n                        showHover={cardInfo.name}\n                        onClick={()=>{\n                         dispatch({type: 'REMOVE_SELECTED', selected: cardInfo})\n                    }}>\n                            \n                            <NftCard info={cardInfo}/>\n                            {cardInfo.name && <RemoveBtnWrap>\n                                 <RemoveBtn \n                                 src={'./icons/close.png'}\n                                 onClick={()=>{\n                                    // dispatch({type: 'REMOVE_SELECTED', selected: cardInfo})\n                                 }}/>\n                            </RemoveBtnWrap>}\n                        </SmallCardWrap>;\n                    })} \n\n              </SelectedWrap>\n\n              <ChevronWrap onClick={()=>{cycleIndex('inc')}}><img src={'/icons/arrow.png'} height={'100%'} style={{transform:'rotate(180deg)'}}/></ChevronWrap>\n\n\n           </MidWrap>\n         </MidSection>\n\n           {/* <ApplyBtnWrap onClick={()=>{\n               if (selectedNFTs.length > 0)\n                   console.log(getImgPath(displayedNFTs));\n           }}>\n             <ApplyBtn>Apply to comic</ApplyBtn>\n         </ApplyBtnWrap> */}\n\n   </Container> \n           \n  )\n}\n\nconst Container = styled.section`\n    width: 100%;\n    position: relative;\n    margin-bottom: .5rem;\n\n    /* background-color: aliceblue; */\n`\n\nconst BG = styled.img`\n    width: 100%;\n`\nconst TitleWrap = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 50%;\n\nmargin: ${props => props.theme.comicverse.margin};\n`\n\nconst Title = styled.h4`\n    color: ${props => props.theme.colors.white};\n    text-transform:uppercase;\n    font-weight: 500;\n\n       @media screen and (max-width: ${props => props.theme.breakpoints.lg}){\n        font-size: .8rem;\n     \n  \n    }\n`\n\nconst MidSection = styled.div`\n    position: absolute;\n    top: 10%;\n    left: 0;\n    width: 100%;\n    height: 85%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* background-color: aliceblue; */\n \n`\n\nconst MidWrap = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    /* background-color: red; */\n    margin:  0 .4rem;\n   \n`\n\nconst ChevronWrap = styled.button`\n    margin: 0 .2rem;\n    background-color: transparent;\n    border: none;\n    height: 25px;\n\n    &:hover{\n         cursor: pointer;\n         filter: drop-shadow(0 0 6px rgb(255, 255, 255, .9));\n    }\n   \n`\n\nconst SelectedWrap = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    /* background-color: purple; */\n    /* margin: ${props => props.theme.comicverse.margin}; */\n   \n`\n\nconst SmallCardWrap = styled.div`\n    width: 30%;\n    margin: .2rem; \n    height: 48%;\n\n    ${({showHover})=>(showHover ? `\n       &:hover{\n        cursor: pointer;\n    }\n    \n    `: ``)}\n \n    /* background-color: blue; */\n`\nconst RemoveBtnWrap = styled.div`\n    position: relative;\n    top:-75%;\n    float: right;\n    height: 30px;\n    width: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* background-color: red; */\n    z-index: 50;\n\n    @media screen and (max-width: 1200px){\n        height: 20px;\n        width: 20px;\n    }\n\n\n\n`\n\nconst RemoveBtn = styled.img`\n    width: 90%;\n    height: 90%;\n    border-radius: 100%;\n\n    &:hover{\n        cursor: pointer;\n    }\n\n`\n\nconst ApplyBtnWrap = styled.div`\n    position: absolute;\n    /* background-color: red; */\n    bottom: 5%;\n    right: 1%;\n    width: 90%;\n    height: 15%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &:hover{\n        cursor: pointer;\n    }\n\n`\n\n\n\nconst InviteBtnWrap = styled.div`\n    position: absolute;\n    top: 1.5%;\n    right: 0%;\n    margin: .75rem 0;\n    width: 26.2%;\n    height: 12.5%;\n    /* background-color: red; */\n\n`\n\n\n\n    const BtnImg = styled.img`\n    height: 100%;\n    width: 100%;\n    \n\n    `\n\n\nconst WalletTxt = styled.div`\n    position: absolute;\n    padding: .1rem;\n    top: 0%;\n    width: 100%;\n    height: 100%;\n    color: white;\n    font-size: 70%;\n    text-transform: uppercase;\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    z-index: 50;\n     /* background-color: red; */\n    \n    /* transition: translateX(50%); */\n\n    &:hover{\n        transition: all ease .2s;\n        cursor: pointer;\n         -webkit-box-shadow:0px 0px 5px 0px rgba(255,255,255,0.5);\n        -moz-box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\n        box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\n        background-color: rgba(255,255,255,.25);\n\n    }\n`\n\n\n\n\n\nconst getDisplayed = (inventory, currentIndex, displayLength) => {\n        const lastIndex = inventory.length-1;\n        let displayedNFTs = []\n        if (inventory.length !== 0) {displayedNFTs.push(inventory[currentIndex])}\n        else {  displayedNFTs.push({});}\n        // sets mini displayed nfts \n        for (let i=1; i<displayLength ; i++ ) {\n        \n            // logic for next index over last index\n            if(currentIndex + i > lastIndex){\n            \n                let nextNft = inventory[Math.abs(inventory.length-(currentIndex + i))];\n\n                // adds empty block\n                if (displayedNFTs.includes(nextNft) || \n                   \n                    Math.abs(inventory.length-(currentIndex + i)) > lastIndex){\n                    displayedNFTs.push({});\n                \n                // adds next wrapped nft\n                } else { displayedNFTs.push(nextNft); }       \n            }\n            // add next \n            else{ displayedNFTs.push(inventory[currentIndex+i]) }\n        }\n        return displayedNFTs;\n    }\n\n\n    ","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/traits.js",["274"],"import React from 'react';\nimport styled from 'styled-components';\n\n\n\nexport const Traits = ({info}) => {\n \n  return (\n      <Container>\n         <BG src={'./Assets/comicWidgets/traits_base.png'}/>\n          <TitleWrap>\n           <Title>{info.name} #{info.number}</Title>\n         </TitleWrap>\n\n         <MainSection>\n            <MainWrapper>\n                <TraitContainer>\n                    <div style={{direction: 'ltr'}}>\n\n                        {info.traitsList.map((trait,index)=>{\n                            return <TraitsText key={index}> \n                                    <Rarity>{trait.rarity}%</Rarity>\n                                    <Attribute>{trait.attribute}: {trait.value}</Attribute>\n                                </TraitsText>\n                        })}  \n                    </div>\n\n                </TraitContainer>\n\n                 <BarsWrapper>\n                     <Bar><Value percent={info.xpBars[0]}/></Bar>\n                       <Bar><Value percent={info.xpBars[1]}/></Bar>\n                      <Bar><Value percent={info.xpBars[2]}/></Bar>\n                       <Bar><Value percent={info.xpBars[3]}/></Bar>\n                    {/* <Bars src={'./Assets/comicWidgets/traitBars.png'}/> */}\n                </BarsWrapper>\n\n            </MainWrapper>\n         </MainSection>\n\n   </Container> \n           \n  )\n}\n\nconst Container = styled.section`\n    width: 100%;\n    position: relative;\n    /* background-color: aliceblue; */\n`\n\nconst BG = styled.img`\n    width: 100%;\n    height: 350px;\n    \n`\n\nconst TitleWrap = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 55%;\n/* background-color: green; */\nmargin: ${props => props.theme.comicverse.margin};\n`\n\nconst Title = styled.h2`\n    color: ${props => props.theme.colors.white};\n    text-transform:uppercase;\n    font-weight: 500;\n    text-align: center;\n    font-size: 110%;\n\n    @media screen and (max-width: ${props => props.theme.breakpoints.lg}){\n       font-size: 120%;\n        /* background-color: red; */\n  \n    }\n`\n\nconst MainSection = styled.div`\n    position: absolute;\n    top: 12%;\n    left: 0;\n    width: 100%;\n    height: 87%;\n    /* background-color: green; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1.2rem;\n\n`\n\nconst MainWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    /* margin: ${props => props.theme.comicverse.margin}; */\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    /* background-color: yellow; */\n\n`\n\nconst TraitContainer = styled.div`\n    flex: 2.4;\n    width: 100%;\n    height: 100%;\n    /* background-color: purple; */\n    overflow-y: auto;\n    direction: rtl;\n    padding: 0 .4rem;\n\n\n     &::-webkit-scrollbar {\n        width: .6rem;\n        z-index: 30;\n       \n    }\n    /* Track */\n    &::-webkit-scrollbar-track {\n        background: #4a4a6b75;\n        /* border-radius: 5px; */\n    }\n    /* Handle */\n    &::-webkit-scrollbar-thumb {\n        background: #D3d3dc;\n        /* border-radius: 5px; */\n    }\n    \n    /* Handle on hover */\n    &::-webkit-scrollbar:hover {\n        /* background: #555; */\n          cursor: pointer;\n      \n    }\n\n\n`\n\nconst TraitsText = styled.div`\n    display: flex;\n    margin: .3rem auto;\n    color: white;\n    opacity: 1;\n\n    animation: fade-in 1s 1;\n\n    @keyframes fade-in {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      } \n    }\n`\n\n    \nconst Rarity = styled.p`\n    width: 20%;\n   font-size: 77%;\n    text-transform: uppercase;\n    \n\n    @media screen and (max-width: 1100px){\n        font-size: 70%;\n    }\n\n`\n\nconst Attribute = styled.p`\n /* background-color: blue; */\n    width: 80%;\n    font-size: 77%;\n    word-spacing: .1rem;\n    margin-left: .5rem;\n    font-weight: lighter;\n     text-transform: uppercase;\n     @media screen and (max-width:1100px){\n        font-size: 70%;\n        /* background-color: blue; */\n\n    }\n  \n\n`\n\n\nconst BarsWrapper = styled.div`\n    flex: 1;\n    /* background-color: blue; */\n    display: flex;\n    justify-content: space-between;\n\n    height: 100%;\n    width: 30%;\n\n`\n\nconst Bar = styled.div`\n        transform: rotate(180deg);\n        outline: 1px white solid;\n       \n        width: 18%;\n        height: 100%;\n        background-color: transparent;\n        display: flex;\n        justify-content: flex-start;\n        align-self: flex-start;\n         background-color: transparent;\n       \n`\nconst Value = styled.div`\n        transition: height ease .5s;\n        background-color:white;\n        width: 100%;\n        height: ${({percent})=>(percent)};       \n`\n\nconst Bars = styled.img`\n    height: 100%;\n`\n\n\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/previewModal.js",["275","276","277","278","279","280"],"import React, {useEffect,useState} from 'react';\nimport styled from 'styled-components';\nimport {IoCloseCircleSharp} from 'react-icons/io5';\nimport { useWindowDimensions } from '../../global_styles';\nimport HTMLFlipBook from 'react-pageflip';\nimport ToggleButton from 'react-toggle-button';\n\n\n\n\nexport const PreviewModal = ({ state, dispatch }) => {\n\n    const close = () =>{\n        // setTimeout(() => {  \n                dispatch({type: 'HIDE_MODAL'})\n            // }, 500);\n    }\n    \n\n  return (\n    <ModalContainer id='mobileViewContainer' show={state.isModalOpen}>\n        <MobileViewWrapper id='mobileViewBody' show={state.isModalOpen}>\n            \n            {/* close btn */}\n            <CloseIconWrap onClick={close}>\n                    <CloseIcon/>\n            </CloseIconWrap>\n\n             {/* page flip btns */}\n              <ChevronWrap onClick={()=>{\n                  dispatch({type: 'CHANGE_PREVIEW_INDEX', newIndex: state.comicPreviewIndex -= 1})\n\n              }}><CHImg src={'/icons/arrow.png'} style={{transform:'rotate(180deg)'}}/></ChevronWrap>\n            <ChevronWrap onClick={()=>{\n                dispatch({type: 'CHANGE_PREVIEW_INDEX', newIndex: state.comicPreviewIndex += 1})\n\n            }}><CHImg src={'/icons/arrow.png'} /></ChevronWrap>\n           \n\n            <ContentWrap>\n\n                {/* flip book */}\n                <BookWrapper>\n                    <DemoPage src={['./Assets/comicPreview/cover.png', state.comicImgPath][state.comicPreviewIndex]}/>\n\n                    {/* <MyBook comicImgPath={['./Assets/comicPreview/cover.png', state.comicImgPath,'./Assets/comicPreview/demo.jpg','./Assets/comicPreview/demo.jpg',]}/> */}\n                     {/* <HTMLFlipBook\n                        showCover={true}\n                        width={'50%'}\n                        height={'100%'}\n                        style={{ margin: \"0 auto\" }}\n                        >\n                        <div className=\"demoPage\" key={'cover'}>\n                            <img src={'./Assets/comicPreview/cover.png'} width={'100%'}alt=\"\" />\n                        </div>\n\n                        \n                        {['./Assets/comicPreview/cover.png', state.comicImgPath].map((el, i) => (\n                            <div className=\"demoPage\" key={el.id}>\n                            <PageImg src={el} alt=\"\" />\n                            </div>\n                        ))}\n                        </HTMLFlipBook> */}\n                    {/* <img src={state.comicImgPath} width={'50%'}/> */}\n                    {/* {console.log(state.comicImgPath)} */}\n                </BookWrapper>\n\n                {/* bottom btn panel */}\n                <BtnGroupWrap>\n\n                    {/* cancel btn */}\n                   <ButtonWrap>\n                       <BtnImg src={'./Assets/comicWidgets/button.png'}/>\n                       <BtnText onClick={()=>{\n                            dispatch({type: 'CANCEL_MODAL'})\n                       }}>Cancel</BtnText></ButtonWrap>\n\n                    {/* mint btn */}\n                   <ButtonWrap mint={true}>\n                       <BtnImg src={'./Assets/comicWidgets/button.png'}/>\n                       <BtnText mint={true} onClick={()=>{\n                            dispatch({type: 'CANCEL_MODAL'});\n                       }}>Mint Comic</BtnText></ButtonWrap>\n\n                    {/* toggle bubbles */}\n                    <ButtonWrap>\n                        <ToggleText>Speech bubbles</ToggleText>\n                        <ToggleWrap>\n                            \n                            <ToggleButton\n                                value={ state.showTextBubbles || false }\n                                thumbStyle={borderRadiusStyle}\n                                trackStyle={borderRadiusStyle}\n                                onToggle={(value) => { \n                                    // console.log(!value)\n                                    dispatch({type: 'TOGGLE_BUBBLE' , newValue: !value})\n                                    \n                                }}\n                                 />\n\n                        </ToggleWrap>\n\n                    </ButtonWrap>\n\n                </BtnGroupWrap>\n            </ContentWrap>\n\n        </MobileViewWrapper>\n    </ModalContainer>\n  )\n}\n\n\nconst ModalContainer = styled.div`\n  text-shadow: 0 0 2px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n  text-shadow: 0 0 1px #FFF, 0px 0px 5px rgba(206,206,206,.5);\n    position: fixed;\n    z-index:  ${({show}) => (show ? '100' : '-1')};\n    width: 100vw;\n    height: 100vh;\n    /* background-color: ${({show}) => (show ? 'rgba(255,255,255,.6)' : 'transparent')}; */\n    background-color: ${({show}) => (show ? 'rgba(0,0,0,.8)' : 'transparent')};\n\n    top: 0;\n    left: 0;\n    transition: background-color .5s ease-in, z-index .5s ease-in;\n\n`\n\nconst MobileViewWrapper = styled.div`\n    background-color: rgba(1,10,56,.85);\n    position: absolute;\n    width: 85%;\n    max-width: 850px;\n    /* max-width: 450px; */\n    height: 75%;\n    transition: top .5s ease-in;\n    top: ${({show}) => (show ? '52%' : '150%')};\n    right: 50%;\n    border: 2px solid white;\n    /* border-radius: 20px; */\n    overflow: hidden;\n    transform: translateX(50%) translateY(-50%);\n    z-index:  ${({show}) => (show ? '1000' : '-1')};\n    display: flex;\n    flex-direction: column;\n\n\n\n`\n\nconst CloseIconWrap = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 1.75rem;\n    height: 1.75rem;\n    /* background-color: red; */\n    margin: 1rem;\n    border-radius: 100%;\n    z-index: 11;\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nconst CloseIcon = styled(IoCloseCircleSharp)`\n    width: 100%;\n    height: 100%;\n    color: #FFFFFF95;\n    background-color: transparent;\n\n    &:hover{\n        color: #464545;\n        cursor: pointer;\n    }\n\n`\n\nconst ChevronWrap = styled.button`\n    position: absolute;\n    top: 40%;\n    margin: 0 5%;\n    background-color: transparent;\n    border: none;\n    height: 50px;\n     &:hover{\n         /* cursor: pointer; */\n         filter: drop-shadow(0 0 6px rgb(255, 255, 255, .9));\n    }\n\n    &:nth-child(2){\n        right: 0;\n    }\n`\n\nconst CHImg = styled.img`\n    height: 100%;\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nconst ContentWrap = styled.div`\n\n    top: 5%;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    position: absolute;\n    width: 75%;\n    height: 90%;\n    /* height: 75%; */\n    /* margin: 1rem; */\n    /* background-color: blue; */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: scroll;\n    /* padding: 0.5rem; */\n`\n\nconst BookWrapper = styled.div`\n    width: 100%;\n    height: 80%;\n    /* border: 2px white solid;   */\n    padding:  0 1.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* background-color: RED; */\n`\n\nconst DemoPage = styled.img`\n    height: 100%;\n\n`\n\nconst Book = styled.div`\n    height: 100%;\n    width: 100%;\n    /* background-color: yellow; */\n`\n\nconst BtnGroupWrap = styled.div`\n    width: 100%;\n    height: 20%;\n    /* background-color: green; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    \n\n`\n\n\nconst ButtonWrap = styled.div`\n    width: 130px;\n    height: 40px;\n    \n    margin: 0 .8rem;\n    position: relative;\n\n    &:nth-child(3){\n       /* outline: 2px solid white; */\n       display: flex;\n       justify-content: space-between;\n       align-items: center;\n       \n    }\n\n`\n\n\n\nconst BtnImg = styled.img`\n  width: 100%;\n    &:hover{\n            cursor: pointer;    \n    }\n`\n\nconst BtnText = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 100%;\n    height: 100%;\n    color: white;\n    text-align: center;\n    transform: translate( -50%, -50%);\n    font-size: 90%;\n    text-transform: uppercase;\n    transition: all ease .2s;\n    background-color: ${({mint}) => (mint ? 'rgba(255,255,255,.25)': ' transparent')};\n\n    ${({mint}) => (mint ? \n    `\n        // background-color: rgba(255,255,255,.3);\n        -webkit-box-shadow:0px 0px 6px 0px rgba(255,255,255,0.9);\n        -moz-box-shadow: 0px 0px 6px 0px rgba(255,255,255,0.9);\n        box-shadow: 0px 0px 6px 0px rgba(255,255,255,0.9);   \n    \n    \n    `: '')};\n    transition: all ease .2s;\n\n    &:hover{\n        cursor: pointer;\n        background-color: rgba(255,255,255,.35);\n        -webkit-box-shadow:0px 0px 10px 0px rgba(255,255,255,0.9);\n        -moz-box-shadow: 0px 0px 10px 0px rgba(255,255,255,0.9);\n        box-shadow: 0px 0px 10px 0px rgba(255,255,255,0.9);            \n    }\n\n`\n\n\nconst ToggleText = styled.p`\n    flex: 1;\n    color: white;\n    text-transform: uppercase;\n    font-size: 80%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    /* background-color: yellow; */\n`\n\n\nconst borderRadiusStyle = { borderRadius: 2 }\nconst ToggleWrap = styled.div`\n    flex: 1;\n    display: flex;\n    justify-content: center;\n\n  \n`\n\n\n\nconst Page = React.forwardRef((props, ref) => {\n  return (\n    <div className=\"book-page\" ref={ref}> \n      {/* <h1>Page Header</h1> */}\n     <img className={' page-image'}src={props.src} width={'100%'}/>\n      {/* <p>Page number: {props.number}</p> */}\n    </div>\n  );\n});\n\nfunction MyBook(props) {\n  return (\n    <HTMLFlipBook \n        width={'50%'} \n        height={'150%'} \n        size={'stretch'} \n        showCover={true} \n        style={{marginTop:'-50%'}}\n\n        >\n        {props.comicImgPath.map((path, index)=>{\n              return <Page key={index} number={index} src={path}/>\n        })}\n    \n      {/* <Page number=\"2\">Page text</Page>\n      <Page number=\"3\">Page text</Page>\n      <Page number=\"4\">Page text</Page> */}\n    </HTMLFlipBook>\n  );\n}","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/inventory.js",["281","282","283"],"import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { NftCard } from './nftCard';\n\nexport const Inventory = ({\n    dispatch,state,\n    inventory}) => {\n\n     let displayedNFTs = getDisplayed(inventory, state.currentIndex, 4);\n\n  return (\n   \n     <Container>\n         <ConnectBtnWrap>\n             <BtnImg src={'./Assets/comicWidgets/button.png'}/>\n             <WalletTxt>Wallet Connected</WalletTxt>\n         </ConnectBtnWrap>\n\n         <InviteBtnWrap>\n             <BtnImg src={'./Assets/comicWidgets/button.png'}/>\n             <WalletTxt style={{fontSize: '60%'}}>Invite +</WalletTxt>\n         </InviteBtnWrap>\n\n         <BG src={'./Assets/comicWidgets/inventory_base.png'}/>\n         <TitleWrap>\n           <Title>Inventory</Title>\n         </TitleWrap>\n\n         <MidSection>\n            <MidSectionWrap>\n                <ToggleWrap>\n\n                    <ChevronWrap onClick={()=>{\n                        dispatch({type: 'CHANGE_INDEX', newIndex: state.currentIndex -= 1})\n                        }}><img src={'/icons/arrow.png'} height={'100%'}/></ChevronWrap>\n\n                    <CardHolder  onClick={()=>{\n                                    console.log('toggle')\n                                        // adds to selected\n                                if( !state.selectedNFTs.includes(inventory[state.currentIndex])){\n                                    dispatch({type: 'ADD_SELECTED', selected: inventory[state.currentIndex]});\n\n                                // removes from selected\n                                }else{ \n                                    dispatch({type: 'REMOVE_SELECTED', selected: inventory[state.currentIndex]});\n                                }\n                            }}>\n                        {/* check box logic */}\n                        <SelectBox type={'checkbox'} \n                                    checked={ state.selectedNFTs.includes(inventory[state.currentIndex])}\n                                    onChange={(event) => { }}/>\n\n                        <NftCard info={inventory[state.currentIndex]} isSelected={state.selectedNFTs.includes(inventory[state.currentIndex])} size='big'/>\n\n                    </CardHolder>\n\n                     <ChevronWrap onClick={()=>{\n                     \n                        dispatch({type: 'CHANGE_INDEX', newIndex: state.currentIndex += 1})\n                         }}><img src={'/icons/arrow.png'} height={'100%'} style={{transform:'rotate(180deg)'}}/></ChevronWrap>\n\n                </ToggleWrap>\n\n                 <GroupWrap>\n                    {displayedNFTs.map((cardInfo, index)=>{\n\n                    return <SmallCardWrap \n                        key = {index}\n                        showHover={cardInfo.name}\n                        onClick={()=>{    \n                            let nftIndex = inventory.indexOf(cardInfo);\n                            if (nftIndex !== -1)  dispatch({type: 'CHANGE_INDEX', newIndex: nftIndex})\n                            }}\n                            >\n                            <NftCard info={cardInfo}/>\n                        </SmallCardWrap>;\n                    })}  \n                </GroupWrap>\n               \n\n            </MidSectionWrap>\n         </MidSection>\n\n         <InviteBtnWrap>\n\n         </InviteBtnWrap>\n\n   </Container> \n           \n  )\n}\n\nconst Container = styled.section`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    top: 0%;\n     /* margin-bottom: 1rem; */\n    /* background-color: aliceblue; */\n`\n\nconst BG = styled.img`\n    width: 100%;\n`\n\nconst TitleWrap = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 50%;\n/* background-color: green; */\nmargin: ${props => props.theme.comicverse.margin};\n`\n\nconst Title = styled.h4`\n    color: ${props => props.theme.colors.white};\n    text-transform:uppercase;\n    font-weight: 500;\n@media screen and (max-width: ${props => props.theme.breakpoints.lg}){\n    font-size: .8rem;\n    /* background-color: red; */\n  \n    }\n`\n\nconst MidSection = styled.div`\n    position: absolute;\n    top: 9%;\n    left: 0;\n    width: 100%;\n    height: 75%;\n    /* background-color: teal; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n`\nconst MidSectionWrap = styled.div`\n    margin: ${props => props.theme.comicverse.margin};\n    width: 100%;\n    height: 90%;\n    /* background-color: yellow; */\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst ToggleWrap = styled.div`\n    /* background-color: red; */\n    width: 52%;\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n   \n`\nconst CardHolder = styled.div`\n    width: 75%;\n    /* height: 100%; */\n    display: flex;\n    align-items: center;\n    position: relative;\n    /* padding-bottom: 3.8%; */\n \n    &:hover{\n        cursor: pointer;\n    }\n    /* background-color: black; */\n`\nconst SelectBox = styled.input`\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    position: absolute;\n    top: 5%;\n    right: 5%;\n    z-index: 10;\n    /* transition: all .2s cubic-bezier(0.215, 0.610, 0.355, 1); */\n\n    display: inline-block;\n    width: 20%;\n    height: 20%;\n    max-width: 25px;\n    max-height: 25px;\n    padding: 2px;\n\n    /* background-color only for content */\n    background-clip: content-box;\n    border: 2px solid #4a4a6b;\n    border-radius: 4px;\n    background-color: #4a4a6b;\n\n    &:checked{\n        -webkit-appearance: auto;\n        -moz-appearance: auto;\n        appearance: auto;\n        background-color: #FAFAFC;\n        border: 2px solid #FAFAFC;\n        padding: 0px;\n    }\n\n    &:focus{\n        outline: none !important;\n    }\n\n\n     &:hover{\n    cursor: pointer;\n  }\n`\n\nconst GroupWrap = styled.div`\n    /* background-color: blue; */\n    width: 48%;\n    height: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    /* align-items: space-between; */\n\n`\n\nconst SmallCardWrap = styled.div`\n    width: 40%;\n    height: 50%;\n\n     ${({showHover})=>(showHover ? `\n       &:hover{\n        cursor: pointer;\n    }\n    \n    `: ``)}\n`\n\nconst ChevronWrap = styled.button`\n    margin: 0 .2rem;\n    background-color: transparent;\n    border: none;\n    height: 30px;\n     &:hover{\n         cursor: pointer;\n         filter: drop-shadow(0 0 6px rgb(255, 255, 255, .9));\n    }\n`\n\n\nconst InviteBtnWrap = styled.div`\n    position: absolute;\n    bottom: -2.5%;\n    right: .5%;\n    margin: .75rem 0;\n    width: 26.2%;\n    height: 12.5%;\n    /* background-color: red; */\n\n`\n\n\n\nconst ConnectBtnWrap = styled.div`\n    position: absolute;\n    bottom: 100%;\n    left: 0;\n    height: 15%;\n    margin: .75rem 0;\n    width: 47%;\n    min-height: 40px;\n    /* background-color: azure; */\n\n`\n\n    const BtnImg = styled.img`\n    height: 100%;\n    width: 100%;\n    \n\n    `\n\n\nconst WalletTxt = styled.div`\n    position: absolute;\n    padding: .3rem;\n    top: 0%;\n    width: 100%;\n    height: 100%;\n    color: white;\n    font-size: 70%;\n    text-transform: uppercase;\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    z-index: 50;\n     /* background-color: red; */\n    \n    /* transition: translateX(50%); */\n\n    &:hover{\n        transition: all ease .2s;\n        cursor: pointer;\n         -webkit-box-shadow:0px 0px 5px 0px rgba(255,255,255,0.5);\n        -moz-box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\n        box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\n        background-color: rgba(255,255,255,.25);\n\n    }\n    \n\n`\n\n\n\nconst getDisplayed = (inventory, currentIndex, displayLength) => {\n        const lastIndex = inventory.length-1;\n        let displayedNFTs = []\n        // sets mini displayed nfts \n        for (let i=1; i<displayLength+1 ; i++ ) {\n        \n            // logic for next index over last index\n            if(currentIndex + i > lastIndex){\n            \n                let nextNft = inventory[Math.abs(inventory.length-(currentIndex + i))];\n\n                // adds empty block\n                if (displayedNFTs.includes(nextNft) || \n                    nextNft === inventory[currentIndex] || \n                    Math.abs(inventory.length-(currentIndex + i)) > lastIndex){\n                    displayedNFTs.push({});\n                \n                // adds next wrapped nft\n                } else { displayedNFTs.push(nextNft); }       \n            }\n            // add next \n            else{ displayedNFTs.push(inventory[currentIndex+i]) }\n        }\n        return displayedNFTs;\n    }\n\n\n    ","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/comicReducer.js",["284"],"\n\n\nexport const defaultState = {\n  selectedNFTs: [],\n  currentIndex: 0,\n  isModalOpen: false,\n  comicImgPath: '', \n  isBasePreview: false,\n  showTextBubbles: true,\n  comicPreviewIndex: 0 \n}\n\n\n  // gets image path given selected nfts\nexport const reducer = (state,action) => {\n    const getImgPath = (isPreview, showTextBubble) =>{\n\n      let sortedList= [...state.selectedNFTs];\n      \n      sortedList.sort(function(a, b){\n          if(a.name < b.name) { return -1; }\n          if(a.name > b.name) { return 1; }\n          return 0;\n      })\n\n      let namePath = `./Assets/comicPreview/${showTextBubble ? \"words\" : \"nowords\"}/`\n\n      if (!isPreview && sortedList.length > 0){\n      sortedList.map((nft)=>{\n          if(nft.name) namePath += nft.name +'_'\n          // if(nft.name) namePath += nft.name + nft.number +'_'\n      })}else{\n        namePath += 'base_';\n      }\n      namePath = namePath.slice(0, -1)\n      namePath += '.jpg'\n\n      return namePath;\n    \n  }\n\n  // cycles through inventory\n  if (action.type === 'CHANGE_INDEX'){\n      const lastIndex = inventory.length-1;\n      let finalNewIndex;\n\n      if(action.newIndex < 0){\n          finalNewIndex = lastIndex;\n      }\n      else if(action.newIndex > lastIndex){\n          finalNewIndex = 0\n      }else{\n          finalNewIndex = action.newIndex;\n      }\n      return {\n      ...state,\n      currentIndex: finalNewIndex,\n    }\n\n  } else if (action.type === 'ADD_SELECTED'){\n    const newSelected = [...state.selectedNFTs, action.selected]\n\n    return {\n      ...state,\n      selectedNFTs: newSelected,\n    }\n  } else if (action.type === 'REMOVE_SELECTED') {\n     const newSelected = state.selectedNFTs.filter((item) => item.id !== action.selected.id);\n\n     return {\n      ...state,\n      selectedNFTs: newSelected,\n    }\n  } else if (action.type === 'DISPLAY_MODAL') {\n    const imgPath = getImgPath( action.preview, state.showTextBubbles);\n\n    return {\n       ...state,\n      isBasePreview: action.preview,\n      comicImgPath: imgPath,\n      isModalOpen: true,\n      comicPreviewIndex: 0,\n     \n    }\n  } else if (action.type === 'TOGGLE_BUBBLE') {\n     const imgPath = getImgPath( state.isBasePreview, action.newValue,);\n\n    return {\n       ...state,\n      showTextBubbles: action.newValue,\n      comicImgPath: imgPath\n    }\n  } else if (action.type === 'HIDE_MODAL') {\n\n    return {\n      ...state,\n      isBasePreview: false,\n      // comicImgPath: '',\n      isModalOpen: false,\n      \n    }\n  } else if (action.type === 'CANCEL_MODAL') {\n\n    return {\n      ...state,\n      isBasePreview: false,\n      // comicImgPath: '',\n      isModalOpen: false,\n      selectedNFTs: [],\n    }\n  } else  if (action.type === 'CHANGE_PREVIEW_INDEX'){\n      const lastIndex = 1;\n      let finalNewIndex;\n\n      if(action.newIndex < 0){\n          finalNewIndex = lastIndex;\n      }\n      else if(action.newIndex > lastIndex){\n          finalNewIndex = 0\n      }else{\n          finalNewIndex = action.newIndex;\n      }\n      return {\n      ...state,\n      comicPreviewIndex: finalNewIndex,\n    }\n  }\n\n  return new Error('no matching action type')\n}\n\n\n\nlet zeusInfo = {\n    id: 'zeus2423',\n    name: 'zeus',\n    number: '2423',\n    imgPath: './Assets/gods/zeus_nft.jpg',\n    xp: 2500,\n    xpBars: ['81%', '90%','73%','57%'],\n    traitsList : [\n    {   rarity: '6',attribute: 'emotion', value: 'rage'   },\n    {   rarity: '1',attribute: 'weapon', value: 'lightning'   },\n    {   rarity: '40',attribute: 'weapon color', value: 'blue'   },\n    {   rarity: '8',attribute: 'arm band', value: 'gold'   },\n    {   rarity: '2',attribute: 'eyes', value: 'blue glow'   },\n    {   rarity: '83',attribute: 'beard', value: 'white'   },\n    {   rarity: '71',attribute: 'hand one', value: 'pointing'   },\n    {   rarity: '5',attribute: 'attire', value: 'gold silk'   },\n    {   rarity: '48',attribute: 'chest plate', value: 'none'   },\n    {   rarity: '5',attribute: 'belt', value: 'gold'   },\n    {   rarity: '5',attribute: 'leg guard', value: 'gold'   },\n    {   rarity: '20',attribute: 'accents', value: 'light blue'   },\n    {   rarity: '5',attribute: 'background', value: 'sky'   },\n]\n}\n\nlet poseidonInfo = {\n    id:'poseidon844',\n    name: 'poseidon',\n    number: '844',\n    imgPath: './Assets/gods/poseidon_nft.jpg',\n    xp: 1750,\n    xpBars: ['55%', '62%','36%','97%'],\n    traitsList : [\n    {   rarity: '43',attribute: 'emotion', value: 'rage'   },\n    {   rarity: '5',attribute: 'weapon', value: 'trident'   },\n    {   rarity: '27',attribute: 'weapon color', value: 'gold'   },\n    {   rarity: '51',attribute: 'arm band', value: 'gold'   },\n    {   rarity: '7',attribute: 'eyes', value: 'green glow'   },\n    {   rarity: '69',attribute: 'beard', value: 'white'   },\n    {   rarity: '23',attribute: 'hand one', value: 'fist'   },\n    {   rarity: '22',attribute: 'attire', value: 'green silk'   },\n    {   rarity: '72',attribute: 'chest plate', value: 'none'   },\n    {   rarity: '15',attribute: 'belt', value: 'gold'   },\n    {   rarity: '24',attribute: 'leg guard', value: 'gold'   },\n    {   rarity: '25',attribute: 'accents', value: 'light green'   },\n    {   rarity: '11',attribute: 'background', value: 'sea'   },\n]\n}\n\nlet hadesInfo = {\n    id: 'hades65',\n    name: 'hades',\n    number: '65',\n    imgPath: './Assets/gods/hades_nft.jpg',\n    xp: 1500,\n    xpBars: ['94%', '49%','55%','75%'],\n    traitsList : [\n    {   rarity: '65',attribute: 'emotion', value: 'menacing'   },\n    {   rarity: '64',attribute: 'weapon', value: 'bident'   },\n    {   rarity: '23',attribute: 'weapon color', value: 'silve'   },\n    {   rarity: '8',attribute: 'arm band', value: 'burgandy'   },\n    {   rarity: '74',attribute: 'eyes', value: 'red'   },\n    {   rarity: '82',attribute: 'beard', value: 'red'   },\n    {   rarity: '33',attribute: 'hand one', value: 'leash'   },\n    {   rarity: '52',attribute: 'attire', value: 'purple silk'   },\n    {   rarity: '76',attribute: 'chest plate', value: 'none'   },\n    {   rarity: '6',attribute: 'belt', value: 'skull'   },\n    {   rarity: '21',attribute: 'leg guard', value: 'purple'   },\n    {   rarity: '20',attribute: 'accents', value: 'blue'   },\n    {   rarity: '53',attribute: 'background', value: 'underworld'   },\n]\n}\n\nexport const inventory = [zeusInfo,poseidonInfo,hadesInfo];\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/dashboard/dashboardElements.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/nftCard.js",["285","286","287","288","289"],"import React from 'react';\nimport styled from 'styled-components';\n\nexport const NftCard = (data) => {\n    const {info, size, isSelected} = data;\n    const {name, number, imgPath} = info;\n\n  return (\n    <Container>\n         <BG isSelected={isSelected} src={'./Assets/comicWidgets/nftCardBase.png'}/>\n\n       \n       <MainImg  src={imgPath}/>\n         {/* <TitleWrap>\n           <Title fontSize={size}>{name} #{number}</Title>\n         </TitleWrap> */}\n\n    </Container>\n  )\n}\n\nconst Container = styled.section`\n    position: relative;\n    width: 100%;\n    height:75%;\n    /* background-color: aliceblue; */\n`\n\nconst BG = styled.img`\n    position: absolute;\n    width: 100%;\n    z-index: 2;\n    background-color: transparent;\n      border: 2px transparent solid;\n\n    ${({isSelected})=>(isSelected? `\n        -webkit-box-shadow:0px 0px 20px 5px rgba(255,255,255,0.3);\n        -moz-box-shadow: 0px 0px 20px 5px rgba(255,255,255,0.3);\n        box-shadow: 0px 0px 20px 5px rgba(255,255,255,0.3);\n        background-color: rgba(255,255,255,.1);\n        border: 2px white solid;\n    \n    `: '')}\n`\n\nconst MainImg = styled.img`\n    z-index: 1;\n    position: relative;\n    top: 0;\n    left: 0;\n    width: 100%; \n     border: 2px transparent solid; \n`\nconst TitleWrap = styled.div`\n    z-index: 3;\n    position: relative;\n    bottom: 0;\n    left: 0;\n    /* background-color: green; */\n\n\n`\n\nconst Title = styled.p`\n    color: ${props => props.theme.colors.white};\n    text-transform:uppercase;\n    font-weight: 500;\n    font-size: ${({fontSize}) => (fontSize === 'big' ? '1rem' : '.5rem')};\n`\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/ytdBox/index.js",["290"],"import React from 'react';\n// import EthImgLogo from '../../../public/eth.svg'\n// import Image from 'next/image';\nimport { \n  YtdContainer,\n  YtdWrapper,\n  YtdHeading,\n  YtdSubheadingWrap,\n  EthLogoWrapper,\n  EthAmount,\n  DollarAmount,\n\n} from './ytdElements';\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n\nexport const YTDbox = (data) => { \n  const { title, eth, convertUSD, order } = data;\n\n  const dollarAmt = numberWithCommas(Math.round(eth * convertUSD * 100) /100) ;\n\n  return (\n    <YtdContainer imgId={order}>\n      <YtdWrapper>\n        <YtdHeading>{title}</YtdHeading>\n\n        <YtdSubheadingWrap>\n          <EthLogoWrapper>\n            <img  src={'./eth.svg'}/>\n          </EthLogoWrapper>\n          <EthAmount>{eth}</EthAmount>\n          <DollarAmount>(${dollarAmt})</DollarAmount>\n\n        </YtdSubheadingWrap>\n      </YtdWrapper>\n    </YtdContainer>\n  )\n}\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/distributedBox/index.js",["291"],"import React, {useState} from 'react';\n// import EthImgLogo from '../../../public/eth.svg';\n// import Image from 'next/image';\nimport { FaRegQuestionCircle} from 'react-icons/fa';\nimport {\n    DistContainer,\n    DistWrapper,\n    DistHeading,\n    DistCenterWrap,\n    EthLogoWrapper,\n    EthAmount,\n    DollarAmount,\n    QuestionWrapper,\n} from './distributedElements';\n\nimport { HelpBox } from '../HelpBox';\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport const DistributedBox = (data) => {\n  const { title, eth, convertUSD, helpText , order} = data;\n\n  const dollarAmt = numberWithCommas(Math.round(eth * convertUSD * 100) /100) ;\n\n   const [style, setStyle] = useState({opacity: '0',transition: 'all .1s ease-in-out'});\n\n  \n      \n\n  return (\n    <DistContainer imgId = {order}>\n      <div style={style}>\n           <HelpBox text= {helpText} extraTop={false}/>\n        </div>\n     \n      <QuestionWrapper\n        onMouseEnter={e => {\n                     setStyle({opacity: '1', transition: 'all .1s ease-in-out'});\n                 }}\n                \n                 onMouseLeave={e => {\n                     setStyle({opacity: '0',transition: 'all .1s ease-in-out'})\n                 }}\n      \n      >\n           <FaRegQuestionCircle/>\n         </QuestionWrapper>\n      <DistWrapper>\n\n        \n\n        <DistHeading>{title}</DistHeading>\n\n        <DistCenterWrap>\n\n          <EthLogoWrapper>\n           <img  src={'./eth.svg'}/>\n          </EthLogoWrapper>\n          <EthAmount>{eth}</EthAmount>\n\n        </DistCenterWrap>\n\n        <DollarAmount>(${dollarAmt})</DollarAmount>\n\n         \n      </DistWrapper>\n\n      \n\n    </DistContainer>\n  )\n}\n\n\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/activityBox/index.js",["292","293","294","295"],"import React,{useState} from 'react'\nimport styled from 'styled-components';\n// import EthImgLogo from './eth.svg'\n// import Image from 'next/image';\n\nimport {\n  ActivityContainer,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  ActivityHeader,\n  HeadingWrapper,\n  HeaderTitle,\n  Button,\n  AccordianHeading,\n  HeadingMain,\n  SubHeadingWrap,\n  HeadingSub,\n  AccordionBody,\n  Typography,\n  AccordianWrapper,\n  AccordianMain,\n  AccordianSubWrap,\n  AccordianSub,\n  AccordianRoyaltyWrap,\n  NFTinfo,\n  EthWrap,\n  QuestionWrapper,\n} from './activityElements'\n\n\nimport {IoMdCart} from 'react-icons/io';\nimport { FaRegQuestionCircle} from 'react-icons/fa';\n// import { HelpBox } from '../HelpBox';\n\nexport const ActivityBox = (data) => {\n\n\n  const {nfts, helpText}  = data;\n\n  const [expanded, setExpanded] = useState('');\n\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded  ? panel : false);\n  };\n\n\n\n  const toggleAll = () => {\n     \n      if (expanded === 'all'){\n        setExpanded('')\n        console.log(expanded)\n      }else{\n        setExpanded('all')\n        console.log(expanded)\n      }\n  }\n\n  const [hoverIndex, changeHoverIndex] = useState('');\n  const showBubble = {visibility: '1', opacity: '1',transition: 'all 0s ease-in-out',};\n  const hideBubble = {opacity: '0',visibility: '0', transition: 'all 0s ease-in-out',};\n\n  \n\n\n  return (\n    <ActivityContainer>\n      \n        {/* activity box title */}\n        <ActivityHeader>\n          <HeaderTitle>OpenSea Sales Activity</HeaderTitle>\n          {/* <Button onClick={toggleAll}>{expanded === 'all' ? 'Close all' : 'See All'}</Button> */}\n        </ActivityHeader>\n\n        {/* accordian heading */}\n        <AccordianHeading>\n            <HeadingWrapper>\n\n                <HeadingMain>Nft Name</HeadingMain>\n\n                <SubHeadingWrap>\n                    <HeadingSub style={{flex:'1.5'}}>Price</HeadingSub>\n                    <HeadingSub style={{flex:'2'}}>Date</HeadingSub>\n                    <HeadingSub style={{flex:'2'}}>Royalty Recieved</HeadingSub>\n                </SubHeadingWrap>\n            </HeadingWrapper>\n        </AccordianHeading>\n\n        {/* accordian section */}\n        <AccordionBody>\n          <div style={{ height:'220px'}}>\n\n          {/* creates accordian for each nft */}\n          {nfts.map((nft, index)=> {\n\n              return(\n              <Accordion key={`accord-${index}`} expanded={expanded === `panel${index}` || expanded==='all' } onChange={handleChange( `panel${index}`)}>\n                <AccordionSummary aria-controls={`panel${index}d-content`} id={`panel${index}d-header`}>\n                  <Typography>{nft.collection_name} #{nft.token_id}</Typography>\n                </AccordionSummary>\n\n                <AccordionDetails>\n                  <AccordianWrapper>\n                          \n                          {/* fills subsection with transactions */}\n                        {nft.transactions.map((transaction,innerdex)=>{\n                            \n\n\n                            return <div key={`transaction-${index}-${innerdex}`}>\n                            <NFTinfo >\n                                <AccordianMain>\n                                  <IoMdCart style={{marginLeft: '1rem'}}/>\n                                </AccordianMain>\n                                {/* style={{justifyContent: 'flex-start'}} */}\n                                <AccordianSubWrap>\n                                      <EthWrap style={{flex: '1',}}>\n                                        <div style={{marginRight: '.3rem',marginLeft: '33%'}}><img  src={'./eth.svg'}/></div>\n                                        <AccordianSub >{transaction.value}</AccordianSub>\n                                      </EthWrap>\n                                    \n                                    <div style={{flex: '1'}}>\n                                           <AccordianSub style={{ marginLeft:'15%'}}>{transaction.date}</AccordianSub>\n                                    </div>\n                                   \n                                  \n                                </AccordianSubWrap>\n\n                                <AccordianRoyaltyWrap>\n                                    <EthWrap style={{marginLeft:' 25%'}} >\n                                        <div style={{margin: '0 .3rem'}}><img  src={'./eth.svg'}/></div>\n                                        <AccordianSub>{transaction.royalty_amount_earned}{transaction.royalty_amount_earned  === 0  ?'(below royalty floor)' : ''}</AccordianSub>\n                                      </EthWrap>\n\n                                      {  transaction.royalty_amount_earned === 0 ?\n                                      <>\n                                      <QuestionWrapper\n                                            onMouseEnter={e => {\n                                                      changeHoverIndex(`${index}-${innerdex}`);\n                                                    }}\n                                                    \n                                                    onMouseLeave={e => {\n                                                      changeHoverIndex(``);\n                                                    }}\n                                          \n                                          >\n                                              <FaRegQuestionCircle/>\n                                        </QuestionWrapper>\n\n                                     \n                                           </> : <></>}\n                                </AccordianRoyaltyWrap>\n                            </NFTinfo>\n                           <div style={hoverIndex === `${index}-${innerdex}` ? showBubble : hideBubble}>\n                                            <HelpBox text= {helpText}/>\n                            </div>\n                          </div>\n                        })}\n                        \n\n                    </AccordianWrapper>\n\n                </AccordionDetails>\n              </Accordion>)\n   \n          })}\n\n          </div>\n          </AccordionBody>\n       \n      </ActivityContainer>\n  )\n}\n\n\n\nconst Box = styled.div`\n    z-index: 5000;\n    position: absolute;\n    background-color:  ${props => props.theme.colors.white};\n    border-radius: ${props => props.theme.boxstyle.borderRadius};\n    width: 250px;\n    right: 0;\n    /* width: 80%; */\n    /* height: 50px; */\n    /* margin: 0 10px; */\n    /* margin-top: 50px; */\n    /* right: 15px; */\n    /* margin-top: ${({})}; */\n    \n    /* transition: all .05s ease-in-out; */\n    /* display: none; */\n\n    /* top: 100px; */\n    /* right: 100px; */\n\n`\n\nconst Wrapper = styled.div`\n    margin:  ${props => props.theme.boxstyle.wrapperMargin};\n\n\n`\n\nconst Info = styled.p`\n  font-size:  ${props => props.theme.textstyle.subtext};\n    /* color:  ${props => props.theme.colors.subtitle}; */\n font-weight: 400;\n`\n\n\n\n const HelpBox = (data) => {  \n    const { text, extraTop } = data;\n    // console.log(extraTop);\n    // let marginTop = '100px';\n  return (\n    <Box alot={extraTop}>\n        <Wrapper>\n            <Info>\n                {/* {extraTop} */}\n                {text}\n            </Info>\n        </Wrapper>\n    </Box>\n  )\n}\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/collectionBox/index.js",["296","297","298","299","300","301","302","303","304","305","306","307","308"],"import React, {useState} from 'react';\nimport { \n  CollectionContainer,\n  CollectionWrapper,\n  CollectionHeading,\n  CollectionSection,\n  SubtextWrapper,\n  Subtext,\n  DisplayBoxWrapper,\n  DisplayBox,\n  BtnWrapper,\n  QuestionWrapper,\n  EthLogoWrapper,\n  EthAmount,\n  DollarAmount,\n  DonationSection,\n  DonationHeading,\n  DonationPercentWrapper,\n  PercentAmount,\n  Disabled,\n  CheckboxWrapper,\n  Checkbox,\n  DropdownArrow,\n  DonationText,\n  CollectionButton\n } from './collectionElements';\n\n//  import EthImgLogo from '../../../public/eth.svg'\n// import Image from 'next/image';\n import { FaRegQuestionCircle} from 'react-icons/fa';\nimport { HelpBox } from '../HelpBox';\nimport { Transform } from '@mui/icons-material';\n\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport const CollectionBox = (data) => {\n  const {title, eth, donationActive, donationPercent, convertUSD, helpText, order} = data;\n\n  const dollarAmt = numberWithCommas(Math.round(eth * convertUSD * 100) /100) ; \n\n  const donationAmt = donationPercent * dollarAmt;\n\n  const [style, setStyle] = useState({opacity: '0',transition: 'all .1s ease-in-out',zIndex:-20});\n  \n                         \n  return (\n    <CollectionContainer imgId={order}>\n        <CollectionWrapper>\n         <div style={style}>\n                <HelpBox text= {helpText} extraTop={true}/>\n              </div>\n          {/* header text */}\n          <CollectionHeading>{title}</CollectionHeading>\n\n          \n\n            {/* middle section */}\n            <CollectionSection>\n\n              {/* help section */}\n              <SubtextWrapper \n                onMouseEnter={e => {\n                     setStyle({opacity: '1', transition: 'all .1s ease-in-out'});\n                 }}\n                \n                 onMouseLeave={e => {\n                     setStyle({opacity: '0',transition: 'all .1s ease-in-out'})\n                 }}\n              > \n               \n                  <Subtext>What's this</Subtext>\n\n                  <QuestionWrapper>\n                    <FaRegQuestionCircle/>\n                  </QuestionWrapper>\n                  \n              </SubtextWrapper>\n\n           \n\n                  {/* eth amount display */}\n                  <DisplayBoxWrapper>\n                    <DisplayBox>\n                      <EthLogoWrapper>\n                        <img  src={'./eth.svg'}/>\n                      </EthLogoWrapper>\n\n                      <EthAmount style={{alignSelf: 'center'}}>{eth}</EthAmount>\n                      <DollarAmount >(${dollarAmt})</DollarAmount>\n                    </DisplayBox>\n\n                    <BtnWrapper>\n                      \n                      <CollectionButton id={`${title.split(' ')[0]}_collectBtn`}> Collect</CollectionButton>\n                    </BtnWrapper>\n                  </DisplayBoxWrapper>\n\n                  {/* give donation section */}\n                {/* <DonationSection>\n                  <DonationHeading>Donation<br/>Amount</DonationHeading>\n                   */}\n                 {/* donation percent box */}\n                  {/* <DonationPercentWrapper>\n                      \n                      <PercentAmount>{donationPercent * 100}% (${donationAmt})</PercentAmount>\n                      <DropdownArrow/>\n                  </DonationPercentWrapper> */}\n\n                  {/* checkbox */}\n                  {/* <CheckboxWrapper>\n                      <Checkbox type=\"checkbox\" id=\"donate-royalty\"/>\n                  </CheckboxWrapper>\n      \n              </DonationSection> */}\n\n            </CollectionSection>\n\n          {/* donation info lower section */}\n            {/* <DonationText>\n               Donations to TBD can be toggled at any time; however, your donation percentage can only be changed on the first day of every month. \n            </DonationText> */}\n          \n\n        </CollectionWrapper>\n    </CollectionContainer>\n  )\n}\n\n\n","/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/HelpBox.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/collectionBox/collectionElements.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/ytdBox/ytdElements.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/activityBox/activityElements.js",[],"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/dashbaordComponents/distributedBox/distributedElements.js",[],{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":31,"column":10,"nodeType":"315","messageId":"316","endLine":31,"endColumn":20},{"ruleId":"313","severity":1,"message":"317","line":122,"column":15,"nodeType":"315","messageId":"316","endLine":122,"endColumn":22},{"ruleId":"313","severity":1,"message":"318","line":204,"column":55,"nodeType":"319","messageId":"316","endLine":204,"endColumn":64},{"ruleId":"313","severity":1,"message":"320","line":351,"column":7,"nodeType":"315","messageId":"316","endLine":351,"endColumn":16},{"ruleId":"313","severity":1,"message":"321","line":352,"column":7,"nodeType":"315","messageId":"316","endLine":352,"endColumn":11},{"ruleId":"313","severity":1,"message":"322","line":463,"column":10,"nodeType":"315","messageId":"316","endLine":463,"endColumn":19},{"ruleId":"313","severity":1,"message":"323","line":41,"column":7,"nodeType":"315","messageId":"316","endLine":41,"endColumn":18},{"ruleId":"313","severity":1,"message":"324","line":9,"column":10,"nodeType":"315","messageId":"316","endLine":9,"endColumn":19},{"ruleId":"313","severity":1,"message":"325","line":9,"column":21,"nodeType":"315","messageId":"316","endLine":9,"endColumn":33},{"ruleId":"313","severity":1,"message":"326","line":13,"column":10,"nodeType":"315","messageId":"316","endLine":13,"endColumn":25},{"ruleId":"313","severity":1,"message":"327","line":18,"column":8,"nodeType":"315","messageId":"316","endLine":18,"endColumn":12},{"ruleId":"313","severity":1,"message":"328","line":23,"column":13,"nodeType":"315","messageId":"316","endLine":23,"endColumn":25},{"ruleId":"313","severity":1,"message":"329","line":23,"column":52,"nodeType":"315","messageId":"316","endLine":23,"endColumn":56},{"ruleId":"313","severity":1,"message":"330","line":23,"column":58,"nodeType":"315","messageId":"316","endLine":23,"endColumn":74},{"ruleId":"313","severity":1,"message":"331","line":29,"column":20,"nodeType":"315","messageId":"316","endLine":29,"endColumn":29},{"ruleId":"313","severity":1,"message":"332","line":32,"column":23,"nodeType":"315","messageId":"316","endLine":32,"endColumn":35},{"ruleId":"313","severity":1,"message":"317","line":34,"column":12,"nodeType":"315","messageId":"316","endLine":34,"endColumn":19},{"ruleId":"313","severity":1,"message":"333","line":34,"column":21,"nodeType":"315","messageId":"316","endLine":34,"endColumn":30},{"ruleId":"313","severity":1,"message":"334","line":34,"column":32,"nodeType":"315","messageId":"316","endLine":34,"endColumn":44},{"ruleId":"313","severity":1,"message":"335","line":40,"column":11,"nodeType":"315","messageId":"316","endLine":40,"endColumn":20},{"ruleId":"336","severity":1,"message":"337","line":59,"column":7,"nodeType":"338","endLine":59,"endColumn":9,"suggestions":"339"},{"ruleId":"313","severity":1,"message":"340","line":61,"column":11,"nodeType":"315","messageId":"316","endLine":61,"endColumn":21},{"ruleId":"313","severity":1,"message":"341","line":278,"column":7,"nodeType":"315","messageId":"316","endLine":278,"endColumn":15},{"ruleId":"313","severity":1,"message":"342","line":295,"column":7,"nodeType":"315","messageId":"316","endLine":295,"endColumn":17},{"ruleId":"313","severity":1,"message":"343","line":315,"column":7,"nodeType":"315","messageId":"316","endLine":315,"endColumn":13},{"ruleId":"313","severity":1,"message":"344","line":440,"column":7,"nodeType":"315","messageId":"316","endLine":440,"endColumn":11},{"ruleId":"313","severity":1,"message":"345","line":450,"column":7,"nodeType":"315","messageId":"316","endLine":450,"endColumn":16},{"ruleId":"313","severity":1,"message":"346","line":454,"column":7,"nodeType":"315","messageId":"316","endLine":454,"endColumn":19},{"ruleId":"313","severity":1,"message":"347","line":469,"column":7,"nodeType":"315","messageId":"316","endLine":469,"endColumn":14},{"ruleId":"313","severity":1,"message":"348","line":478,"column":7,"nodeType":"315","messageId":"316","endLine":478,"endColumn":28},{"ruleId":"313","severity":1,"message":"349","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":17},{"ruleId":"313","severity":1,"message":"350","line":27,"column":23,"nodeType":"315","messageId":"316","endLine":27,"endColumn":35},{"ruleId":"313","severity":1,"message":"351","line":3,"column":10,"nodeType":"315","messageId":"316","endLine":3,"endColumn":23},{"ruleId":"313","severity":1,"message":"352","line":8,"column":10,"nodeType":"315","messageId":"316","endLine":8,"endColumn":32},{"ruleId":"313","severity":1,"message":"353","line":8,"column":34,"nodeType":"315","messageId":"316","endLine":8,"endColumn":52},{"ruleId":"313","severity":1,"message":"354","line":8,"column":54,"nodeType":"315","messageId":"316","endLine":8,"endColumn":75},{"ruleId":"313","severity":1,"message":"355","line":21,"column":5,"nodeType":"315","messageId":"316","endLine":21,"endColumn":19},{"ruleId":"313","severity":1,"message":"356","line":139,"column":9,"nodeType":"315","messageId":"316","endLine":139,"endColumn":22},{"ruleId":"357","severity":1,"message":"358","line":167,"column":87,"nodeType":"359","messageId":"360","endLine":167,"endColumn":88,"suggestions":"361"},{"ruleId":"357","severity":1,"message":"358","line":167,"column":97,"nodeType":"359","messageId":"360","endLine":167,"endColumn":98,"suggestions":"362"},{"ruleId":"313","severity":1,"message":"363","line":4,"column":9,"nodeType":"315","messageId":"316","endLine":4,"endColumn":16},{"ruleId":"313","severity":1,"message":"350","line":16,"column":25,"nodeType":"315","messageId":"316","endLine":16,"endColumn":37},{"ruleId":"313","severity":1,"message":"364","line":41,"column":13,"nodeType":"315","messageId":"316","endLine":41,"endColumn":18},{"ruleId":"313","severity":1,"message":"350","line":42,"column":25,"nodeType":"315","messageId":"316","endLine":42,"endColumn":37},{"ruleId":"313","severity":1,"message":"365","line":44,"column":18,"nodeType":"315","messageId":"316","endLine":44,"endColumn":26},{"ruleId":"336","severity":1,"message":"366","line":65,"column":7,"nodeType":"338","endLine":65,"endColumn":20,"suggestions":"367"},{"ruleId":"368","severity":1,"message":"369","line":188,"column":33,"nodeType":"370","endLine":188,"endColumn":78},{"ruleId":"313","severity":1,"message":"371","line":8,"column":10,"nodeType":"315","messageId":"316","endLine":8,"endColumn":18},{"ruleId":"313","severity":1,"message":"372","line":19,"column":12,"nodeType":"315","messageId":"316","endLine":19,"endColumn":23},{"ruleId":"313","severity":1,"message":"350","line":19,"column":25,"nodeType":"315","messageId":"316","endLine":19,"endColumn":37},{"ruleId":"313","severity":1,"message":"373","line":21,"column":18,"nodeType":"315","messageId":"316","endLine":21,"endColumn":26},{"ruleId":"313","severity":1,"message":"349","line":8,"column":10,"nodeType":"315","messageId":"316","endLine":8,"endColumn":17},{"ruleId":"313","severity":1,"message":"350","line":15,"column":24,"nodeType":"315","messageId":"316","endLine":15,"endColumn":36},{"ruleId":"313","severity":1,"message":"374","line":2,"column":16,"nodeType":"315","messageId":"316","endLine":2,"endColumn":22},{"ruleId":"313","severity":1,"message":"375","line":2,"column":23,"nodeType":"315","messageId":"316","endLine":2,"endColumn":31},{"ruleId":"313","severity":1,"message":"376","line":6,"column":10,"nodeType":"315","messageId":"316","endLine":6,"endColumn":26},{"ruleId":"313","severity":1,"message":"377","line":14,"column":34,"nodeType":"315","messageId":"316","endLine":14,"endColumn":41},{"ruleId":"313","severity":1,"message":"350","line":16,"column":25,"nodeType":"315","messageId":"316","endLine":16,"endColumn":37},{"ruleId":"313","severity":1,"message":"378","line":98,"column":7,"nodeType":"315","messageId":"316","endLine":98,"endColumn":15},{"ruleId":"379","severity":1,"message":"380","line":19,"column":37,"nodeType":"381","messageId":"382","endLine":19,"endColumn":39},{"ruleId":"313","severity":1,"message":"383","line":128,"column":7,"nodeType":"315","messageId":"316","endLine":128,"endColumn":14},{"ruleId":"313","severity":1,"message":"384","line":14,"column":5,"nodeType":"315","messageId":"316","endLine":14,"endColumn":11},{"ruleId":"336","severity":1,"message":"385","line":134,"column":4,"nodeType":"338","endLine":134,"endColumn":6,"suggestions":"386"},{"ruleId":"313","severity":1,"message":"350","line":12,"column":25,"nodeType":"315","messageId":"316","endLine":12,"endColumn":37},{"ruleId":"313","severity":1,"message":"387","line":15,"column":11,"nodeType":"315","messageId":"316","endLine":15,"endColumn":19},{"ruleId":"336","severity":1,"message":"388","line":26,"column":6,"nodeType":"338","endLine":26,"endColumn":8,"suggestions":"389"},{"ruleId":"368","severity":1,"message":"369","line":53,"column":62,"nodeType":"370","endLine":53,"endColumn":109},{"ruleId":"368","severity":1,"message":"369","line":78,"column":62,"nodeType":"370","endLine":78,"endColumn":146},{"ruleId":"313","severity":1,"message":"390","line":222,"column":7,"nodeType":"315","messageId":"316","endLine":222,"endColumn":19},{"ruleId":"313","severity":1,"message":"391","line":222,"column":7,"nodeType":"315","messageId":"316","endLine":222,"endColumn":11},{"ruleId":"313","severity":1,"message":"392","line":1,"column":16,"nodeType":"315","messageId":"316","endLine":1,"endColumn":25},{"ruleId":"313","severity":1,"message":"375","line":1,"column":26,"nodeType":"315","messageId":"316","endLine":1,"endColumn":34},{"ruleId":"313","severity":1,"message":"393","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":29},{"ruleId":"313","severity":1,"message":"394","line":240,"column":7,"nodeType":"315","messageId":"316","endLine":240,"endColumn":11},{"ruleId":"368","severity":1,"message":"369","line":351,"column":6,"nodeType":"370","endLine":351,"endColumn":68},{"ruleId":"313","severity":1,"message":"395","line":357,"column":10,"nodeType":"315","messageId":"316","endLine":357,"endColumn":16},{"ruleId":"313","severity":1,"message":"375","line":1,"column":16,"nodeType":"315","messageId":"316","endLine":1,"endColumn":24},{"ruleId":"368","severity":1,"message":"369","line":35,"column":28,"nodeType":"370","endLine":35,"endColumn":75},{"ruleId":"368","severity":1,"message":"369","line":60,"column":29,"nodeType":"370","endLine":60,"endColumn":113},{"ruleId":"379","severity":1,"message":"396","line":30,"column":27,"nodeType":"381","messageId":"397","endLine":30,"endColumn":29},{"ruleId":"313","severity":1,"message":"398","line":5,"column":18,"nodeType":"315","messageId":"316","endLine":5,"endColumn":22},{"ruleId":"313","severity":1,"message":"399","line":6,"column":12,"nodeType":"315","messageId":"316","endLine":6,"endColumn":16},{"ruleId":"313","severity":1,"message":"400","line":6,"column":18,"nodeType":"315","messageId":"316","endLine":6,"endColumn":24},{"ruleId":"313","severity":1,"message":"401","line":54,"column":7,"nodeType":"315","messageId":"316","endLine":54,"endColumn":16},{"ruleId":"313","severity":1,"message":"402","line":64,"column":7,"nodeType":"315","messageId":"316","endLine":64,"endColumn":12},{"ruleId":"368","severity":1,"message":"369","line":32,"column":13,"nodeType":"370","endLine":32,"endColumn":38},{"ruleId":"368","severity":1,"message":"369","line":59,"column":12,"nodeType":"370","endLine":59,"endColumn":37},{"ruleId":"313","severity":1,"message":"403","line":14,"column":3,"nodeType":"315","messageId":"316","endLine":14,"endColumn":9},{"ruleId":"313","severity":1,"message":"404","line":49,"column":9,"nodeType":"315","messageId":"316","endLine":49,"endColumn":18},{"ruleId":"368","severity":1,"message":"369","line":119,"column":95,"nodeType":"370","endLine":119,"endColumn":120},{"ruleId":"368","severity":1,"message":"369","line":132,"column":74,"nodeType":"370","endLine":132,"endColumn":99},{"ruleId":"313","severity":1,"message":"405","line":16,"column":3,"nodeType":"315","messageId":"316","endLine":16,"endColumn":18},{"ruleId":"313","severity":1,"message":"406","line":17,"column":3,"nodeType":"315","messageId":"316","endLine":17,"endColumn":18},{"ruleId":"313","severity":1,"message":"407","line":18,"column":3,"nodeType":"315","messageId":"316","endLine":18,"endColumn":25},{"ruleId":"313","severity":1,"message":"408","line":19,"column":3,"nodeType":"315","messageId":"316","endLine":19,"endColumn":16},{"ruleId":"313","severity":1,"message":"409","line":20,"column":3,"nodeType":"315","messageId":"316","endLine":20,"endColumn":11},{"ruleId":"313","severity":1,"message":"410","line":21,"column":3,"nodeType":"315","messageId":"316","endLine":21,"endColumn":18},{"ruleId":"313","severity":1,"message":"411","line":22,"column":3,"nodeType":"315","messageId":"316","endLine":22,"endColumn":11},{"ruleId":"313","severity":1,"message":"412","line":23,"column":3,"nodeType":"315","messageId":"316","endLine":23,"endColumn":16},{"ruleId":"313","severity":1,"message":"413","line":24,"column":3,"nodeType":"315","messageId":"316","endLine":24,"endColumn":15},{"ruleId":"313","severity":1,"message":"414","line":32,"column":10,"nodeType":"315","messageId":"316","endLine":32,"endColumn":19},{"ruleId":"313","severity":1,"message":"415","line":40,"column":22,"nodeType":"315","messageId":"316","endLine":40,"endColumn":36},{"ruleId":"313","severity":1,"message":"416","line":44,"column":9,"nodeType":"315","messageId":"316","endLine":44,"endColumn":20},{"ruleId":"368","severity":1,"message":"369","line":88,"column":25,"nodeType":"370","endLine":88,"endColumn":50},"no-native-reassign",["417"],"no-negated-in-lhs",["418"],"no-unused-vars","'useMoralis' is defined but never used.","Identifier","unusedVar","'cookies' is assigned a value but never used.","'variables' is defined but never used.","Program","'analytics' is assigned a value but never used.","'perf' is assigned a value but never used.","'toDegrees' is defined but never used.","'InfoWrapper' is assigned a value but never used.","'isDesktop' is defined but never used.","'isMobileOnly' is defined but never used.","'CookiesProvider' is defined but never used.","'Web3' is defined but never used.","'authenticate' is assigned a value but never used.","'user' is assigned a value but never used.","'isAuthenticating' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'toggleNav' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeNav' and 'isAuthenticated'. Either include them or remove the dependency array.","ArrayExpression",["419"],"'toggleHome' is assigned a value but never used.","'BtnGroup' is assigned a value but never used.","'BtnWrapper' is assigned a value but never used.","'BtnImg' is assigned a value but never used.","'Icon' is assigned a value but never used.","'CloseIcon' is assigned a value but never used.","'NavHamburger' is assigned a value but never used.","'HamIcon' is assigned a value but never used.","'MintDateWrapperMobile' is assigned a value but never used.","'Heading' is defined but never used.","'windowHeight' is assigned a value but never used.","'OrbitControls' is defined but never used.","'IoMdCloseCircleOutline' is defined but never used.","'IoMdArrowRoundBack' is defined but never used.","'IoMdArrowRoundForward' is defined but never used.","'resizeDebounce' is assigned a value but never used.","'planeGeometry' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["420","421"],["422","423"],"'Textbox' is defined but never used.","'title' is assigned a value but never used.","'setPairs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'windowWidth'. Either include it or remove the dependency array.",["424"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isMobile' is defined but never used.","'windowWidth' is assigned a value but never used.","'setPaths' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'MobileTextViewer' is defined but never used.","'preview' is assigned a value but never used.","'ReadMore' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'BtnWrap' is assigned a value but never used.","'YTDrow' is defined but never used.","React Hook useEffect has a missing dependency: 'toggleConnect'. Either include it or remove the dependency array.",["425"],"'mintText' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'close' and 'targetElement'. Either include them or remove the dependency array.",["426"],"'ApplyBtnWrap' is assigned a value but never used.","'Bars' is assigned a value but never used.","'useEffect' is defined but never used.","'useWindowDimensions' is defined but never used.","'Book' is assigned a value but never used.","'MyBook' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'size' is assigned a value but never used.","'name' is assigned a value but never used.","'number' is assigned a value but never used.","'TitleWrap' is assigned a value but never used.","'Title' is assigned a value but never used.","'Button' is defined but never used.","'toggleAll' is assigned a value but never used.","'DonationSection' is defined but never used.","'DonationHeading' is defined but never used.","'DonationPercentWrapper' is defined but never used.","'PercentAmount' is defined but never used.","'Disabled' is defined but never used.","'CheckboxWrapper' is defined but never used.","'Checkbox' is defined but never used.","'DropdownArrow' is defined but never used.","'DonationText' is defined but never used.","'Transform' is defined but never used.","'donationActive' is assigned a value but never used.","'donationAmt' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"messageId":"429","fix":"430","desc":"431"},{"messageId":"432","fix":"433","desc":"434"},{"messageId":"429","fix":"435","desc":"431"},{"messageId":"432","fix":"436","desc":"434"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},"Update the dependencies array to be: [changeNav, isAuthenticated]",{"range":"443","text":"444"},"removeEscape",{"range":"445","text":"446"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"447","text":"448"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"449","text":"446"},{"range":"450","text":"448"},"Update the dependencies array to be: [index, pairs, windowWidth]",{"range":"451","text":"452"},"Update the dependencies array to be: [toggleConnect]",{"range":"453","text":"454"},"Update the dependencies array to be: [close, targetElement]",{"range":"455","text":"456"},[1962,1964],"[changeNav, isAuthenticated]",[4530,4531],"",[4530,4530],"\\",[4540,4541],[4540,4540],[1641,1654],"[index, pairs, windowWidth]",[3888,3890],"[toggleConnect]",[898,900],"[close, targetElement]"]