{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/coderschool/dev/Zion/newrepo/gat-dev/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _jsxFileName = \"/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/inventory.js\",\n    _this = this,\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8,\n    _templateObject9,\n    _templateObject10,\n    _templateObject11,\n    _templateObject12,\n    _templateObject13,\n    _templateObject14,\n    _templateObject15,\n    _templateObject16;\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NftCard } from './nftCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Inventory = function Inventory(_ref) {\n  var dispatch = _ref.dispatch,\n      state = _ref.state,\n      inventory = _ref.inventory;\n  var displayedNFTs = getDisplayed(inventory, state.currentIndex, 4);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ConnectBtnWrap, {\n      children: [/*#__PURE__*/_jsxDEV(BtnImg, {\n        src: './Assets/comicWidgets/button.png'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, _this), /*#__PURE__*/_jsxDEV(WalletTxt, {\n        children: \"Wallet Connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, _this), /*#__PURE__*/_jsxDEV(InviteBtnWrap, {\n      children: [/*#__PURE__*/_jsxDEV(BtnImg, {\n        src: './Assets/comicWidgets/button.png'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, _this), /*#__PURE__*/_jsxDEV(WalletTxt, {\n        style: {\n          fontSize: '60%'\n        },\n        children: \"Invite +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, _this), /*#__PURE__*/_jsxDEV(BG, {\n      src: './Assets/comicWidgets/inventory_base.png'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, _this), /*#__PURE__*/_jsxDEV(TitleWrap, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, _this), /*#__PURE__*/_jsxDEV(MidSection, {\n      children: /*#__PURE__*/_jsxDEV(MidSectionWrap, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleWrap, {\n          children: [/*#__PURE__*/_jsxDEV(ChevronWrap, {\n            onClick: function onClick() {\n              dispatch({\n                type: 'CHANGE_INDEX',\n                newIndex: state.currentIndex -= 1\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/icons/arrow.png',\n              height: '100%'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 28\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CardHolder, {\n            onClick: function onClick() {\n              console.log('toggle'); // adds to selected\n\n              if (!state.selectedNFTs.includes(inventory[state.currentIndex])) {\n                dispatch({\n                  type: 'ADD_SELECTED',\n                  selected: inventory[state.currentIndex]\n                }); // removes from selected\n              } else {\n                dispatch({\n                  type: 'REMOVE_SELECTED',\n                  selected: inventory[state.currentIndex]\n                });\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(SelectBox, {\n              type: 'checkbox',\n              checked: state.selectedNFTs.includes(inventory[state.currentIndex]),\n              onChange: function onChange(event) {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(NftCard, {\n              info: inventory[state.currentIndex],\n              isSelected: state.selectedNFTs.includes(inventory[state.currentIndex]),\n              size: \"big\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(ChevronWrap, {\n            onClick: function onClick() {\n              dispatch({\n                type: 'CHANGE_INDEX',\n                newIndex: state.currentIndex += 1\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/icons/arrow.png',\n              height: '100%',\n              style: {\n                transform: 'rotate(180deg)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(GroupWrap, {\n          children: displayedNFTs.map(function (cardInfo, index) {\n            return /*#__PURE__*/_jsxDEV(SmallCardWrap, {\n              showHover: cardInfo.name,\n              onClick: function onClick() {\n                var nftIndex = inventory.indexOf(cardInfo);\n                if (nftIndex !== -1) dispatch({\n                  type: 'CHANGE_INDEX',\n                  newIndex: nftIndex\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(NftCard, {\n                info: cardInfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, _this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 28\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 18\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, _this), /*#__PURE__*/_jsxDEV(InviteBtnWrap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 6\n  }, _this);\n};\n_c = Inventory;\nvar Container = styled.section(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    position: relative;\\n    width: 100%;\\n    height: 100%;\\n    top: 0%;\\n     /* margin-bottom: 1rem; */\\n    /* background-color: aliceblue; */\\n\"])));\n_c2 = Container;\nvar BG = styled.img(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    width: 100%;\\n\"])));\n_c3 = BG;\nvar TitleWrap = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\nposition: absolute;\\ntop: 0;\\nleft: 0;\\nwidth: 50%;\\n/* background-color: green; */\\nmargin: \", \";\\n\"])), function (props) {\n  return props.theme.comicverse.margin;\n});\n_c4 = TitleWrap;\nvar Title = styled.h4(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    color: \", \";\\n    text-transform:uppercase;\\n    font-weight: 500;\\n@media screen and (max-width: \", \"){\\n    font-size: .8rem;\\n    /* background-color: red; */\\n  \\n    }\\n\"])), function (props) {\n  return props.theme.colors.white;\n}, function (props) {\n  return props.theme.breakpoints.lg;\n});\n_c5 = Title;\nvar MidSection = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 9%;\\n    left: 0;\\n    width: 100%;\\n    height: 75%;\\n    /* background-color: teal; */\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n\"])));\n_c6 = MidSection;\nvar MidSectionWrap = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    margin: \", \";\\n    width: 100%;\\n    height: 90%;\\n    /* background-color: yellow; */\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\"])), function (props) {\n  return props.theme.comicverse.margin;\n});\n_c7 = MidSectionWrap;\nvar ToggleWrap = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    /* background-color: red; */\\n    width: 52%;\\n    height: 100%;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n   \\n\"])));\n_c8 = ToggleWrap;\nvar CardHolder = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n    width: 75%;\\n    /* height: 100%; */\\n    display: flex;\\n    align-items: center;\\n    position: relative;\\n    /* padding-bottom: 3.8%; */\\n \\n    &:hover{\\n        cursor: pointer;\\n    }\\n    /* background-color: black; */\\n\"])));\n_c9 = CardHolder;\nvar SelectBox = styled.input(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n    -webkit-appearance: none;\\n    -moz-appearance: none;\\n    appearance: none;\\n    position: absolute;\\n    top: 5%;\\n    right: 5%;\\n    z-index: 10;\\n    /* transition: all .2s cubic-bezier(0.215, 0.610, 0.355, 1); */\\n\\n    display: inline-block;\\n    width: 20%;\\n    height: 20%;\\n    max-width: 25px;\\n    max-height: 25px;\\n    padding: 2px;\\n\\n    /* background-color only for content */\\n    background-clip: content-box;\\n    border: 2px solid #4a4a6b;\\n    border-radius: 4px;\\n    background-color: #4a4a6b;\\n\\n    &:checked{\\n        -webkit-appearance: auto;\\n        -moz-appearance: auto;\\n        appearance: auto;\\n        background-color: #FAFAFC;\\n        border: 2px solid #FAFAFC;\\n        padding: 0px;\\n    }\\n\\n    &:focus{\\n        outline: none !important;\\n    }\\n\\n\\n     &:hover{\\n    cursor: pointer;\\n  }\\n\"])));\n_c10 = SelectBox;\nvar GroupWrap = styled.div(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n    /* background-color: blue; */\\n    width: 48%;\\n    height: 100%;\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: space-evenly;\\n    /* align-items: space-between; */\\n\\n\"])));\n_c11 = GroupWrap;\nvar SmallCardWrap = styled.div(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\"\\n    width: 40%;\\n    height: 50%;\\n\\n     \", \"\\n\"])), function (_ref2) {\n  var showHover = _ref2.showHover;\n  return showHover ? \"\\n       &:hover{\\n        cursor: pointer;\\n    }\\n    \\n    \" : \"\";\n});\n_c12 = SmallCardWrap;\nvar ChevronWrap = styled.button(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\"\\n    margin: 0 .2rem;\\n    background-color: transparent;\\n    border: none;\\n    height: 30px;\\n     &:hover{\\n         cursor: pointer;\\n         filter: drop-shadow(0 0 6px rgb(255, 255, 255, .9));\\n    }\\n\"])));\n_c13 = ChevronWrap;\nvar InviteBtnWrap = styled.div(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    bottom: -2.5%;\\n    right: .5%;\\n    margin: .75rem 0;\\n    width: 26.2%;\\n    height: 12.5%;\\n    /* background-color: red; */\\n\\n\"])));\n_c14 = InviteBtnWrap;\nvar ConnectBtnWrap = styled.div(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    bottom: 100%;\\n    left: 0;\\n    height: 15%;\\n    margin: .75rem 0;\\n    width: 47%;\\n    min-height: 40px;\\n    /* background-color: azure; */\\n\\n\"])));\n_c15 = ConnectBtnWrap;\nvar BtnImg = styled.img(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\"\\n    height: 100%;\\n    width: 100%;\\n    \\n\\n    \"])));\n_c16 = BtnImg;\nvar WalletTxt = styled.div(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    padding: .3rem;\\n    top: 0%;\\n    width: 100%;\\n    height: 100%;\\n    color: white;\\n    font-size: 70%;\\n    text-transform: uppercase;\\n    background-color: transparent;\\n    display: flex;\\n    align-items: center;\\n    text-align: center;\\n    justify-content: center;\\n    z-index: 50;\\n     /* background-color: red; */\\n    \\n    /* transition: translateX(50%); */\\n\\n    &:hover{\\n        transition: all ease .2s;\\n        cursor: pointer;\\n         -webkit-box-shadow:0px 0px 5px 0px rgba(255,255,255,0.5);\\n        -moz-box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\\n        box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\\n        background-color: rgba(255,255,255,.25);\\n\\n    }\\n    \\n\\n\"])));\n_c17 = WalletTxt;\n\nvar getDisplayed = function getDisplayed(inventory, currentIndex, displayLength) {\n  var lastIndex = inventory.length - 1;\n  var displayedNFTs = []; // sets mini displayed nfts \n\n  for (var i = 1; i < displayLength + 1; i++) {\n    // logic for next index over last index\n    if (currentIndex + i > lastIndex) {\n      var nextNft = inventory[Math.abs(inventory.length - (currentIndex + i))]; // adds empty block\n\n      if (displayedNFTs.includes(nextNft) || nextNft === inventory[currentIndex] || Math.abs(inventory.length - (currentIndex + i)) > lastIndex) {\n        displayedNFTs.push({}); // adds next wrapped nft\n      } else {\n        displayedNFTs.push(nextNft);\n      }\n    } // add next \n    else {\n      displayedNFTs.push(inventory[currentIndex + i]);\n    }\n  }\n\n  return displayedNFTs;\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n\n$RefreshReg$(_c, \"Inventory\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"BG\");\n$RefreshReg$(_c4, \"TitleWrap\");\n$RefreshReg$(_c5, \"Title\");\n$RefreshReg$(_c6, \"MidSection\");\n$RefreshReg$(_c7, \"MidSectionWrap\");\n$RefreshReg$(_c8, \"ToggleWrap\");\n$RefreshReg$(_c9, \"CardHolder\");\n$RefreshReg$(_c10, \"SelectBox\");\n$RefreshReg$(_c11, \"GroupWrap\");\n$RefreshReg$(_c12, \"SmallCardWrap\");\n$RefreshReg$(_c13, \"ChevronWrap\");\n$RefreshReg$(_c14, \"InviteBtnWrap\");\n$RefreshReg$(_c15, \"ConnectBtnWrap\");\n$RefreshReg$(_c16, \"BtnImg\");\n$RefreshReg$(_c17, \"WalletTxt\");","map":{"version":3,"names":["React","useState","styled","NftCard","Inventory","dispatch","state","inventory","displayedNFTs","getDisplayed","currentIndex","fontSize","type","newIndex","console","log","selectedNFTs","includes","selected","event","transform","map","cardInfo","index","name","nftIndex","indexOf","Container","section","BG","img","TitleWrap","div","props","theme","comicverse","margin","Title","h4","colors","white","breakpoints","lg","MidSection","MidSectionWrap","ToggleWrap","CardHolder","SelectBox","input","GroupWrap","SmallCardWrap","showHover","ChevronWrap","button","InviteBtnWrap","ConnectBtnWrap","BtnImg","WalletTxt","displayLength","lastIndex","length","i","nextNft","Math","abs","push"],"sources":["/Users/coderschool/dev/Zion/newrepo/gat-dev/src/components/comicverseComponents/inventory.js"],"sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { NftCard } from './nftCard';\n\nexport const Inventory = ({\n    dispatch,state,\n    inventory}) => {\n\n     let displayedNFTs = getDisplayed(inventory, state.currentIndex, 4);\n\n  return (\n   \n     <Container>\n         <ConnectBtnWrap>\n             <BtnImg src={'./Assets/comicWidgets/button.png'}/>\n             <WalletTxt>Wallet Connected</WalletTxt>\n         </ConnectBtnWrap>\n\n         <InviteBtnWrap>\n             <BtnImg src={'./Assets/comicWidgets/button.png'}/>\n             <WalletTxt style={{fontSize: '60%'}}>Invite +</WalletTxt>\n         </InviteBtnWrap>\n\n         <BG src={'./Assets/comicWidgets/inventory_base.png'}/>\n         <TitleWrap>\n           <Title>Inventory</Title>\n         </TitleWrap>\n\n         <MidSection>\n            <MidSectionWrap>\n                <ToggleWrap>\n\n                    <ChevronWrap onClick={()=>{\n                        dispatch({type: 'CHANGE_INDEX', newIndex: state.currentIndex -= 1})\n                        }}><img src={'/icons/arrow.png'} height={'100%'}/></ChevronWrap>\n\n                    <CardHolder  onClick={()=>{\n                                    console.log('toggle')\n                                        // adds to selected\n                                if( !state.selectedNFTs.includes(inventory[state.currentIndex])){\n                                    dispatch({type: 'ADD_SELECTED', selected: inventory[state.currentIndex]});\n\n                                // removes from selected\n                                }else{ \n                                    dispatch({type: 'REMOVE_SELECTED', selected: inventory[state.currentIndex]});\n                                }\n                            }}>\n                        {/* check box logic */}\n                        <SelectBox type={'checkbox'} \n                                    checked={ state.selectedNFTs.includes(inventory[state.currentIndex])}\n                                    onChange={(event) => { }}/>\n\n                        <NftCard info={inventory[state.currentIndex]} isSelected={state.selectedNFTs.includes(inventory[state.currentIndex])} size='big'/>\n\n                    </CardHolder>\n\n                     <ChevronWrap onClick={()=>{\n                     \n                        dispatch({type: 'CHANGE_INDEX', newIndex: state.currentIndex += 1})\n                         }}><img src={'/icons/arrow.png'} height={'100%'} style={{transform:'rotate(180deg)'}}/></ChevronWrap>\n\n                </ToggleWrap>\n\n                 <GroupWrap>\n                    {displayedNFTs.map((cardInfo, index)=>{\n\n                    return <SmallCardWrap \n                        key = {index}\n                        showHover={cardInfo.name}\n                        onClick={()=>{    \n                            let nftIndex = inventory.indexOf(cardInfo);\n                            if (nftIndex !== -1)  dispatch({type: 'CHANGE_INDEX', newIndex: nftIndex})\n                            }}\n                            >\n                            <NftCard info={cardInfo}/>\n                        </SmallCardWrap>;\n                    })}  \n                </GroupWrap>\n               \n\n            </MidSectionWrap>\n         </MidSection>\n\n         <InviteBtnWrap>\n\n         </InviteBtnWrap>\n\n   </Container> \n           \n  )\n}\n\nconst Container = styled.section`\n    position: relative;\n    width: 100%;\n    height: 100%;\n    top: 0%;\n     /* margin-bottom: 1rem; */\n    /* background-color: aliceblue; */\n`\n\nconst BG = styled.img`\n    width: 100%;\n`\n\nconst TitleWrap = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 50%;\n/* background-color: green; */\nmargin: ${props => props.theme.comicverse.margin};\n`\n\nconst Title = styled.h4`\n    color: ${props => props.theme.colors.white};\n    text-transform:uppercase;\n    font-weight: 500;\n@media screen and (max-width: ${props => props.theme.breakpoints.lg}){\n    font-size: .8rem;\n    /* background-color: red; */\n  \n    }\n`\n\nconst MidSection = styled.div`\n    position: absolute;\n    top: 9%;\n    left: 0;\n    width: 100%;\n    height: 75%;\n    /* background-color: teal; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n`\nconst MidSectionWrap = styled.div`\n    margin: ${props => props.theme.comicverse.margin};\n    width: 100%;\n    height: 90%;\n    /* background-color: yellow; */\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst ToggleWrap = styled.div`\n    /* background-color: red; */\n    width: 52%;\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n   \n`\nconst CardHolder = styled.div`\n    width: 75%;\n    /* height: 100%; */\n    display: flex;\n    align-items: center;\n    position: relative;\n    /* padding-bottom: 3.8%; */\n \n    &:hover{\n        cursor: pointer;\n    }\n    /* background-color: black; */\n`\nconst SelectBox = styled.input`\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    position: absolute;\n    top: 5%;\n    right: 5%;\n    z-index: 10;\n    /* transition: all .2s cubic-bezier(0.215, 0.610, 0.355, 1); */\n\n    display: inline-block;\n    width: 20%;\n    height: 20%;\n    max-width: 25px;\n    max-height: 25px;\n    padding: 2px;\n\n    /* background-color only for content */\n    background-clip: content-box;\n    border: 2px solid #4a4a6b;\n    border-radius: 4px;\n    background-color: #4a4a6b;\n\n    &:checked{\n        -webkit-appearance: auto;\n        -moz-appearance: auto;\n        appearance: auto;\n        background-color: #FAFAFC;\n        border: 2px solid #FAFAFC;\n        padding: 0px;\n    }\n\n    &:focus{\n        outline: none !important;\n    }\n\n\n     &:hover{\n    cursor: pointer;\n  }\n`\n\nconst GroupWrap = styled.div`\n    /* background-color: blue; */\n    width: 48%;\n    height: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    /* align-items: space-between; */\n\n`\n\nconst SmallCardWrap = styled.div`\n    width: 40%;\n    height: 50%;\n\n     ${({showHover})=>(showHover ? `\n       &:hover{\n        cursor: pointer;\n    }\n    \n    `: ``)}\n`\n\nconst ChevronWrap = styled.button`\n    margin: 0 .2rem;\n    background-color: transparent;\n    border: none;\n    height: 30px;\n     &:hover{\n         cursor: pointer;\n         filter: drop-shadow(0 0 6px rgb(255, 255, 255, .9));\n    }\n`\n\n\nconst InviteBtnWrap = styled.div`\n    position: absolute;\n    bottom: -2.5%;\n    right: .5%;\n    margin: .75rem 0;\n    width: 26.2%;\n    height: 12.5%;\n    /* background-color: red; */\n\n`\n\n\n\nconst ConnectBtnWrap = styled.div`\n    position: absolute;\n    bottom: 100%;\n    left: 0;\n    height: 15%;\n    margin: .75rem 0;\n    width: 47%;\n    min-height: 40px;\n    /* background-color: azure; */\n\n`\n\n    const BtnImg = styled.img`\n    height: 100%;\n    width: 100%;\n    \n\n    `\n\n\nconst WalletTxt = styled.div`\n    position: absolute;\n    padding: .3rem;\n    top: 0%;\n    width: 100%;\n    height: 100%;\n    color: white;\n    font-size: 70%;\n    text-transform: uppercase;\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    z-index: 50;\n     /* background-color: red; */\n    \n    /* transition: translateX(50%); */\n\n    &:hover{\n        transition: all ease .2s;\n        cursor: pointer;\n         -webkit-box-shadow:0px 0px 5px 0px rgba(255,255,255,0.5);\n        -moz-box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\n        box-shadow: 0px 0px 5px 0px rgba(255,255,255,0.5);\n        background-color: rgba(255,255,255,.25);\n\n    }\n    \n\n`\n\n\n\nconst getDisplayed = (inventory, currentIndex, displayLength) => {\n        const lastIndex = inventory.length-1;\n        let displayedNFTs = []\n        // sets mini displayed nfts \n        for (let i=1; i<displayLength+1 ; i++ ) {\n        \n            // logic for next index over last index\n            if(currentIndex + i > lastIndex){\n            \n                let nextNft = inventory[Math.abs(inventory.length-(currentIndex + i))];\n\n                // adds empty block\n                if (displayedNFTs.includes(nextNft) || \n                    nextNft === inventory[currentIndex] || \n                    Math.abs(inventory.length-(currentIndex + i)) > lastIndex){\n                    displayedNFTs.push({});\n                \n                // adds next wrapped nft\n                } else { displayedNFTs.push(nextNft); }       \n            }\n            // add next \n            else{ displayedNFTs.push(inventory[currentIndex+i]) }\n        }\n        return displayedNFTs;\n    }\n\n\n    "],"mappings":"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"},"metadata":{},"sourceType":"module"}